{"version":3,"sources":["s2-features/f6-packs/p1-ui/u1-packs/PacksContainer.module.scss","s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText.module.scss","s1-main/m1-ui/u0-common/c3-SuperCheckbox/SuperCheckbox.module.scss","s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton.module.scss","s1-main/m1-ui/u0-common/c7-Error/Error.module.scss","s1-main/m1-ui/u0-common/Atoms/SearchData/SearchData.module.scss","s1-main/m1-ui/u2-main/Main.module.scss","s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText.tsx","s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton.tsx","s1-main/m1-ui/u0-common/c3-SuperCheckbox/SuperCheckbox.tsx","s1-main/m1-ui/u0-common/c8-Assets/Spin.svg","s2-features/f1-login/l2-bll/loginReducer.ts","s1-main/m1-ui/u0-common/c7-Error/Error.tsx","s2-features/f1-login/l1-ui/u1-login/Login.tsx","s1-main/m3-dal/instance.ts","s2-features/f1-login/l3-dal/loginAPI.ts","s2-features/f2-registration/r2-bll/registrationReducer.ts","s2-features/f1-login/l1-ui/u1-login/LoginContainer.tsx","s2-features/f1-login/l1-ui/LoginPage.tsx","s1-main/m1-ui/u3-routes/Page404.tsx","s2-features/f2-registration/r1-ui/u1-registration/Registration.tsx","s2-features/f2-registration/r3-dal/registrationAPI.ts","s2-features/f5-newPasswordEntry/npe2-bll/updatePasswordReducer.ts","s2-features/f2-registration/r1-ui/u1-registration/RegistrationContainer.tsx","s2-features/f2-registration/r1-ui/RegistrationPage.tsx","s1-main/m1-ui/u0-common/ComponentsTestRack.tsx","s2-features/f3-profile/p1-ui/u1-profile/Profile.tsx","s2-features/f3-profile/p1-ui/u1-profile/ProfileContainer.tsx","s2-features/f3-profile/p1-ui/ProfilePage.tsx","s2-features/f4-passwordRecovery/pr3-dal/passwordRecoveryAPI.ts","s2-features/f5-newPasswordEntry/npe3-dal/updatePassAPI.ts","s2-features/f4-passwordRecovery/pr2-bll/passwordRecoveryReducer.ts","s2-features/f6-packs/p2-bll/packsReducer.ts","s2-features/f4-passwordRecovery/pr1-ui/u1-passwordRecovery/PasswordRecovery.tsx","s2-features/f4-passwordRecovery/pr1-ui/u1-passwordRecovery/PasswordRecoveryContainer.tsx","s2-features/f4-passwordRecovery/pr1-ui/PasswordRecoveryPage.tsx","s2-features/f5-newPasswordEntry/npe1-ui/u1-passwordEntry/NewPasswordEntry.tsx","s2-features/f5-newPasswordEntry/npe1-ui/u1-passwordEntry/NewPasswordEntryContainer.tsx","s2-features/f5-newPasswordEntry/npe1-ui/NewPasswordEntryPage.tsx","s2-features/f6-packs/p3-dal/packsAPI.ts","s2-features/f7-cards/c2-bll/cardsReducer.ts","s1-main/m1-ui/u0-common/Atoms/SortButton/SortButton.tsx","s1-main/m1-ui/u0-common/c9-Table/Table.tsx","s2-features/f6-packs/p1-ui/u1-packs/Packs.tsx","s1-main/m1-ui/u0-common/c9-Range/r1-DoubleRange/DoubleRange.tsx","s1-main/m1-ui/u0-common/Atoms/SearchData/SearchData.tsx","s1-main/m1-ui/u0-common/Atoms/SearchData/SearchDataContainer.tsx","s1-main/m1-ui/u0-common/Atoms/Pagination/Pagination.tsx","s1-main/m1-ui/u0-common/Atoms/Modal/Modal.tsx","s2-features/f6-packs/p1-ui/u1-packs/PacksContainer.tsx","s2-features/f6-packs/p1-ui/u1-packs/usePacks.tsx","s2-features/f6-packs/p1-ui/PacksPage.tsx","s2-features/f7-cards/c1-ui/u1-cards/Cards.tsx","s2-features/f7-cards/c3-dal/cardsAPI.ts","s2-features/f9-grades/g3-dal/gradesAPI.ts","s2-features/f8-learn/l2-bll/learnReducer.ts","s2-features/f7-cards/c1-ui/u1-cards/CardsContainer.tsx","s2-features/f7-cards/c1-ui/u1-cards/useCards.tsx","s2-features/f7-cards/c1-ui/CardsPage.tsx","s2-features/f9-grades/g1-ui/u1-grades/Grades.tsx","s2-features/f9-grades/g1-ui/u1-grades/GradesContainer.tsx","s2-features/f9-grades/g1-ui/GradesPage.tsx","s2-features/f8-learn/l1-ui/u1-learn/Learn.tsx","s2-features/f8-learn/l1-ui/u1-learn/LearnContainer.tsx","s2-features/f8-learn/l1-ui/LearnPage.tsx","s1-main/m1-ui/u3-routes/Routes.tsx","s1-main/m1-ui/u4-header/Header.tsx","s1-main/m1-ui/u2-main/Main.tsx","s1-main/m2-bll/store.ts","s2-features/f3-profile/p2-bll/profileReducer.ts","s1-main/m1-ui/u1-app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","placeholder","className","spanClassName","restProps","finalInputClassName","s","formFieldError","formField","formGroup","id","e","currentTarget","value","key","SuperButton","red","finalClassName","btn","SuperCheckbox","onChangeChecked","children","checkbox","checked","check","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","transform","cx","cy","r","fill","fillOpacity","attributeName","begin","values","keyTimes","dur","repeatCount","_ref6","_ref7","_ref8","_ref9","SvgSpin","_ref","svgRef","title","titleId","props","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","ref","LOGIN","ForwardRef","Error","textError","Login","React","memo","formik","marginTop","onSubmit","handleSubmit","isSubmitting","htmlFor","getFieldProps","errors","email","password","disabled","isValid","marginRight","to","PATH","REGISTRATION","PASSWORD_RECOVERY","LoginWithMemo","nextProps","instance","axios","create","baseURL","withCredentials","loginAPI","login","data","a","post","response","logout","delete","me","initialState","name","userID","isLoggedIn","pending","actions","SET_USER","IS_LOGGED_IN","SET_ERROR","SET_PENDING","SET_USER_ID","errorHandler","dispatch","message","thunks","_id","LoginContainer","useSelector","state","useDispatch","useEffect","useFormik","initialValues","rememberMe","validate","test","PROFILE","LoginPage","Page404","Registration","serverErrors","console","log","confirmPassword","dirty","registrationAPI","setRegister","result","UPDATE_PASSWORD","isSuccessRegister","IS_REGISTER","RegistrationContainer","registration","RegistrationPage","ComponentsTestRack","Profile","onClick","ProfileContainer","statePending","useState","setPending","ProfilePage","passRecoveryAPI","recovery","from","token","updatePassAPI","updatePass","resetPasswordToken","passIsUpdated","actionsUpdate","UPDATE_RESULT","status","UPDATED_PASS","updatePasswordTC","res","info","PACKS","inputText","text","CHANGE_PASS","SEND_EMAIL","recoverThunks","PasswordRecovery","inputHandler","buttonClickHandler","PasswordRecoveryContainer","recoveryResult","passRecovery","PasswordRecoveryPage","NewPasswordEntry","resultData","NewPasswordEntryContainer","isUpdate","useParams","WrappedNewPasswordEntry","useMemo","NewPasswordEntryPage","packsAPI","getPacks","searchName","min","max","page","pageCount","sortProducts","get","createPack","cardsPack","deletePack","pack_id","updatePack","put","packs","settings","packTotalCount","sortPack","showAddModal","deleteModal","showDeleteModal","packID","updateModal","showUpdateModal","packName","CARDS","setPacks","FETCH_PACKS","searchPacks","SEARCH_PACKS","setMinMaxPack","SET_MIN_MAX_PACKS","sortPacks","sortedPack","SORT_PACK","getMyPack","GET_MY_PACK","modal","SHOW_ADD_MODAL","SHOW_DELETE_MODAL","SHOW_UPDATE_MODAL","fetchPacks","newPage","newPageCount","getStore","cardPacks","minCardsCount","maxCardsCount","cardPacksTotalCount","private","path","deckCover","grade","rating","shots","SortButton","fetchProducts","setSortProducts","sort","setSort","sortData","x","undefined","Table","model","striped","bordered","hover","variant","renderTitle","map","renderData","Packs","modelPacks","FlexAlignCenter","alignItems","FlexCenterCenter","justifyContent","DoubleRange","step","startData","endData","rangeData","rangeDataHandler","renderTrack","onMouseDown","onTouchStart","borderRadius","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","backgroundColor","boxShadow","position","top","color","fontWeight","fontSize","fontFamily","padding","toFixed","SearchData","SearchDataContainer","startRange","endRange","fetchData","searchValue","rangeValue","getMyData","setRangeData","fetchMyData","setMyFetchData","searchData","Pagination","pageTotalCount","getPage","paginationStyle","buttonStyle","selectStyle","pages","lastPage","Math","ceil","push","filter","p","minHeight","Number","Modal","enableBackground","backgroundStyle","backgroundOnClick","modalStyle","modalOnClick","show","left","opacity","zIndex","PacksContainer","header","pack","cardsCount","updated","slice","marginLeft","usePacks","loginThunk","setName","updateName","modal__container","close__btn","button__container","PacksPage","Cards","cards","modelCards","cardsAPI","getCards","packUserId","cardQuestion","sortCards","createCard","card","deleteCard","updateCard","gradesAPI","cardsTotalCount","CARD","cardsActions","fetchCards","SET_CARDS","searchCards","SEARCH_CARDS","setMinMaxCards","SET_MIN_MAX_CARDS","SORT_CARDS","updateCardGrade","UPDATE_CARD_GRADE","packUId","minGrade","updatedGrade","card_id","CardsContainer","answer","question","answerImg","answerVideo","cardsPack_id","questionImg","questionVideo","comments","useCards","CardsPage","Grades","handlerAddGrade","GradesContainer","GradesPage","Learn","nextQuestion","setChecked","isChecked","cardActions","SET_CARD","SET_IS_PENDING","eraseArray","ERASE_CARDS","LearnContainer","store","learn","LearnPage","NEW_PASSWORD_ENTRY","COMPONENT_TEST_RACK","LEARN","Routes","exact","render","Header","Main","mainContainer","reducers","combineReducers","action","profile","SET_PASS","getCard","sum","reduce","acc","rand","random","newSum","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","window","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0a44a47a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__container\":\"PacksContainer_modal__container__3_tVg\",\"button__container\":\"PacksContainer_button__container__pnIW-\",\"close__btn\":\"PacksContainer_close__btn__HGhu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formField\":\"SuperInputText_formField__2Mpgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__QGvED\",\"check\":\"SuperCheckbox_check__1yPi_\",\"spanClassName\":\"SuperCheckbox_spanClassName__Q-gso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton_btn__23Mcy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__1izbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchData__container\":\"SearchData_SearchData__container__2kVos\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Main_mainContainer__1Du-L\"};","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react'\nimport s from './SuperInputText.module.scss'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n   onChangeText?: (value: string) => void\n   onEnter?: () => void\n   error?: string\n   spanClassName?: string\n   placeholder?: string\n}\n\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = ({\n   type,\n   onChange,\n   onChangeText,\n   onKeyPress,\n   onEnter,\n   error,\n   className,\n   spanClassName,\n   placeholder,\n   ...restProps\n}) => {\n   const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      onChange && onChange(e)\n\n      onChangeText && onChangeText(e.currentTarget.value)\n   }\n   const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n      onKeyPress && onKeyPress(e)\n\n      e.key === 'Enter' && onEnter && onEnter()\n   }\n   const finalInputClassName = error ? `${s.formFieldError}` : `${s.formField}`\n\n   return (\n      <div className={s.formGroup}>\n         <input\n            id='lineInput'\n            placeholder={placeholder}\n            type={'text'}\n            onChange={onChangeCallback}\n            onKeyPress={onKeyPressCallback}\n            className={finalInputClassName}\n            {...restProps}\n         />\n      </div>\n   )\n}\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react'\nimport s from './SuperButton.module.scss'\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n   red?: boolean\n}\n\nexport const SuperButton: React.FC<SuperButtonPropsType> = ({ red, className, ...restProps }) => {\n   const finalClassName = `${className} ${red ? s.red : s.btn}`\n\n   return <button className={finalClassName} {...restProps} />\n}\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react'\nimport s from './SuperCheckbox.module.scss'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n   onChangeChecked?: (checked: boolean) => void\n   spanClassName?: string\n}\n\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\n   type,\n   onChange,\n   onChangeChecked,\n   className,\n   spanClassName,\n   children,\n\n   ...restProps\n}) => {\n   const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      onChange && onChange(e)\n\n      onChangeChecked && onChangeChecked(e.currentTarget.checked)\n   }\n\n   const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n   return (\n      <label className={finalInputClassName}>\n         <input type={'checkbox'} onChange={onChangeCallback} {...restProps} />\n         <span className={s.check} />\n         {children && <span className={s.spanClassName}>{children}</span>}\n      </label>\n   )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(80,50)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(0)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 1\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.875s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.875s\"\n}))));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(71.21320343559643,71.21320343559643)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(45)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.875\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.75s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.75s\"\n}))));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(50,80)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(90)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.75\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.625s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.625s\"\n}))));\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(28.786796564403577,71.21320343559643)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(135)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.625\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.5s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.5s\"\n}))));\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(20,50.00000000000001)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(180)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.5\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.375s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.375s\"\n}))));\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(28.78679656440357,28.786796564403577)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(225)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.375\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.25s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.25s\"\n}))));\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(49.99999999999999,20)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(270)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.25\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.125s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.125s\"\n}))));\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(71.21320343559643,28.78679656440357)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(315)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.125\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"0s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"0s\"\n}))));\n\nfunction SvgSpin(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    style: {\n      margin: \"auto\",\n      background: \"rgb(36, 23, 52) none repeat scroll 0% 0%\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"200px\",\n    height: \"200px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpin);\nexport default __webpack_public_path__ + \"static/media/Spin.594b9f7c.svg\";\nexport { ForwardRef as ReactComponent };","import { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { Dispatch, Reducer } from 'redux'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\nimport { FormikValuesType } from '../l1-ui/u1-login/LoginContainer'\nimport { loginAPI } from '../l3-dal/loginAPI'\n\ntype InitialStateType = typeof initialState\n\ntype ActionTypes = InferActionsType<typeof actions>\n\nenum LOGIN {\n   SET_USER = 'SET_USER',\n   IS_LOGGED_IN = 'IS_LOGGED_IN',\n   SET_ERROR = 'SET_ERROR',\n   SET_PENDING = 'SET_PENDING',\n   SET_USER_ID = 'SET_USER_ID',\n}\n\nconst initialState = {\n   name: '',\n   email: '',\n   userID: '',\n   isLoggedIn: '',\n   error: '',\n   pending: false,\n}\n\nexport const loginReducer: Reducer<InitialStateType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialStateType => {\n   switch (action.type) {\n      case LOGIN.SET_USER:\n         return {\n            ...state,\n            name: action.name,\n            email: action.email,\n         }\n      case LOGIN.IS_LOGGED_IN:\n         return {\n            ...state,\n            isLoggedIn: action.isLoggedIn,\n         }\n      case LOGIN.SET_ERROR:\n         return {\n            ...state,\n            error: action.error,\n         }\n      case LOGIN.SET_PENDING:\n         return {\n            ...state,\n            pending: action.pending,\n         }\n      case LOGIN.SET_USER_ID:\n         return {\n            ...state,\n            userID: action.userID,\n         }\n      default:\n         return state\n   }\n}\n\nexport const actions = {\n   setUserAC: (name: string, email: string) => ({ type: LOGIN.SET_USER as const, email, name }),\n   isLoggedInAC: (isLoggedIn: string) => ({ type: LOGIN.IS_LOGGED_IN as const, isLoggedIn }),\n   setErrorAC: (error: string) => ({ type: LOGIN.SET_ERROR as const, error }),\n   setPendingAC: (pending: boolean) => ({ type: LOGIN.SET_PENDING as const, pending }),\n   setUserID: (userID: string) => ({ type: LOGIN.SET_USER_ID as const, userID }),\n}\n\nconst errorHandler = (e: any, dispatch: Dispatch) => {\n   const error = e.response ? e.response.data.error : e.message + ', more details in the console'\n   dispatch(actions.setErrorAC(error))\n}\n\nexport const thunks = {\n   loginTC: (values: FormikValuesType): AppThunk => async (dispatch) => {\n      try {\n         const response = await loginAPI.login(values)\n         dispatch(actions.isLoggedInAC('logged'))\n         dispatch(actions.setUserAC(response.name, response.email))\n         dispatch(actions.setUserID(response._id))\n      } catch (e) {\n         errorHandler(e, dispatch)\n      }\n   },\n   logoutTC: (): AppThunk => async (dispatch) => {\n      try {\n         await loginAPI.logout()\n         dispatch(actions.isLoggedInAC('notLogged'))\n         dispatch(actions.setUserAC('', ''))\n      } catch (e) {\n         errorHandler(e, dispatch)\n      }\n   },\n   meTC: (): AppThunk => async (dispatch) => {\n      try {\n         dispatch(actions.setPendingAC(true))\n         const response = await loginAPI.me()\n         dispatch(actions.isLoggedInAC('logged'))\n         dispatch(actions.setUserAC(response.name, response.email))\n         dispatch(actions.setPendingAC(false))\n         dispatch(actions.setUserID(response._id))\n      } catch (e) {\n         dispatch(actions.isLoggedInAC('notLogged'))\n         dispatch(actions.setPendingAC(false))\n         errorHandler(e, dispatch)\n      }\n   },\n}\n","import React from 'react'\nimport s from './Error.module.scss'\n\ntype PropsType = {\n   textError?: string\n}\n\nexport const Error = ({ textError }: PropsType) => {\n   return <div className={s.error}>{textError}</div>\n}\n","import React from 'react'\nimport { SuperInputText } from '../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { FormikProps } from 'formik'\nimport { SuperCheckbox } from '../../../../s1-main/m1-ui/u0-common/c3-SuperCheckbox/SuperCheckbox'\nimport { FormikValuesType } from './LoginContainer'\nimport { PATH } from '../../../../s1-main/m1-ui/u3-routes/Routes'\nimport { NavLink } from 'react-router-dom'\nimport { ReactComponent as Loader } from '../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\nimport { Error } from '../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\n\ntype LoginPropsType = {\n   formik: FormikProps<FormikValuesType>\n   error: string\n}\n\nconst Login: React.FC<LoginPropsType> = React.memo(({ formik, error }) => {\n   return (\n      <>\n         <form style={{ marginTop: '20px' }} onSubmit={formik.handleSubmit}>\n            {formik.isSubmitting ? (\n               <Loader />\n            ) : (\n               <>\n                  <label htmlFor='email'>Email Address</label>\n                  <SuperInputText id='email' type='email' {...formik.getFieldProps('email')} />\n                  {formik.errors.email && <Error textError={formik.errors.email} />}\n                  <label htmlFor='password'>Password</label>\n                  <SuperInputText id='password' type='password' {...formik.getFieldProps('password')} />\n                  {formik.errors.password && <Error textError={formik.errors.password} />}\n                  {error && <Error textError={error} />}\n                  <SuperCheckbox id='rememberMe' {...formik.getFieldProps('rememberMe')} children={'Remember Me'} />\n               </>\n            )}\n            <SuperButton type='submit' disabled={!formik.isValid || formik.isSubmitting} children={'Login'} />\n         </form>\n         <div>\n            <NavLink style={{ marginRight: '60px' }} to={PATH.REGISTRATION}>\n               Registration\n            </NavLink>\n            <NavLink to={PATH.PASSWORD_RECOVERY}>Password recovery</NavLink>\n         </div>\n      </>\n   )\n})\n\nexport const LoginWithMemo = React.memo(Login, (props, nextProps) => {\n   return props.formik.values === nextProps.formik.values && props.formik.errors === nextProps.formik.errors\n})\n","import axios from 'axios'\n\n// Ig heroku\nexport const baseURL = 'https://neko-back.herokuapp.com/2.0'\n\n// localhost\n// export const baseURL = 'http://localhost:7542/2.0/'\n\nexport const instance = axios.create({\n   baseURL,\n   withCredentials: true,\n})\n\nexport type ResType = {\n   _id: string\n   email: string\n   name: string\n   avatar?: string\n   publicCardPacksCount: number\n   created: Date\n   updated: Date\n   isAdmin: boolean\n   verified: boolean\n   rememberMe: boolean\n   error: string\n}\n","import { instance, ResType } from '../../../s1-main/m3-dal/instance'\nimport { FormikValuesType } from '../l1-ui/u1-login/LoginContainer'\n\nexport const loginAPI = {\n   login: async (data: FormikValuesType) => {\n      const response = await instance.post<ResType>('auth/login', data)\n      return response.data\n   },\n   logout: async () => {\n      return await instance.delete('auth/me')\n   },\n   me: async () => {\n      const response = await instance.post<ResType>('auth/me')\n      return response.data\n   },\n}\n","import { Reducer } from 'redux'\nimport { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\nimport { registrationAPI } from '../r3-dal/registrationAPI'\n\nexport type InitialStateType = typeof initialState\n\ntype ActionTypes = InferActionsType<typeof actions>\n\nenum REGISTRATION {\n   IS_REGISTER = 'IS_REGISTER',\n   SET_ERROR = 'SET_ERROR',\n}\n\nconst initialState = {\n   isSuccessRegister: false,\n   error: '',\n}\n\nexport const registrationReducer: Reducer<InitialStateType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialStateType => {\n   switch (action.type) {\n      case REGISTRATION.IS_REGISTER:\n         return { ...state, isSuccessRegister: action.isSuccessRegister }\n      case REGISTRATION.SET_ERROR:\n         return { ...state, error: action.message }\n      default:\n         return state\n   }\n}\n\nexport const actions = {\n   toggleSuccessRegister: (isSuccessRegister: boolean) =>\n      ({ type: REGISTRATION.IS_REGISTER, isSuccessRegister } as const),\n   setError: (message: string) => ({ type: REGISTRATION.SET_ERROR, message } as const),\n}\n\nexport const thunks = {\n   accountCreation: (email: string, password: string): AppThunk => async (dispatch) => {\n      try {\n         await registrationAPI.setRegister(email, password)\n         dispatch(actions.toggleSuccessRegister(true))\n      } catch (e) {\n         dispatch(actions.setError(e.response.data.error))\n      }\n   },\n}\n","import React, { useEffect } from 'react'\nimport { LoginWithMemo } from './Login'\nimport { FormikErrors, useFormik } from 'formik'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actions, thunks } from '../../l2-bll/loginReducer'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { Redirect } from 'react-router-dom'\nimport { PATH } from '../../../../s1-main/m1-ui/u3-routes/Routes'\n\nexport type FormikValuesType = {\n   email: string\n   password: string\n   rememberMe: boolean\n}\n\nexport const LoginContainer = () => {\n   const isLoggedIn = useSelector<AppStateType, string>((state) => state.login.isLoggedIn)\n   const error = useSelector<AppStateType, string>((state) => state.login.error)\n   const dispatch = useDispatch()\n   useEffect(() => {\n      if (error) {\n         return () => {\n            dispatch(actions.setErrorAC(''))\n         }\n      }\n   }, [error, dispatch])\n\n   const formik = useFormik({\n      initialValues: {\n         email: '',\n         password: '',\n         rememberMe: false,\n      },\n      validate: (values) => {\n         const errors: FormikErrors<FormikValuesType> = {}\n         if (!values.email) {\n            errors.email = 'Email is required'\n         } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = 'Invalid email address'\n         }\n         if (!values.password) {\n            errors.password = 'Password is required'\n         }\n         return errors\n      },\n      onSubmit: async (values: FormikValuesType) => {\n         await dispatch(thunks.loginTC(values))\n      },\n   })\n\n   if (isLoggedIn === 'logged') {\n      return <Redirect to={PATH.PROFILE} />\n   }\n\n   return (\n      <>\n         <LoginWithMemo formik={formik} error={error} />\n      </>\n   )\n}\n","import React from 'react'\nimport { LoginContainer } from './u1-login/LoginContainer'\n\nexport const LoginPage = () => {\n   return (\n      <div>\n         <LoginContainer />\n      </div>\n   )\n}\n","import React from 'react'\n\nexport const Page404 = () => {\n   return <div>Page 404 not found</div>\n}\n","import { FormikProps } from 'formik'\nimport React, { FC } from 'react'\nimport { SuperInputText } from '../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { FormValues } from './RegistrationContainer'\nimport { Error } from '../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\n\ntype PropsTypes = {\n   formik: FormikProps<FormValues>\n   serverErrors: string\n}\n\nexport const Registration: FC<PropsTypes> = React.memo(\n   ({ formik, serverErrors }) => {\n      console.log('render')\n      return (\n         <div>\n            <form onSubmit={formik.handleSubmit}>\n               {/*{formik.isSubmitting ? (*/}\n               {/*   <Loader />*/}\n               {/*) : (*/}\n               <>\n                  <label htmlFor='email'>Email Address</label>\n                  <SuperInputText id='email' {...formik.getFieldProps('email')} />\n                  {formik.errors.email && <Error textError={formik.errors.email} />}\n                  <label htmlFor='password'>Password</label>\n                  <SuperInputText id='password' {...formik.getFieldProps('password')} />\n                  {formik.errors.password && <Error textError={formik.errors.password} />}\n                  <label htmlFor='confirmPassword'>Confirm Password</label>\n                  <SuperInputText id='confirmPassword' {...formik.getFieldProps('confirmPassword')} />\n                  {formik.errors.confirmPassword && <Error textError={formik.errors.confirmPassword} />}\n                  <SuperButton\n                     children={'submit'}\n                     disabled={!(formik.isValid && formik.dirty) || formik.isSubmitting}\n                  />\n                  {serverErrors && <Error textError={serverErrors} />}\n               </>\n               {/*)}*/}\n            </form>\n         </div>\n      )\n   },\n   (props, nextProps) => {\n      return (\n         props.formik.values === nextProps.formik.values &&\n         props.formik.errors === nextProps.formik.errors &&\n         props.formik.isSubmitting === nextProps.formik.isSubmitting\n      )\n   },\n)\n","import { instance, ResType } from '../../../s1-main/m3-dal/instance'\n\nexport const registrationAPI = {\n   setRegister: async (email: string, password: string) => {\n      const result = await instance.post<ResType>('auth/register', { email, password })\n      return result.data\n   },\n}\n","import { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { Reducer } from 'redux'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\nimport { updatePassAPI } from '../npe3-dal/updatePassAPI'\n\nexport type InitialStateRecoveryType = typeof initialState\n\nenum UPDATE_PASSWORD {\n   UPDATE_RESULT = 'UPDATE_RESULT',\n   SET_PASS = 'SET_PASS',\n   UPDATED_PASS = 'UPDATED_PASS',\n}\n\ntype ActionTypes = InferActionsType<typeof actionsUpdate>\n\nconst initialState = {\n   result: 'Укажите новый пароль',\n   password: '',\n   passIsUpdated: false,\n}\n\nexport const updatePasswordReducer: Reducer<InitialStateRecoveryType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialStateRecoveryType => {\n   switch (action.type) {\n      case UPDATE_PASSWORD.UPDATE_RESULT:\n         return { ...state, result: action.result }\n      case UPDATE_PASSWORD.SET_PASS:\n         return { ...state, password: action.password }\n      case UPDATE_PASSWORD.UPDATED_PASS:\n         return { ...state, passIsUpdated: action.status }\n      default:\n         return state\n   }\n}\n\nexport const actionsUpdate = {\n   passUpdateResultAC: (result: string) =>\n      ({\n         type: UPDATE_PASSWORD.UPDATE_RESULT,\n         result,\n      } as const),\n   setPassAC: (password: string) =>\n      ({\n         type: UPDATE_PASSWORD.SET_PASS,\n         password,\n      } as const),\n   passUpdatedAC: (status: boolean) =>\n      ({\n         type: UPDATE_PASSWORD.UPDATED_PASS,\n         status,\n      } as const),\n}\n\nexport const updatePasswordTC = {\n   updatePass: (password: string, resetPasswordToken: string): AppThunk => async (dispatch) => {\n      try {\n         const res = await updatePassAPI.updatePass(password, resetPasswordToken)\n         dispatch(actionsUpdate.passUpdateResultAC(res.info))\n         dispatch(actionsUpdate.passUpdatedAC(true))\n      } catch (e) {\n         dispatch(actionsUpdate.passUpdateResultAC(e.data.error))\n      }\n   },\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { Registration } from './Registration'\nimport { FormikErrors, useFormik } from 'formik'\nimport { actions, thunks } from '../../r2-bll/registrationReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { Redirect } from 'react-router-dom'\n\nexport type FormValues = {\n   email: string\n   password: string\n   confirmPassword: string\n}\n\nexport const RegistrationContainer = () => {\n   const isSuccessRegister = useSelector<AppStateType, boolean>((state) => state.registration.isSuccessRegister)\n   const serverErrors = useSelector<AppStateType, string>((state) => state.registration.error)\n   const dispatch = useDispatch()\n   useEffect(() => {\n      if (isSuccessRegister) {\n         return () => {\n            dispatch(actions.toggleSuccessRegister(false))\n            dispatch(actions.setError(''))\n         }\n      }\n   }, [isSuccessRegister, dispatch])\n\n   const formik = useFormik({\n      initialValues: {\n         email: '',\n         password: '',\n         confirmPassword: '',\n      },\n      validate: (values: FormValues) => {\n         const errors: FormikErrors<FormValues> = {}\n         if (!values.email) {\n            errors.email = 'Email is required'\n         } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = 'Invalid email address'\n         }\n         if (!values.password) {\n            errors.password = 'Password is required'\n         } else if (values.password.length <= 7) {\n            errors.password = 'Password must be more than 7 characters'\n         }\n         if (!values.confirmPassword) {\n            errors.confirmPassword = 'Confirm password is required'\n         } else if (values.confirmPassword !== values.password) {\n            errors.confirmPassword = 'Passwords do not match'\n         }\n         return errors\n      },\n      onSubmit: async (values: FormValues) => {\n         const { password, email } = values\n         await dispatch(thunks.accountCreation(email, password))\n      },\n   })\n\n   // const WrappedRegistration = useMemo(() => <Registration serverErrors={serverErrors} formik={formik} />, [\n   //    formik.values,\n   //    serverErrors,\n   // ])\n\n   if (isSuccessRegister) {\n      return <Redirect to={'/login'} />\n   }\n\n   return (\n      <>\n         <Registration serverErrors={serverErrors} formik={formik} />\n      </>\n   )\n}\n","import React from 'react'\nimport { RegistrationContainer } from './u1-registration/RegistrationContainer'\n\nexport const RegistrationPage = () => {\n   return (\n      <div>\n         <RegistrationContainer />\n      </div>\n   )\n}\n","import React from 'react'\nimport { SuperInputText } from './c1-SuperInputText/SuperInputText'\nimport { SuperButton } from './c2-SuperButton/SuperButton'\nimport { SuperCheckbox } from './c3-SuperCheckbox/SuperCheckbox'\nimport { GradesPage } from '../../../s2-features/f9-grades/g1-ui/GradesPage'\n\nexport const ComponentsTestRack = () => {\n   return (\n      <div>\n         <SuperInputText placeholder={'First Name'} />\n         <SuperInputText placeholder={'Last Name'} />\n         <SuperInputText placeholder={'Email'} />\n         <SuperInputText placeholder={'Password'} />\n         <SuperButton children={'Log in'} />\n         <SuperCheckbox children={'Remember Me'} />\n      </div>\n   )\n}\n","import React from 'react'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { Error } from '../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\nimport { ReactComponent as Loader } from './../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\n\ntype PropsType = {\n   name: string\n   email: string\n   error: string\n   pending: boolean\n   logout: () => void\n}\n\nexport const Profile: React.FC<PropsType> = ({ name, email, logout, error, pending }) => {\n   return (\n      <div>\n         {pending ? (\n            <Loader />\n         ) : (\n            <>\n               <h2>Profile</h2>\n               {error && <Error textError={error} />}\n               <span style={{ marginRight: '20px' }}>Name: {name}</span>\n               <span style={{ marginRight: '20px' }}>Email: {email}</span>\n            </>\n         )}\n         <SuperButton onClick={logout} children={'Log out'} disabled={pending} />\n      </div>\n   )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { Profile } from './Profile'\nimport { PATH } from '../../../../s1-main/m1-ui/u3-routes/Routes'\nimport { thunks } from '../../../f1-login/l2-bll/loginReducer'\nimport { ReactComponent as Loader } from '../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\n\nexport const ProfileContainer = () => {\n   const name = useSelector<AppStateType, string>((state) => state.login.name)\n   const email = useSelector<AppStateType, string>((state) => state.login.email)\n   const isLoggedIn = useSelector<AppStateType, string>((state) => state.login.isLoggedIn)\n   const error = useSelector<AppStateType, string>((state) => state.registration.error)\n   const statePending = useSelector<AppStateType, boolean>((state) => state.login.pending)\n\n   const dispatch = useDispatch()\n\n   const [pending, setPending] = useState(false)\n\n   useEffect(() => {\n      if (!name) dispatch(thunks.meTC())\n   }, [dispatch, name])\n\n   const logout = async () => {\n      setPending(true)\n      await dispatch(thunks.logoutTC())\n   }\n\n   if (statePending) {\n      return <Loader />\n   }\n\n   return (\n      <>\n         {isLoggedIn === 'notLogged' ? (\n            <Redirect to={PATH.LOGIN} />\n         ) : (\n            <Profile name={name} email={email} logout={logout} error={error} pending={pending} />\n         )}\n      </>\n   )\n}\n","import React from 'react'\nimport { ProfileContainer } from './u1-profile/ProfileContainer'\n\nexport const ProfilePage = () => {\n   return (\n      <div>\n         <ProfileContainer />\n      </div>\n   )\n}\n","import { instance } from '../../../s1-main/m3-dal/instance'\n\nconst messageView = (token: string) => {\n   return `<div style=\"background-color: #00ff00; padding: 15px\"><a href=http://localhost:3000/#/set-new-password/${token}>Ссылка на восстановление пароля</a></div>`\n}\nconst messageMelivaro = (token: string) => {\n   return `<div style=\"background-color: #00ff00; padding: 15px\"><a href=https://melivaro.github.io/flash-cards/#/set-new-password/${token}>Ссылка на восстановление пароля</a></div>`\n}\n\nexport const passRecoveryAPI = {\n   recovery: async (email: string) => {\n      const response = await instance.post('/auth/forgot', {\n         email,\n         from: 'mymailtolaaa@gmail.com',\n         message: messageMelivaro('$token$'),\n      })\n      return response.data\n   },\n}\n","import { instance } from '../../../s1-main/m3-dal/instance'\n\nexport const updatePassAPI = {\n   updatePass: async (password: string, resetPasswordToken: string) => {\n      const response = await instance.post('/auth/set-new-password', { password, resetPasswordToken })\n      return response.data\n   },\n}\n","import { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { Reducer } from 'redux'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\nimport { passRecoveryAPI } from '../pr3-dal/passwordRecoveryAPI'\nimport { actionsUpdate } from '../../f5-newPasswordEntry/npe2-bll/updatePasswordReducer'\n\nexport type InitialStateRecoveryType = typeof initialState\n\nenum PASSWORD_RECOVERY {\n   CHANGE_PASS = 'CHANGE_PASS',\n   SEND_EMAIL = 'SEND_EMAIL',\n}\n\ntype ActionTypes = InferActionsType<typeof actions>\n\nconst initialState = {\n   inputText: '',\n   result: 'Укажите вашу электронную почту для востановления пароля',\n}\n\nexport const passwordRecoveryReducer: Reducer<InitialStateRecoveryType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialStateRecoveryType => {\n   switch (action.type) {\n      case PASSWORD_RECOVERY.CHANGE_PASS:\n         return { ...state, inputText: action.text }\n      case PASSWORD_RECOVERY.SEND_EMAIL:\n         return { ...state, result: action.result, inputText: '' }\n      default:\n         return state\n   }\n}\n\nexport const actions = {\n   recoverPassAC: (text: string) =>\n      ({\n         type: PASSWORD_RECOVERY.CHANGE_PASS,\n         text,\n      } as const),\n   sendEmailAC: (result: string) =>\n      ({\n         type: PASSWORD_RECOVERY.SEND_EMAIL,\n         result,\n      } as const),\n}\n\nexport const recoverThunks = {\n   sendEmailTC: (email: string): AppThunk => async (dispatch) => {\n      try {\n         const res = await passRecoveryAPI.recovery(email)\n         dispatch(actions.sendEmailAC(res.info))\n         dispatch(actionsUpdate.passUpdatedAC(true))\n      } catch (e) {\n         dispatch(actions.sendEmailAC(e.response.data.error))\n      }\n   },\n}\n","import { Reducer } from 'redux'\nimport { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\nimport { ApiPacksType, packsAPI, UpdatePackType } from '../p3-dal/packsAPI'\nimport { AppStateType } from '../../../s1-main/m2-bll/store'\n\ntype InitialPackSettingsStateType = {\n   page: number\n   pageCount: number\n   min: number\n   max: number\n   sortPack: string\n   packTotalCount: number\n   searchName: string\n   userID: string\n}\n\nexport type InitialPacksStateType = {\n   packs: ApiPacksType[]\n   settings: InitialPackSettingsStateType\n   showAddModal: boolean\n   deleteModal: {\n      showDeleteModal: boolean\n      packID: string\n   }\n   updateModal: {\n      showUpdateModal: boolean\n      packName: string\n      packID: string\n   }\n}\n\nconst initialState: InitialPacksStateType = {\n   packs: [],\n   settings: {\n      page: 1,\n      pageCount: 4,\n      packTotalCount: 0,\n      min: 0,\n      max: 5,\n      sortPack: '',\n      searchName: '',\n      userID: '',\n   },\n   showAddModal: false,\n   deleteModal: {\n      showDeleteModal: false,\n      packID: '',\n   },\n   updateModal: {\n      showUpdateModal: false,\n      packName: '',\n      packID: '',\n   },\n}\n\ntype ActionTypes = InferActionsType<typeof actions>\n\nenum PACKS {\n   FETCH_PACKS = 'FETCH_PACKS',\n   SEARCH_PACKS = 'SEARCH_PACKS',\n   SET_MIN_MAX_PACKS = 'SET_MIN_MAX',\n   SORT_PACK = 'SORT_PRODUCT',\n   GET_MY_PACK = 'GET_MY_PACK',\n   SHOW_ADD_MODAL = 'SHOW_ADD_MODAL',\n   SHOW_DELETE_MODAL = 'SHOW_DELETE_MODAL',\n   SHOW_UPDATE_MODAL = 'UPDATE_MODAL',\n}\n\nexport const packsReducer: Reducer<InitialPacksStateType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialPacksStateType => {\n   switch (action.type) {\n      case PACKS.FETCH_PACKS:\n         return {\n            ...state,\n            packs: action.packs,\n            settings: action.settings,\n         }\n      case PACKS.SEARCH_PACKS:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               searchName: action.searchName,\n            },\n         }\n      case PACKS.SET_MIN_MAX_PACKS:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               min: action.min,\n               max: action.max,\n            },\n         }\n      case PACKS.SORT_PACK:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               sortPack: action.sortedPack,\n            },\n         }\n      case PACKS.GET_MY_PACK:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               userID: action.userID,\n            },\n         }\n      case PACKS.SHOW_ADD_MODAL:\n         return {\n            ...state,\n            showAddModal: action.modal,\n         }\n      case PACKS.SHOW_DELETE_MODAL:\n         return {\n            ...state,\n            deleteModal: {\n               ...state.deleteModal,\n               showDeleteModal: action.modal,\n               packID: action.packID,\n            },\n         }\n      //закалхозил\n      case PACKS.SHOW_UPDATE_MODAL:\n         return {\n            ...state,\n            updateModal: {\n               ...state.updateModal,\n               showUpdateModal: action.modal,\n            },\n            deleteModal: {\n               ...state.deleteModal,\n               packID: action.packID,\n            },\n         }\n      default:\n         return state\n   }\n}\n\nexport const actions = {\n   setPacks: (packs: ApiPacksType[], settings: InitialPackSettingsStateType) =>\n      ({\n         type: PACKS.FETCH_PACKS,\n         packs,\n         settings,\n      } as const),\n   searchPacks: (searchName: string) =>\n      ({\n         type: PACKS.SEARCH_PACKS,\n         searchName,\n      } as const),\n   setMinMaxPack: (min: number, max: number) =>\n      ({\n         type: PACKS.SET_MIN_MAX_PACKS,\n         min,\n         max,\n      } as const),\n   sortPacks: (sortedPack: string) =>\n      ({\n         type: PACKS.SORT_PACK,\n         sortedPack,\n      } as const),\n   getMyPack: (userID: string) =>\n      ({\n         type: PACKS.GET_MY_PACK,\n         userID,\n      } as const),\n   showAddModal: (modal: boolean) =>\n      ({\n         type: PACKS.SHOW_ADD_MODAL,\n         modal,\n      } as const),\n   showDeleteModal: (modal: boolean, packID: string) =>\n      ({\n         type: PACKS.SHOW_DELETE_MODAL,\n         modal,\n         packID,\n      } as const),\n   showUpdateModal: (modal: boolean, packID: string) =>\n      ({\n         type: PACKS.SHOW_UPDATE_MODAL,\n         modal,\n         packID,\n      } as const),\n}\n\ntype PackStoreType = () => AppStateType\n\nexport const thunks = {\n   fetchPacks: (newPage?: number, newPageCount?: number): AppThunk => async (dispatch, getStore: PackStoreType) => {\n      const { searchName, page, pageCount, min, max, sortPack, userID } = getStore().packs.settings\n      try {\n         const data = await packsAPI.getPacks(\n            searchName,\n            min,\n            max,\n            newPage || page,\n            newPageCount || pageCount,\n            sortPack,\n            userID,\n         )\n         dispatch(\n            actions.setPacks(data.cardPacks, {\n               page: data.page,\n               pageCount: data.pageCount,\n               searchName,\n               sortPack,\n               userID,\n               min: data.minCardsCount,\n               max: data.maxCardsCount,\n               packTotalCount: data.cardPacksTotalCount,\n            }),\n         )\n      } catch (e) {}\n   },\n   createPack: (packName: string): AppThunk => async (dispatch) => {\n      try {\n         await packsAPI.createPack({\n            name: packName,\n            private: false,\n            path: '',\n            type: '',\n            deckCover: '',\n            grade: 0,\n            rating: 0,\n            shots: 0,\n         })\n         dispatch(actions.showAddModal(false))\n         dispatch(thunks.fetchPacks())\n      } catch (e) {}\n   },\n   deletePack: (pack_id: string): AppThunk => async (dispatch) => {\n      try {\n         await packsAPI.deletePack(pack_id)\n         dispatch(actions.showDeleteModal(false, ''))\n         dispatch(thunks.fetchPacks())\n      } catch (e) {}\n   },\n   updatePack: (data: UpdatePackType): AppThunk => async (dispatch) => {\n      try {\n         await packsAPI.updatePack(data)\n         dispatch(actions.showUpdateModal(false, ''))\n         dispatch(thunks.fetchPacks())\n      } catch (e) {}\n   },\n}\n","import React, { ChangeEvent } from 'react'\nimport { SuperInputText } from '../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { ReactComponent as Loader } from '../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\n\ntype PasswordRecoveryPageType = {\n   pending: boolean\n   result: string\n   inputText: string\n   inputHandler: (e: ChangeEvent<HTMLInputElement>) => void\n   buttonClickHandler: () => void\n}\nexport const PasswordRecovery: React.FC<PasswordRecoveryPageType> = ({\n   pending,\n   result,\n   inputText,\n   inputHandler,\n   buttonClickHandler,\n}) => {\n   return (\n      <div>\n         <span>Восстановление пароля</span>\n         <p>{result}</p>\n         <div>\n            {pending ? <Loader /> : <SuperInputText value={inputText} onChange={inputHandler} />}\n            <SuperButton onClick={buttonClickHandler} disabled={pending} children={'Send'} />\n         </div>\n      </div>\n   )\n}\n","import React, { ChangeEvent, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { actions, recoverThunks } from '../../pr2-bll/passwordRecoveryReducer'\nimport { PasswordRecovery } from './PasswordRecovery'\n\nexport const PasswordRecoveryContainer = () => {\n   const recoveryResult = useSelector<AppStateType, string>((state) => state.passRecovery.result)\n   const inputText = useSelector<AppStateType, string>((state) => state.passRecovery.inputText)\n\n   const dispatch = useDispatch()\n\n   const [pending, setPending] = useState(false)\n\n   const inputChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n      dispatch(actions.recoverPassAC(e.currentTarget.value))\n   }\n   const buttonClickHandler = async () => {\n      setPending(true)\n      await dispatch(recoverThunks.sendEmailTC(inputText))\n      setPending(false)\n   }\n   return (\n      <PasswordRecovery\n         pending={pending}\n         inputText={inputText}\n         result={recoveryResult}\n         inputHandler={inputChangeHandler}\n         buttonClickHandler={buttonClickHandler}\n      />\n   )\n}\n","import React from 'react'\nimport { PasswordRecoveryContainer } from './u1-passwordRecovery/PasswordRecoveryContainer'\n\nconst PasswordRecoveryPage = () => {\n   return <PasswordRecoveryContainer />\n}\n\nexport default PasswordRecoveryPage\n","import React from 'react'\nimport { SuperInputText } from '../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { FormikProps } from 'formik'\nimport { FormValues } from './NewPasswordEntryContainer'\nimport { Error } from '../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\nimport { ReactComponent as Loader } from '../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\n\ntype NewPasswordEntryType = {\n   resultData: string\n   formik: FormikProps<FormValues>\n}\n\nexport const NewPasswordEntry: React.FC<NewPasswordEntryType> = ({ resultData, formik }) => {\n   return (\n      <div>\n         <form onSubmit={formik.handleSubmit}>\n            {formik.isSubmitting ? (\n               <Loader />\n            ) : (\n               <>\n                  <span>{resultData}</span>\n                  <SuperInputText placeholder={'Укажите новый пароль'} {...formik.getFieldProps('password')} />\n                  {formik.errors.password && <Error textError={formik.errors.password} />}\n                  <SuperInputText placeholder={'Повторите ввод пароля'} {...formik.getFieldProps('confirmPassword')} />\n                  {formik.errors.confirmPassword && <Error textError={formik.errors.confirmPassword} />}\n               </>\n            )}\n            <SuperButton\n               children={'Изменить пароль'}\n               type={'submit'}\n               disabled={!(formik.isValid && formik.dirty) || formik.isSubmitting}\n            />\n         </form>\n      </div>\n   )\n}\n","import React, { useMemo } from 'react'\nimport { NewPasswordEntry } from './NewPasswordEntry'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { Redirect, useParams } from 'react-router-dom'\nimport { actionsUpdate, updatePasswordTC } from '../../npe2-bll/updatePasswordReducer'\nimport { FormikErrors, useFormik } from 'formik'\nimport { PATH } from '../../../../s1-main/m1-ui/u3-routes/Routes'\n\nexport type FormValues = {\n   password: string\n   confirmPassword: string\n}\n\nexport const NewPasswordEntryContainer = () => {\n   const dispatch = useDispatch()\n   const result = useSelector<AppStateType, string>((state) => state.updatePass.result)\n   const isUpdate = useSelector<AppStateType, boolean>((state) => state.updatePass.passIsUpdated)\n   const { token } = useParams<{ token: string }>()\n\n   const formik = useFormik({\n      initialValues: {\n         password: '',\n         confirmPassword: '',\n      },\n      validate: (values) => {\n         const { password, confirmPassword } = values\n         const errors: FormikErrors<FormValues> = {}\n         if (!password) {\n            errors.password = 'Password is required'\n         }\n         if (!confirmPassword) {\n            errors.password = 'Password is required'\n         }\n         if (password.length < 8) {\n            errors.password = 'Пароль не может быть меньше восьми символов'\n         }\n         if (confirmPassword.length < 8) {\n            errors.confirmPassword = 'Пароль не может быть меньше восьми символов'\n         }\n         return errors\n      },\n      onSubmit: (values) => {\n         const { password, confirmPassword } = values\n\n         if (password === confirmPassword) {\n            dispatch(updatePasswordTC.updatePass(password, token))\n         } else {\n            dispatch(actionsUpdate.passUpdateResultAC('Пороли не совпадают!'))\n         }\n      },\n   })\n\n   const WrappedNewPasswordEntry = useMemo(() => <NewPasswordEntry resultData={result} formik={formik} />, [\n      formik.values,\n      result,\n   ])\n\n   if (isUpdate) {\n      return <Redirect to={PATH.LOGIN} />\n   }\n\n   return <>{WrappedNewPasswordEntry}</>\n}\n","import React from 'react'\nimport { NewPasswordEntryContainer } from './u1-passwordEntry/NewPasswordEntryContainer'\n\nconst NewPasswordEntryPage = () => {\n   return <NewPasswordEntryContainer />\n}\n\nexport default NewPasswordEntryPage\n","import { instance } from '../../../s1-main/m3-dal/instance'\n\nexport const packsAPI = {\n   getPacks: async (\n      searchName: string,\n      min?: number,\n      max?: number,\n      page?: number,\n      pageCount?: number,\n      sortProducts?: string,\n      userID?: string,\n   ) => {\n      const response = await instance.get<ResPacksType>(\n         `cards/pack?` +\n            (searchName.length > 0 ? `packName=${searchName}&` : '') +\n            (max ? `min=${min}&max=${max}&` : '') +\n            (page ? `page=${page}&pageCount=${pageCount}&` : '') +\n            (sortProducts ? `sortPacks=${sortProducts}&` : '') +\n            (userID ? `user_id=${userID}&` : ''),\n      )\n      return response.data\n   },\n   createPack: async (data: CreatePackType) => {\n      await instance.post('cards/pack', { cardsPack: data })\n   },\n   deletePack: async (pack_id: string) => {\n      await instance.delete(`cards/pack?id=${pack_id}`)\n   },\n   updatePack: async (data: UpdatePackType) => {\n      await instance.put('cards/pack', { cardsPack: data })\n   },\n}\n\nexport type UpdatePackType = {\n   _id: string\n   name?: string\n}\n\nexport type CreatePackType = {\n   name: string\n   path: string\n   grade?: number\n   shots?: number\n   rating?: number\n   deckCover?: string\n   private: boolean\n   type: string\n}\nexport type ApiPacksType = {\n   _id: string\n   user_id?: string\n   user_name?: string\n   private?: boolean\n   name: string\n   path?: string\n   grade?: number\n   shots?: number\n   cardsCount: number\n   type?: string\n   rating?: number\n   created?: string\n   updated: string\n   more_id?: string\n   __v?: number\n   deckCover: string\n}\ntype ResPacksType = {\n   cardPacks: Array<ApiPacksType>\n   page: number\n   pageCount: number\n   cardPacksTotalCount: number\n   minCardsCount: number\n   maxCardsCount: number\n   token: string\n   tokenDeathTime: number\n}\n","import { ApiCardsType, cardsAPI, CreateCardType, UpdateCardType } from '../c3-dal/cardsAPI'\nimport { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { Reducer } from 'redux'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\nimport { AppStateType } from '../../../s1-main/m2-bll/store'\nimport { gradesAPI, RequestGradeType, ResponseGradeType } from '../../f9-grades/g3-dal/gradesAPI'\n\ntype ActionTypes = InferActionsType<typeof cardsActions>\n\ntype InitialCardsSettingsStateType = {\n   page: number\n   pageCount: number\n   cardsTotalCount: number\n   min: number\n   max: number\n   sortCards: string\n   cardQuestion: string\n   packUserId: string\n}\n\nexport type InitialStateType = {\n   cards: ApiCardsType[]\n   settings: InitialCardsSettingsStateType\n}\n\nconst initialState: InitialStateType = {\n   cards: [],\n   settings: {\n      page: 1,\n      pageCount: 4,\n      cardsTotalCount: 40,\n      min: 1,\n      max: 5,\n      sortCards: '',\n      cardQuestion: '',\n      packUserId: '',\n   },\n}\n\nenum CARDS {\n   SET_CARDS = 'SET_CARDS',\n   SEARCH_CARDS = 'SEARCH_PACKS',\n   SET_MIN_MAX_CARDS = 'SET_MIN_MAX',\n   SORT_CARDS = 'SORT_PRODUCT',\n   UPDATE_CARD_GRADE = 'UPDATE_CARD_GRADE',\n   // GET_MY_CARDS = 'GET_MY_PACK',\n}\n\nexport const cardsReducer: Reducer<InitialStateType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialStateType => {\n   switch (action.type) {\n      case CARDS.SET_CARDS:\n         return {\n            ...state,\n            cards: action.cards,\n            settings: action.settings,\n         }\n      case CARDS.SEARCH_CARDS:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               cardQuestion: action.cardQuestion,\n            },\n         }\n      case CARDS.SET_MIN_MAX_CARDS:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               min: action.min,\n               max: action.max,\n            },\n         }\n      case CARDS.SORT_CARDS:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               sortCards: action.sortedPack,\n            },\n         }\n      case CARDS.UPDATE_CARD_GRADE:\n         return {\n            ...state,\n            // settings: {...state.settings},\n            cards: state.cards.map((card) => {\n               if (card._id === action.data.updatedGrade.card_id) {\n                  return { ...card, grade: action.data.updatedGrade.grade, shots: action.data.updatedGrade.shots }\n               } else {\n                  return card\n               }\n            }),\n         }\n      default:\n         return state\n   }\n}\n\nexport const cardsActions = {\n   fetchCards: (cards: ApiCardsType[], settings: InitialCardsSettingsStateType) =>\n      ({ type: CARDS.SET_CARDS, cards, settings } as const),\n   searchCards: (cardQuestion: string) =>\n      ({\n         type: CARDS.SEARCH_CARDS,\n         cardQuestion,\n      } as const),\n   setMinMaxCards: (min: number, max: number) => ({ type: CARDS.SET_MIN_MAX_CARDS, min, max } as const),\n   sortCards: (sortedPack: string) => ({ type: CARDS.SORT_CARDS, sortedPack } as const),\n   updateCardGrade: (data: ResponseGradeType) => ({ type: CARDS.UPDATE_CARD_GRADE, data } as const),\n}\n\ntype CardsStoreType = () => AppStateType\n\nexport const thunks = {\n   fetchCards: (packUId?: string, newPage?: number, newPageCount?: number): AppThunk => async (\n      dispatch,\n      getStore: CardsStoreType,\n   ) => {\n      const { pageCount, page, cardQuestion, sortCards, min, max, packUserId } = getStore().cards.settings\n      try {\n         const data = await cardsAPI.getCards(\n            packUId || packUserId,\n            min,\n            max,\n            newPage || page,\n            newPageCount || pageCount,\n            cardQuestion,\n            sortCards,\n         )\n         dispatch(\n            cardsActions.fetchCards(data.cards, {\n               page: data.page,\n               pageCount: data.pageCount,\n               cardQuestion,\n               sortCards,\n               min: data.minGrade,\n               max: data.minGrade,\n               packUserId,\n               cardsTotalCount: data.cardsTotalCount,\n            }),\n         )\n      } catch (e) {}\n   },\n   createCard: (data: CreateCardType, packUId: string): AppThunk => async (dispatch) => {\n      try {\n         await cardsAPI.createCard(data)\n         dispatch(thunks.fetchCards(packUId))\n      } catch (e) {}\n   },\n   deleteCard: (id: string, packUId: string): AppThunk => async (dispatch) => {\n      try {\n         await cardsAPI.deleteCard(id)\n         dispatch(thunks.fetchCards(packUId))\n      } catch (e) {}\n   },\n   updateCard: (data: UpdateCardType, packUId: string): AppThunk => async (dispatch) => {\n      try {\n         await cardsAPI.updateCard(data)\n         dispatch(thunks.fetchCards(packUId))\n      } catch (e) {}\n   },\n   updateCardGrade: (data: RequestGradeType): AppThunk => async (dispatch) => {\n      try {\n         const response = await gradesAPI.updateGrade(data)\n         dispatch(\n            cardsActions.updateCardGrade({\n               updatedGrade: {\n                  grade: response.data.updatedGrade.grade,\n                  card_id: response.data.updatedGrade.card_id,\n                  shots: response.data.updatedGrade.shots,\n               },\n            }),\n         )\n      } catch (e) {}\n   },\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\ntype SortButtonType = {\n   fetchProducts: () => void\n   setSortProducts: (data: string) => void\n}\n\nconst SortButton: React.FC<SortButtonType> = ({ fetchProducts, setSortProducts }) => {\n   const [sort, setSort] = useState(-1)\n   const dispatch = useDispatch()\n\n   const sortData = (x: number) => {\n      setSort(x)\n      dispatch(setSortProducts(x + 'name'))\n      dispatch(fetchProducts())\n   }\n\n   return (\n      <div>\n         <button style={{ background: sort === 1 ? 'lime' : undefined }} onClick={() => sortData(1)}>\n            /\\\n         </button>\n         <button style={{ background: sort === 0 ? 'lime' : undefined }} onClick={() => sortData(0)}>\n            \\/\n         </button>\n      </div>\n   )\n}\n\nexport default SortButton\n","import React from 'react'\nimport './Table.scss'\nimport * as ReactBootStrap from 'react-bootstrap'\n\ntype PropsType<DataItem> = {\n   data: DataItem[]\n   model: {\n      renderTitle: () => JSX.Element\n      renderData: <T extends DataItem>(value: T, index: number) => JSX.Element\n   }\n}\n\nexport const Table = <T extends object>({ data, model }: PropsType<T>) => {\n   return (\n      <div>\n         <ReactBootStrap.Table striped bordered hover variant='dark'>\n            <thead>{model.renderTitle()}</thead>\n            <tbody>{data.map(model.renderData)}</tbody>\n         </ReactBootStrap.Table>\n      </div>\n   )\n}\n","import React from 'react'\nimport { Table } from '../../../../s1-main/m1-ui/u0-common/c9-Table/Table'\nimport { ApiPacksType } from '../../p3-dal/packsAPI'\n\ntype PropsType = {\n   packs: ApiPacksType[]\n   modelPacks: {\n      renderTitle: () => JSX.Element\n      renderData: (table: ApiPacksType, index: number) => JSX.Element\n   }\n}\n\nexport const Packs: React.FC<PropsType> = ({ packs, modelPacks }) => {\n   return (\n      <>\n         <Table data={packs} model={modelPacks} />\n      </>\n   )\n}\n","import React, { CSSProperties } from 'react'\n\nimport { Range, getTrackBackground } from 'react-range'\n\nexport const FlexStyle: CSSProperties = { display: 'flex' }\nexport const FlexAlignCenter: CSSProperties = { ...FlexStyle, alignItems: 'center' }\nexport const FlexCenterCenter: CSSProperties = { ...FlexAlignCenter, justifyContent: 'center' }\n\ntype DoubleRangeType = {\n   step: number\n   startData: number\n   endData: number\n   rangeData: Array<number>\n   rangeDataHandler: (value: Array<number>) => void\n}\n\nconst DoubleRange: React.FC<DoubleRangeType> = ({ step, startData, endData, rangeData, rangeDataHandler }) => {\n   return (\n      <Range\n         values={rangeData}\n         step={step}\n         min={startData}\n         max={endData}\n         onChange={(value) => {\n            rangeDataHandler(value)\n         }}\n         renderTrack={({ props, children }) => (\n            <div\n               onMouseDown={props.onMouseDown}\n               onTouchStart={props.onTouchStart}\n               style={{\n                  ...props.style,\n                  height: '36px',\n                  display: 'flex',\n                  width: '50%',\n                  margin: '30px',\n               }}>\n               <div\n                  ref={props.ref}\n                  style={{\n                     height: '5px',\n                     width: '100%',\n                     borderRadius: '4px',\n                     background: getTrackBackground({\n                        values: rangeData,\n                        colors: ['#ccc', '#548BF4', '#ccc'],\n                        min: startData,\n                        max: endData,\n                     }),\n                     alignSelf: 'center',\n                  }}>\n                  {children}\n               </div>\n            </div>\n         )}\n         renderThumb={({ index, props, isDragged }) => (\n            <div\n               {...props}\n               style={{\n                  ...props.style,\n                  height: '12px',\n                  width: '12px',\n                  borderRadius: '1px',\n                  backgroundColor: '#FFF',\n                  ...FlexCenterCenter,\n                  boxShadow: '0px 2px 6px #AAA',\n               }}>\n               <div\n                  style={{\n                     position: 'absolute',\n                     top: '-28px',\n                     color: '#fff',\n                     fontWeight: 'bold',\n                     fontSize: '14px',\n                     fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\n                     padding: '4px',\n                     borderRadius: '4px',\n                     backgroundColor: '#548BF4',\n                  }}>\n                  {rangeData[index].toFixed(0)}\n                  {/*// 10.12345 => 10; (1) => 10.1; (2) > 10.12; ...*/}\n               </div>\n               <div style={{ height: '16px', width: '5px', backgroundColor: isDragged ? '#548BF4' : '#CCC' }} />\n            </div>\n         )}\n      />\n   )\n}\n\nexport default DoubleRange\n","import React from 'react'\nimport DoubleRange from '../../c9-Range/r1-DoubleRange/DoubleRange'\nimport s from './SearchData.module.scss'\nimport { SuperInputText } from '../../c1-SuperInputText/SuperInputText'\nimport { SuperButton } from '../../c2-SuperButton/SuperButton'\nimport { FormikProps } from 'formik'\nimport { SearchFormikValuesType } from './SearchDataContainer'\n\ntype SearchDataType = {\n   formik: FormikProps<SearchFormikValuesType>\n   rangeData: Array<number>\n   rangeDataHandler: (data: Array<number>) => void\n   startData: number\n   endData: number\n   step: number\n}\n\nconst SearchData: React.FC<SearchDataType> = ({ formik, rangeData, rangeDataHandler, startData, endData, step }) => {\n   return (\n      <form onSubmit={formik.handleSubmit}>\n         <div className={s['SearchData__container']}>\n            <SuperInputText placeholder={'Search'} {...formik.getFieldProps('searchData')} />\n            <DoubleRange\n               step={step}\n               startData={startData}\n               endData={endData}\n               rangeData={rangeData}\n               rangeDataHandler={rangeDataHandler}\n            />\n            <SuperButton type='submit'>Search</SuperButton>\n         </div>\n      </form>\n   )\n}\n\nexport default SearchData\n","import React, { useState } from 'react'\nimport SearchData from './SearchData'\nimport { useFormik } from 'formik'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { SuperCheckbox } from '../../c3-SuperCheckbox/SuperCheckbox'\nimport { AppStateType } from '../../../../m2-bll/store'\n\nexport type SearchFormikValuesType = {\n   searchData: string\n}\n\ntype SDCType = {\n   startRange: number\n   endRange: number\n   fetchData: () => void\n   searchValue: (data: string) => void\n   rangeValue: (minValue: number, maxValue: number) => void\n   getMyData?: (data: string) => void\n}\n\nconst SearchDataContainer: React.FC<SDCType> = ({\n   startRange,\n   endRange,\n   fetchData,\n   searchValue,\n   rangeValue,\n   getMyData,\n}) => {\n   const [rangeData, setRangeData] = useState<Array<number>>([startRange, endRange])\n   const [fetchMyData, setMyFetchData] = useState(false)\n   const userID = useSelector<AppStateType, string>((state) => state.login.userID)\n\n   const dispatch = useDispatch()\n   const formik = useFormik({\n      initialValues: {\n         searchData: '',\n      },\n      onSubmit: (values) => {\n         dispatch(searchValue(values.searchData))\n         dispatch(rangeValue(rangeData[0], rangeData[1]))\n         fetchData()\n      },\n   })\n\n   const myDataHandler = () => {\n      setMyFetchData(!fetchMyData)\n      if (fetchMyData) {\n         getMyData && dispatch(getMyData(''))\n         fetchData()\n      } else {\n         getMyData && dispatch(getMyData(userID))\n         fetchData()\n      }\n   }\n\n   return (\n      <>\n         <SearchData\n            formik={formik}\n            rangeData={rangeData}\n            rangeDataHandler={setRangeData}\n            startData={0}\n            endData={10}\n            step={1}\n         />\n         {getMyData && (\n            <SuperCheckbox onChangeChecked={myDataHandler} checked={fetchMyData}>\n               Показать мои стопки\n            </SuperCheckbox>\n         )}\n      </>\n   )\n}\n\nexport default SearchDataContainer\n","import React, { CSSProperties, ReactNode } from 'react'\n\ninterface IPaginationProps {\n   page: number\n   pageCount: number\n   pageTotalCount: number\n   getPage: (newPage: number, newPageCount: number) => void\n   title?: ReactNode\n   paginationStyle?: CSSProperties\n   buttonStyle?: CSSProperties\n   selectStyle?: CSSProperties\n}\n\nconst Pagination: React.FC<IPaginationProps> = ({\n   page,\n   pageCount,\n   pageTotalCount,\n   getPage,\n   title = 'Pagination',\n   paginationStyle,\n   buttonStyle,\n   selectStyle,\n}) => {\n   let pages = []\n   const lastPage = Math.ceil(pageTotalCount / pageCount)\n\n   for (let i = 1; i <= lastPage; i++)\n      pages.push(\n         <button\n            key={i}\n            style={{ background: page === i ? 'lime' : undefined, ...buttonStyle }}\n            onClick={() => getPage(i, pageCount)}>\n            {i}\n         </button>,\n      )\n\n   // 1 ... 4 5 (6) 7 8 ... 11\n   if (page + 4 < lastPage) {\n      pages[page + 2] = (\n         <span key={page + 3} style={buttonStyle}>\n            - ... -\n         </span>\n      )\n      pages = pages.filter((p, i) => i < page + 3 || i === lastPage - 1)\n   }\n   if (page > 5) {\n      pages[1] = (\n         <span key={2} style={buttonStyle}>\n            - ... -\n         </span>\n      )\n      pages = pages.filter((p, i) => i < 2 || i > page - 4)\n   }\n\n   return (\n      <div style={{ margin: '0 10px', minHeight: '50px', ...paginationStyle }}>\n         {title}\n\n         <select value={pageCount} onChange={(e) => getPage(page, Number(e.currentTarget.value))} style={selectStyle}>\n            <option value={4}>4</option>\n            <option value={7}>7</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n            <option value={50}>50</option>\n         </select>\n         {pages}\n      </div>\n   )\n}\n\nexport default Pagination\n","import React, { CSSProperties } from 'react'\n\ninterface IModal {\n   enableBackground?: boolean\n   backgroundStyle?: CSSProperties\n   backgroundOnClick?: () => void\n\n   width: number\n   height: number\n   modalStyle?: CSSProperties\n   modalOnClick?: () => void\n\n   show: boolean\n}\n\nconst Modal: React.FC<IModal> = ({\n   enableBackground,\n   backgroundStyle,\n   backgroundOnClick = () => {},\n\n   width,\n   height,\n   modalStyle,\n   modalOnClick = () => {},\n\n   show,\n   children,\n}) => {\n   const top = `calc(50vh - ${height / 2}px)`\n   const left = `calc(50vw - ${width / 2}px)`\n\n   if (!show) return null\n\n   console.log('render Modal')\n   return (\n      <>\n         {enableBackground && (\n            <div\n               style={{\n                  position: 'fixed',\n                  top: '0px',\n                  left: '0px',\n                  width: '100vw',\n                  height: '100vh',\n\n                  background: 'black',\n                  opacity: 0.35,\n                  zIndex: 20,\n\n                  ...backgroundStyle,\n               }}\n               onClick={backgroundOnClick}\n            />\n         )}\n         <div\n            style={{\n               position: 'fixed',\n               top,\n               left,\n               width,\n               height,\n\n               background: '#241734',\n               zIndex: 21,\n\n               ...modalStyle,\n            }}\n            onClick={modalOnClick}>\n            {children}\n         </div>\n      </>\n   )\n}\n\nexport default Modal\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { usePacks } from './usePacks'\nimport { Packs } from './Packs'\nimport { thunks as loginThunk } from '../../../f1-login/l2-bll/loginReducer'\nimport { actions, InitialPacksStateType, thunks } from '../../p2-bll/packsReducer'\nimport SearchDataContainer from '../../../../s1-main/m1-ui/u0-common/Atoms/SearchData/SearchDataContainer'\nimport Pagination from '../../../../s1-main/m1-ui/u0-common/Atoms/Pagination/Pagination'\nimport { Redirect } from 'react-router-dom'\nimport { PATH } from '../../../../s1-main/m1-ui/u3-routes/Routes'\nimport Modal from '../../../../s1-main/m1-ui/u0-common/Atoms/Modal/Modal'\nimport { FormikErrors, useFormik } from 'formik'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { SuperInputText } from '../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { Error } from '../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\nimport s from './PacksContainer.module.scss'\n\ntype FormValues = {\n   packName: string\n}\n\nexport const PacksContainer = () => {\n   const name = useSelector<AppStateType, string>((state) => state.login.name)\n   const isLoggedIn = useSelector<AppStateType, string>((state) => state.login.isLoggedIn)\n   const {\n      packs,\n      settings: { page, pageCount, packTotalCount },\n      showAddModal,\n      deleteModal: { showDeleteModal, packID },\n      updateModal: { showUpdateModal },\n   } = useSelector<AppStateType, InitialPacksStateType>((state) => state.packs)\n   const { modelPacks } = usePacks()\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      dispatch(thunks.fetchPacks())\n      if (!name) dispatch(loginThunk.meTC())\n   }, [dispatch, name])\n\n   const setName = useFormik({\n      initialValues: {\n         packName: '',\n      },\n      onSubmit: (values) => {\n         const { packName } = values\n         dispatch(thunks.createPack(packName))\n      },\n      validate: (values) => {\n         const { packName } = values\n         const errors: FormikErrors<FormValues> = {}\n         if (packName.length < 1) {\n            errors.packName = 'Укажите название для пака'\n         }\n         return errors\n      },\n   })\n\n   const updateName = useFormik({\n      initialValues: {\n         packName: '',\n      },\n      onSubmit: (values) => {\n         const { packName } = values\n         dispatch(thunks.updatePack({ name: packName, _id: packID }))\n      },\n      validate: (values) => {\n         const { packName } = values\n         const errors: FormikErrors<FormValues> = {}\n         if (packName.length < 1) {\n            errors.packName = 'Укажите название для пака'\n         }\n         return errors\n      },\n   })\n\n   const getPage = (newPage: number, newPageCount: number) => {\n      dispatch(thunks.fetchPacks(newPage, newPageCount))\n   }\n\n   const handlerDispatch = () => {\n      dispatch(thunks.fetchPacks())\n   }\n\n   if (isLoggedIn === 'notLogged') {\n      return <Redirect to={PATH.LOGIN} />\n   }\n\n   return (\n      <>\n         <Modal\n            enableBackground={true}\n            backgroundOnClick={() => {\n               dispatch(actions.showAddModal(!showAddModal))\n            }}\n            width={400}\n            height={300}\n            // modalOnClick={() => setShow(false)}\n            show={showAddModal}>\n            <div className={s.modal__container}>\n               <SuperButton\n                  onClick={() => {\n                     dispatch(actions.showAddModal(!showAddModal))\n                  }}\n                  className={s.close__btn}>\n                  X\n               </SuperButton>\n               <h4>Укажите название карточной стопки</h4>\n               <form onSubmit={setName.handleSubmit}>\n                  <SuperInputText placeholder={'Set pack name'} {...setName.getFieldProps('packName')} />\n                  {setName.errors && <Error textError={setName.errors.packName} />}\n                  <SuperButton disabled={!(setName.isValid && setName.dirty) || setName.isSubmitting} type='submit'>\n                     Add Pack\n                  </SuperButton>\n               </form>\n            </div>\n         </Modal>\n         <Modal\n            enableBackground={true}\n            backgroundOnClick={() => {\n               dispatch(actions.showDeleteModal(!showDeleteModal, ''))\n            }}\n            width={400}\n            height={300}\n            // modalOnClick={() => setShow(false)}\n            show={showDeleteModal}>\n            <div className={s.modal__container}>\n               <h4>Вы уверены что хотите удалить стопку?</h4>\n               <div className={s.button__container}>\n                  <SuperButton\n                     onClick={() => {\n                        dispatch(actions.showDeleteModal(!showDeleteModal, ''))\n                     }}>\n                     Отмена\n                  </SuperButton>\n                  <SuperButton onClick={() => dispatch(thunks.deletePack(packID))}>Удалить пак</SuperButton>\n               </div>\n            </div>\n         </Modal>\n\n         <Modal\n            enableBackground={true}\n            backgroundOnClick={() => {\n               dispatch(actions.showUpdateModal(!showUpdateModal, ''))\n            }}\n            width={400}\n            height={300}\n            // modalOnClick={() => setShow(false)}\n            show={showUpdateModal}>\n            <div className={s.modal__container}>\n               <SuperButton\n                  onClick={() => {\n                     dispatch(actions.showUpdateModal(!showUpdateModal, ''))\n                  }}\n                  className={s.close__btn}>\n                  X\n               </SuperButton>\n               <h4>Укажите новое название</h4>\n               <form onSubmit={updateName.handleSubmit}>\n                  <SuperInputText placeholder={'Set pack name'} {...updateName.getFieldProps('packName')} />\n                  {updateName.errors && <Error textError={updateName.errors.packName} />}\n                  <SuperButton\n                     disabled={!(updateName.isValid && updateName.dirty) || updateName.isSubmitting}\n                     type='submit'>\n                     Update\n                  </SuperButton>\n               </form>\n            </div>\n         </Modal>\n\n         <SearchDataContainer\n            fetchData={handlerDispatch}\n            startRange={0}\n            endRange={10}\n            searchValue={actions.searchPacks}\n            rangeValue={actions.setMinMaxPack}\n            getMyData={actions.getMyPack}\n         />\n\n         <Packs packs={packs} modelPacks={modelPacks} />\n         <Pagination page={page} pageCount={pageCount} pageTotalCount={packTotalCount} getPage={getPage} />\n      </>\n   )\n}\n","import React from 'react'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { NavLink } from 'react-router-dom'\nimport { ApiPacksType } from '../../p3-dal/packsAPI'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actions, InitialPacksStateType, thunks } from '../../p2-bll/packsReducer'\nimport SortButton from '../../../../s1-main/m1-ui/u0-common/Atoms/SortButton/SortButton'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\n\nexport const usePacks = () => {\n   const dispatch = useDispatch()\n   const {\n      showAddModal,\n      deleteModal: { showDeleteModal },\n      updateModal: { showUpdateModal },\n   } = useSelector<AppStateType, InitialPacksStateType>((state) => state.packs)\n\n   const modelPacks = {\n      renderTitle: () => {\n         const headerNames = ['Name', 'CardsCount', 'update', 'url']\n\n         return (\n            <tr>\n               {headerNames.map((header, index) => {\n                  if (header === 'Name') {\n                     return (\n                        <th key={index}>\n                           <div>\n                              {header}\n                              <SortButton fetchProducts={thunks.fetchPacks} setSortProducts={actions.sortPacks} />\n                           </div>\n                        </th>\n                     )\n                  }\n                  return <th key={index}>{header}</th>\n               })}\n               <th>\n                  <SuperButton\n                     onClick={() => {\n                        dispatch(actions.showAddModal(!showAddModal))\n                     }}>\n                     ADD\n                  </SuperButton>\n               </th>\n            </tr>\n         )\n      },\n      renderData: (pack: ApiPacksType, index: number) => {\n         return (\n            <tr key={index}>\n               <td>{pack.name}</td>\n               <td>{pack.cardsCount}</td>\n               <td>{pack.updated.slice(5, 16)}</td>\n               <td>{pack.deckCover}</td>\n               <td>\n                  <SuperButton\n                     onClick={() => {\n                        dispatch(actions.showDeleteModal(!showDeleteModal, pack._id))\n                     }}>\n                     del\n                  </SuperButton>\n                  <SuperButton\n                     onClick={() => {\n                        dispatch(actions.showUpdateModal(!showUpdateModal, pack._id))\n                     }}>\n                     update\n                  </SuperButton>\n                  <NavLink to={`/cards/${pack._id}`}>cards</NavLink>\n                  <NavLink style={{ marginLeft: '20px' }} to={`/learn/${pack._id}`}>\n                     learn\n                  </NavLink>\n               </td>\n            </tr>\n         )\n      },\n   }\n   return { modelPacks }\n}\n","import React from 'react'\nimport { PacksContainer } from './u1-packs/PacksContainer'\n\nexport const PacksPage = () => {\n   return (\n      <>\n         <PacksContainer />\n      </>\n   )\n}\n","import React from 'react'\nimport { Table } from '../../../../s1-main/m1-ui/u0-common/c9-Table/Table'\nimport { ApiCardsType } from '../../c3-dal/cardsAPI'\n\ntype PropsType = {\n   cards: ApiCardsType[]\n   modelCards: {\n      renderTitle: () => JSX.Element\n      renderData: (table: ApiCardsType, index: number) => JSX.Element\n   }\n}\n\n// some empty comment\nexport const Cards: React.FC<PropsType> = ({ cards, modelCards }) => {\n   return (\n      <>\n         <Table data={cards} model={modelCards} />\n      </>\n   )\n}\n","import { instance } from '../../../s1-main/m3-dal/instance'\n\nexport const cardsAPI = {\n   getCards: async (\n      packUserId: string,\n      min?: number,\n      max?: number,\n      page?: number,\n      pageCount?: number,\n      cardQuestion?: string | null,\n      sortCards?: string,\n   ) => {\n      const response = await instance.get<ResultCardsType>(\n         `cards/card/?cardsPack_id=${packUserId}&` +\n            (cardQuestion && cardQuestion.length > 0 ? `cardQuestion=${cardQuestion}&` : '') +\n            (max ? `min=${min}&max=${max}&` : '') +\n            (page ? `page=${page}&pageCount=${pageCount}&` : '') +\n            (sortCards ? `sortCards=${sortCards}&` : ''),\n      )\n      return response.data\n   },\n   createCard: async (data: CreateCardType) => {\n      await instance.post('cards/card', { card: data })\n   },\n   deleteCard: async (id: string) => {\n      await instance.delete(`cards/card?id=${id}`)\n   },\n   updateCard: async (data: UpdateCardType) => {\n      await instance.put('cards/card', { card: data })\n   },\n}\n\nexport type UpdateCardType = {\n   _id: string\n   question: string\n   comments: string\n}\n\nexport type CreateCardType = {\n   cardsPack_id: string\n   question: string\n   answer: string\n   grade: number\n   shots: number\n   rating: number\n   answerImg: string\n   questionImg: string\n   questionVideo: string\n   answerVideo: string\n   type: string\n}\n\nexport type ApiCardsType = {\n   answer: string\n   question: string\n   cardsPack_id: string\n   grade: number\n   rating?: number\n   shots?: number\n   type?: string\n   user_id?: string\n   created?: string\n   updated: string\n   __v?: number\n   _id: string\n   questionImg?: string\n}\n\ntype ResultCardsType = {\n   cards: ApiCardsType[]\n   cardsTotalCount: number\n   maxGrade: number\n   minGrade: number\n   page: number\n   pageCount: number\n   packUserId: string\n}\n","import { instance } from '../../../s1-main/m3-dal/instance'\n\nexport const gradesAPI = {\n   updateGrade: (data: RequestGradeType) => {\n      return instance.put<ResponseGradeType>('/cards/grade', data)\n   },\n}\n\nexport type RequestGradeType = {\n   grade: number // 1..5 !!!\n   card_id: string\n}\n\nexport type ResponseGradeType = {\n   updatedGrade: {\n      _id?: string\n      cardsPack_id?: string\n      card_id: string\n      user_id?: string\n      grade: number\n      shots: number\n   }\n}\n","import { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { ApiCardsType, cardsAPI } from '../../f7-cards/c3-dal/cardsAPI'\nimport { Reducer } from 'redux'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\n\ntype InitialStateType = typeof initialState\n\ntype ActionTypes = InferActionsType<typeof cardActions>\n\nconst initialState = {\n   cards: [] as ApiCardsType[],\n   card: {} as ApiCardsType,\n   error: '',\n   pending: true,\n}\n\nenum CARD {\n   SET_CARD = 'learn/SET_CARD',\n   SET_CARDS = 'learn/SET_CARDS',\n   SET_ERROR = 'learn/SET_ERROR',\n   SET_IS_PENDING = 'learn/SET_IS_PENDING',\n   ERASE_CARDS = 'learn/ERASE_CARDS',\n}\n\nexport const learnReducer: Reducer<InitialStateType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialStateType => {\n   switch (action.type) {\n      case CARD.SET_CARD:\n         const getCard = (cards: ApiCardsType[]) => {\n            const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0)\n            const rand = Math.random() * sum\n            const res = cards.reduce(\n               (acc: { sum: number; id: number }, card, i) => {\n                  const newSum = acc.sum + (6 - card.grade) * (6 - card.grade)\n                  return { sum: newSum, id: newSum < rand ? i : acc.id }\n               },\n               { sum: 0, id: -1 },\n            )\n            return cards[res.id + 1]\n         }\n         return {\n            ...state,\n            card: getCard(action.cards),\n         }\n      case CARD.SET_ERROR:\n         return {\n            ...state,\n            error: action.error,\n         }\n      case CARD.SET_CARDS:\n         return {\n            ...state,\n            cards: action.cards,\n         }\n      case CARD.ERASE_CARDS:\n         return {\n            ...state,\n            cards: action.eraseArray,\n         }\n      case CARD.SET_IS_PENDING:\n         return {\n            ...state,\n            pending: action.pending,\n         }\n      default:\n         return state\n   }\n}\n\nexport const cardActions = {\n   setCard: (cards: ApiCardsType[]) => ({ type: CARD.SET_CARD as const, cards }),\n   setCards: (cards: ApiCardsType[]) => ({ type: CARD.SET_CARDS as const, cards }),\n   setError: (error: string) => ({ type: CARD.SET_ERROR as const, error }),\n   setPending: (pending: boolean) => ({ type: CARD.SET_IS_PENDING as const, pending }),\n   eraseCards: (eraseArray: ApiCardsType[]) => ({ type: CARD.ERASE_CARDS, eraseArray } as const),\n}\n\nexport const thunks = {\n   addCards: (id: string): AppThunk => async (dispatch) => {\n      try {\n         const response = await cardsAPI.getCards(id)\n         if (response.cards.length > 0) {\n            dispatch(cardActions.setCards(response.cards))\n            dispatch(cardActions.setCard(response.cards))\n         } else {\n            dispatch(cardActions.setError('This pack has no cards. Please choose another one'))\n         }\n      } catch (e) {\n         const error = e.response ? e.response.data.error : e.message + ', more details in the console'\n         dispatch(cardActions.setError(error))\n      } finally {\n         dispatch(cardActions.setPending(false))\n      }\n   },\n}\n","import React, { useEffect } from 'react'\nimport { Cards } from './Cards'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { useCards } from './useCards'\nimport { cardsActions, InitialStateType, thunks } from '../../c2-bll/cardsReducer'\nimport { Redirect, useParams } from 'react-router-dom'\nimport { PATH } from '../../../../s1-main/m1-ui/u3-routes/Routes'\nimport Pagination from '../../../../s1-main/m1-ui/u0-common/Atoms/Pagination/Pagination'\nimport SearchDataContainer from '../../../../s1-main/m1-ui/u0-common/Atoms/SearchData/SearchDataContainer'\n\nexport const CardsContainer = () => {\n   const isLoggedIn = useSelector<AppStateType, string>((state) => state.login.isLoggedIn)\n   const {\n      cards,\n      settings: { page, pageCount, cardsTotalCount },\n   } = useSelector<AppStateType, InitialStateType>((state) => state.cards)\n   const { id } = useParams<{ id: string }>()\n   const { modelCards } = useCards(id)\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      dispatch(thunks.fetchCards(id))\n   }, [dispatch])\n\n   const getPage = (newPage: number, newPageCount: number) => {\n      dispatch(thunks.fetchCards(id, newPage, newPageCount))\n   }\n\n   if (isLoggedIn === 'notLogged') {\n      return <Redirect to={PATH.LOGIN} />\n   }\n\n   const handlerDispatch = () => {\n      dispatch(thunks.fetchCards(id))\n   }\n\n   return (\n      <>\n         <SearchDataContainer\n            startRange={0}\n            endRange={10}\n            fetchData={handlerDispatch}\n            searchValue={cardsActions.searchCards}\n            rangeValue={cardsActions.setMinMaxCards}\n         />\n         <Cards cards={cards} modelCards={modelCards} />\n         <Pagination page={page} pageCount={pageCount} pageTotalCount={cardsTotalCount} getPage={getPage} />\n      </>\n   )\n}\n","import React from 'react'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { ApiCardsType } from '../../c3-dal/cardsAPI'\nimport { useDispatch } from 'react-redux'\nimport { thunks } from '../../c2-bll/cardsReducer'\n\nexport const useCards = (id: string) => {\n   const dispatch = useDispatch()\n\n   const modelCards = {\n      renderTitle: () => {\n         const headerNames = ['question', 'answer', 'Grade', 'Shots', 'updated', 'Covers']\n\n         return (\n            <tr>\n               {headerNames.map((header, index) => (\n                  <th key={index}>{header}</th>\n               ))}\n               <th>\n                  <SuperButton\n                     onClick={() =>\n                        dispatch(\n                           thunks.createCard(\n                              {\n                                 answer: 'Some Answer',\n                                 question: 'Some question',\n                                 answerImg: '',\n                                 answerVideo: '',\n                                 cardsPack_id: id,\n                                 grade: 0,\n                                 rating: 0,\n                                 shots: 0,\n                                 type: '',\n                                 questionImg: '',\n                                 questionVideo: '',\n                              },\n                              id,\n                           ),\n                        )\n                     }>\n                     ADD\n                  </SuperButton>\n               </th>\n            </tr>\n         )\n      },\n      renderData: (card: ApiCardsType, index: number) => {\n         return (\n            <tr key={index}>\n               <td>{card.question}</td>\n               <td>{card.answer}</td>\n               <td>{card.grade}</td>\n               <td>{card.shots}</td>\n               <td>{card.updated.slice(5, 16)}</td>\n               <td>{card.questionImg}</td>\n               <td>\n                  <SuperButton onClick={() => dispatch(thunks.deleteCard(card._id, card.cardsPack_id))}>\n                     del\n                  </SuperButton>\n                  <SuperButton\n                     onClick={() =>\n                        dispatch(\n                           thunks.updateCard(\n                              {\n                                 _id: card._id,\n                                 question: 'update question',\n                                 comments: 'new comment',\n                              },\n                              card.cardsPack_id,\n                           ),\n                        )\n                     }>\n                     update\n                  </SuperButton>\n               </td>\n            </tr>\n         )\n      },\n   }\n\n   return { modelCards }\n}\n","import React from 'react'\nimport { CardsContainer } from './u1-cards/CardsContainer'\n\nexport const CardsPage = () => {\n   return (\n      <>\n         <CardsContainer />\n      </>\n   )\n}\n","import React from 'react'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\n\ntype PropsType = {\n   handlerAddGrade: (grade: number) => void\n}\n\nexport const Grades: React.FC<PropsType> = ({ handlerAddGrade }) => {\n   return (\n      <>\n         <SuperButton onClick={() => handlerAddGrade(1)} children={'думал не думал'} />\n         <SuperButton onClick={() => handlerAddGrade(2)} children={'заплужил'} />\n         <SuperButton onClick={() => handlerAddGrade(3)} children={'долго думал'} />\n         <SuperButton onClick={() => handlerAddGrade(4)} children={'долго не думал'} />\n         <SuperButton onClick={() => handlerAddGrade(5)} children={'не долго думал'} />\n      </>\n   )\n}\n","import React from 'react'\nimport { Grades } from './Grades'\nimport { useDispatch } from 'react-redux'\nimport { thunks } from '../../../f7-cards/c2-bll/cardsReducer'\n\nexport type PropsGradesPageType = {\n   card_id: string\n}\n\nexport const GradesContainer: React.FC<PropsGradesPageType> = ({ card_id }) => {\n   const dispatch = useDispatch()\n\n   const handlerAddGrade = (grade: number) => {\n      dispatch(thunks.updateCardGrade({ grade, card_id }))\n   }\n   return (\n      <>\n         <Grades handlerAddGrade={handlerAddGrade} />\n      </>\n   )\n}\n","import React from 'react'\nimport { GradesContainer } from './u1-grades/GradesContainer'\n\nexport type PropsGradesPageType = {\n   card_id: string\n}\n\nexport const GradesPage: React.FC<PropsGradesPageType> = ({ card_id }) => {\n   return (\n      <>\n         <GradesContainer card_id={card_id} />\n      </>\n   )\n}\n","import React from 'react'\nimport { ApiCardsType } from '../../../f7-cards/c3-dal/cardsAPI'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { GradesPage } from '../../../f9-grades/g1-ui/GradesPage'\n\ntype PropsType = {\n   card: ApiCardsType\n   isChecked: boolean\n   setChecked: (checked: boolean) => void\n   nextQuestion: () => void\n}\n\nexport const Learn: React.FC<PropsType> = ({ card, nextQuestion, setChecked, isChecked }) => {\n   return (\n      <>\n         <h2>Let's learn</h2>\n         <span>{card.question}</span>\n         <SuperButton onClick={() => setChecked(true)} children={'Show answer'} />\n         {isChecked && (\n            <>\n               <span>{card.answer}</span>\n               <GradesPage card_id={card._id} />\n               <SuperButton onClick={() => nextQuestion()} children={'Next question'} />\n            </>\n         )}\n      </>\n   )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Learn } from './Learn'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { ApiCardsType } from '../../../f7-cards/c3-dal/cardsAPI'\nimport { useParams } from 'react-router-dom'\nimport { ReactComponent as Loader } from '../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\nimport { Error } from '../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\nimport { cardActions, thunks } from '../../l2-bll/learnReducer'\n\nexport const LearnContainer: React.FC = () => {\n   const [isChecked, setChecked] = useState<boolean>(false)\n   const cards = useSelector<AppStateType, ApiCardsType[]>((store) => store.cards.cards)\n   const card = useSelector<AppStateType, ApiCardsType>((store) => store.learn.card)\n   const error = useSelector<AppStateType, string>((store) => store.learn.error)\n   const pending = useSelector<AppStateType, boolean>((store) => store.learn.pending)\n   const { id } = useParams<{ id: string }>()\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      dispatch(thunks.addCards(id))\n\n      return () => {\n         dispatch(cardActions.eraseCards([] as ApiCardsType[]))\n         dispatch(cardActions.setError(''))\n         dispatch(cardActions.setPending(true))\n      }\n   }, [dispatch, id])\n\n   const nextQuestion = () => {\n      setChecked(false)\n      dispatch(cardActions.setCard(cards))\n   }\n\n   if (pending) {\n      return <Loader />\n   }\n\n   return error ? (\n      <Error textError={error} />\n   ) : (\n      <>\n         <Learn card={card} setChecked={setChecked} nextQuestion={nextQuestion} isChecked={isChecked} />\n      </>\n   )\n}\n","import React from 'react'\nimport { LearnContainer } from './u1-learn/LearnContainer'\n\nexport const LearnPage: React.FC = () => {\n   return (\n      <>\n         <LearnContainer />\n      </>\n   )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { LoginPage } from '../../../s2-features/f1-login/l1-ui/LoginPage'\nimport { Page404 } from './Page404'\nimport { RegistrationPage } from '../../../s2-features/f2-registration/r1-ui/RegistrationPage'\nimport { ComponentsTestRack } from '../u0-common/ComponentsTestRack'\nimport { ProfilePage } from '../../../s2-features/f3-profile/p1-ui/ProfilePage'\nimport PasswordRecoveryPage from '../../../s2-features/f4-passwordRecovery/pr1-ui/PasswordRecoveryPage'\nimport NewPasswordEntryPage from '../../../s2-features/f5-newPasswordEntry/npe1-ui/NewPasswordEntryPage'\nimport { PacksPage } from '../../../s2-features/f6-packs/p1-ui/PacksPage'\nimport { CardsPage } from '../../../s2-features/f7-cards/c1-ui/CardsPage'\nimport { LearnPage } from '../../../s2-features/f8-learn/l1-ui/LearnPage'\n\nexport const PATH = {\n   LOGIN: '/',\n   REGISTRATION: '/registration',\n   PROFILE: '/profile',\n   PASSWORD_RECOVERY: '/password-recovery',\n   NEW_PASSWORD_ENTRY: '/set-new-password/:token',\n   COMPONENT_TEST_RACK: '/component-test-rack',\n   PACKS: '/packs',\n   CARDS: '/cards/:id',\n   LEARN: '/learn/:id',\n}\n\nexport const Routes = () => {\n   return (\n      <Switch>\n         <Route path={PATH.LOGIN} exact render={() => <LoginPage />} />\n         <Route path={PATH.REGISTRATION} exact render={() => <RegistrationPage />} />\n         <Route path={PATH.PROFILE} exact render={() => <ProfilePage />} />\n         <Route path={PATH.PASSWORD_RECOVERY} exact render={() => <PasswordRecoveryPage />} />\n         <Route path={PATH.NEW_PASSWORD_ENTRY} render={() => <NewPasswordEntryPage />} />\n         <Route path={PATH.COMPONENT_TEST_RACK} exact render={() => <ComponentsTestRack />} />\n         <Route path={PATH.PACKS} exact render={() => <PacksPage />} />\n         <Route path={PATH.CARDS} render={() => <CardsPage />} />\n         <Route path={PATH.LEARN} render={() => <LearnPage />} />\n         <Route path={'/404'} render={() => <Page404 />} />\n\n         <Redirect from={'*'} to={'/404'} />\n      </Switch>\n   )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { PATH } from '../u3-routes/Routes'\n\nexport const Header = () => {\n   return (\n      <div>\n         Header\n         <NavLink to={PATH.LOGIN}>Login_/</NavLink>\n         <NavLink to={PATH.REGISTRATION}>Registration_/</NavLink>\n         <NavLink to={PATH.PROFILE}>Profile_/</NavLink>\n         <NavLink to={PATH.PASSWORD_RECOVERY}>Password recovery_/</NavLink>\n         <NavLink to={PATH.NEW_PASSWORD_ENTRY}>New password entry_/</NavLink>\n         <NavLink to={PATH.CARDS}>Cards_/</NavLink>\n         <NavLink to={PATH.COMPONENT_TEST_RACK}>Component test rack_/</NavLink>\n         <NavLink to={PATH.PACKS}>Packs_/</NavLink>\n      </div>\n   )\n}\n","import React from 'react'\nimport { Header } from '../u4-header/Header'\nimport { Routes } from '../u3-routes/Routes'\nimport s from './Main.module.scss'\n\nexport const Main = () => {\n   return (\n      <div className={s.mainContainer}>\n         Main\n         <Header />\n         <Routes />\n      </div>\n   )\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { loginReducer } from '../../s2-features/f1-login/l2-bll/loginReducer'\nimport { profileReducer } from '../../s2-features/f3-profile/p2-bll/profileReducer'\nimport { passwordRecoveryReducer } from '../../s2-features/f4-passwordRecovery/pr2-bll/passwordRecoveryReducer'\nimport { registrationReducer } from '../../s2-features/f2-registration/r2-bll/registrationReducer'\nimport { updatePasswordReducer } from '../../s2-features/f5-newPasswordEntry/npe2-bll/updatePasswordReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { packsReducer } from '../../s2-features/f6-packs/p2-bll/packsReducer'\nimport { cardsReducer } from '../../s2-features/f7-cards/c2-bll/cardsReducer'\nimport { learnReducer } from '../../s2-features/f8-learn/l2-bll/learnReducer'\n\nconst reducers = combineReducers({\n   login: loginReducer,\n   profile: profileReducer,\n   registration: registrationReducer,\n   passRecovery: passwordRecoveryReducer,\n   updatePass: updatePasswordReducer,\n   packs: packsReducer,\n   cards: cardsReducer,\n   learn: learnReducer,\n})\n\nexport const store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n\nexport type AppStateType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store\n","import { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { Reducer } from 'redux'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\n\ntype InitialStateType = typeof initialState\n\ntype ActionTypes = InferActionsType<typeof actions>\n\nconst initialState = {}\n\nexport const profileReducer: Reducer<InitialStateType, ActionTypes> = (state, action): InitialStateType => {\n   switch (action.type) {\n      case 'SOME':\n         return { ...state }\n      default:\n         return { ...state }\n   }\n}\n\nconst actions = {\n   someAC: () => ({ type: 'SOME' }),\n}\n\nconst thunks = {\n   someTC: (): AppThunk => (dispatch) => {},\n}\n","import React from 'react'\nimport { Main } from '../u2-main/Main'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store } from '../../m2-bll/store'\n\nexport const App = () => {\n   return (\n      <Provider store={store}>\n         <HashRouter>\n            <div>\n               <Main />\n            </div>\n         </HashRouter>\n      </Provider>\n   )\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n   if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n         getCLS(onPerfEntry)\n         getFID(onPerfEntry)\n         getFCP(onPerfEntry)\n         getLCP(onPerfEntry)\n         getTTFB(onPerfEntry)\n      })\n   }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { App } from './s1-main/m1-ui/u1-app/App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from './s1-main/m2-bll/store'\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}