{"version":3,"sources":["s2-features/f6-packs/p1-ui/u1-packs/PacksContainer.module.scss","s2-features/f7-cards/c1-ui/u1-cards/Modals/CardModal.module.scss","s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText.module.scss","s1-main/m1-ui/u0-common/c3-SuperCheckbox/SuperCheckbox.module.scss","s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton.module.scss","s1-main/m1-ui/u0-common/c7-Error/Error.module.scss","s3-dev/d4-AvatarInput/avatar.module.scss","s1-main/m1-ui/u0-common/Atoms/SearchData/SearchData.module.scss","s1-main/m1-ui/u2-main/Main.module.scss","s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText.tsx","s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton.tsx","s1-main/m1-ui/u0-common/c3-SuperCheckbox/SuperCheckbox.tsx","s1-main/m1-ui/u0-common/c8-Assets/Spin.svg","s2-features/f1-login/l2-bll/loginReducer.ts","s1-main/m1-ui/u0-common/c7-Error/Error.tsx","s2-features/f1-login/l1-ui/u1-login/Login.tsx","s1-main/m3-dal/instance.ts","s2-features/f1-login/l3-dal/loginAPI.ts","s2-features/f2-registration/r2-bll/registrationReducer.ts","s2-features/f1-login/l1-ui/u1-login/LoginContainer.tsx","s2-features/f1-login/l1-ui/LoginPage.tsx","s1-main/m1-ui/u3-routes/Page404.tsx","s2-features/f2-registration/r1-ui/u1-registration/Registration.tsx","s2-features/f2-registration/r3-dal/registrationAPI.ts","s2-features/f5-newPasswordEntry/npe2-bll/updatePasswordReducer.ts","s2-features/f2-registration/r1-ui/u1-registration/RegistrationContainer.tsx","s2-features/f2-registration/r1-ui/RegistrationPage.tsx","s3-dev/d3-SuperMultiplePreview/SuperMultiplePreview.tsx","s1-main/m1-ui/u0-common/ComponentsTestRack.tsx","s3-dev/d4-AvatarInput/AvatarInput.tsx","s2-features/f3-profile/p1-ui/u1-profile/Profile.tsx","s2-features/f3-profile/p1-ui/u1-profile/ProfileContainer.tsx","s2-features/f3-profile/p1-ui/ProfilePage.tsx","s2-features/f4-passwordRecovery/pr3-dal/passwordRecoveryAPI.ts","s2-features/f5-newPasswordEntry/npe3-dal/updatePassAPI.ts","s2-features/f4-passwordRecovery/pr2-bll/passwordRecoveryReducer.ts","s2-features/f6-packs/p2-bll/packsReducer.ts","s2-features/f4-passwordRecovery/pr1-ui/u1-passwordRecovery/PasswordRecovery.tsx","s2-features/f4-passwordRecovery/pr1-ui/u1-passwordRecovery/PasswordRecoveryContainer.tsx","s2-features/f4-passwordRecovery/pr1-ui/PasswordRecoveryPage.tsx","s2-features/f5-newPasswordEntry/npe1-ui/u1-passwordEntry/NewPasswordEntry.tsx","s2-features/f5-newPasswordEntry/npe1-ui/u1-passwordEntry/NewPasswordEntryContainer.tsx","s2-features/f5-newPasswordEntry/npe1-ui/NewPasswordEntryPage.tsx","s2-features/f6-packs/p3-dal/packsAPI.ts","s2-features/f7-cards/c2-bll/cardsReducer.ts","s1-main/m1-ui/u0-common/Atoms/SortButton/SortButton.tsx","s2-features/f7-cards/c3-dal/cardsAPI.ts","s2-features/f9-grades/g3-dal/gradesAPI.ts","s2-features/f8-learn/l2-bll/learnReducer.ts","s1-main/m1-ui/u0-common/c9-Table/Table.tsx","s2-features/f6-packs/p1-ui/u1-packs/Packs.tsx","s1-main/m1-ui/u0-common/c9-Range/r1-DoubleRange/DoubleRange.tsx","s1-main/m1-ui/u0-common/Atoms/SearchData/SearchData.tsx","s1-main/m1-ui/u0-common/Atoms/SearchData/SearchDataContainer.tsx","s1-main/m1-ui/u0-common/Atoms/Pagination/Pagination.tsx","s1-main/m1-ui/u0-common/Atoms/Modals/Modal.tsx","s2-features/f6-packs/p1-ui/u1-packs/Modals/UpdatePackModal.tsx","s2-features/f6-packs/p1-ui/u1-packs/Modals/AddPackModal.tsx","s2-features/f6-packs/p1-ui/u1-packs/Modals/DeletePackModal.tsx","s2-features/f6-packs/p1-ui/u1-packs/PacksContainer.tsx","s2-features/f6-packs/p1-ui/u1-packs/usePacks.tsx","s2-features/f6-packs/p1-ui/PacksPage.tsx","s2-features/f7-cards/c1-ui/u1-cards/Cards.tsx","s2-features/f7-cards/c1-ui/u1-cards/Modals/AddCardModal.tsx","s2-features/f7-cards/c1-ui/u1-cards/Modals/DeleteCardModal.tsx","s2-features/f7-cards/c1-ui/u1-cards/Modals/UpdateCardModel.tsx","s2-features/f7-cards/c1-ui/u1-cards/CardsContainer.tsx","s2-features/f7-cards/c1-ui/u1-cards/useCards.tsx","s2-features/f7-cards/c1-ui/CardsPage.tsx","s2-features/f9-grades/g1-ui/u1-grades/Grades.tsx","s2-features/f9-grades/g1-ui/u1-grades/GradesContainer.tsx","s2-features/f9-grades/g1-ui/GradesPage.tsx","s2-features/f8-learn/l1-ui/u1-learn/Learn.tsx","s2-features/f8-learn/l1-ui/u1-learn/LearnContainer.tsx","s2-features/f8-learn/l1-ui/LearnPage.tsx","s1-main/m1-ui/u3-routes/Routes.tsx","s1-main/m1-ui/u4-header/Header.tsx","s1-main/m1-ui/u2-main/Main.tsx","s1-main/m2-bll/store.ts","s2-features/f3-profile/p2-bll/profileReducer.ts","s1-main/m1-ui/u1-app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","placeholder","className","spanClassName","restProps","finalInputClassName","s","formFieldError","formField","formGroup","id","e","currentTarget","value","key","SuperButton","red","finalClassName","btn","SuperCheckbox","onChangeChecked","children","checkbox","checked","check","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","transform","cx","cy","r","fill","fillOpacity","attributeName","begin","values","keyTimes","dur","repeatCount","_ref6","_ref7","_ref8","_ref9","SvgSpin","_ref","svgRef","title","titleId","props","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","ref","LOGIN","ForwardRef","Error","textError","Login","React","memo","formik","marginTop","onSubmit","handleSubmit","isSubmitting","htmlFor","getFieldProps","errors","email","password","disabled","isValid","marginRight","to","PATH","REGISTRATION","PASSWORD_RECOVERY","LoginWithMemo","nextProps","instance","axios","create","baseURL","withCredentials","loginAPI","login","data","a","post","response","logout","delete","me","setPhoto","avatar","name","put","initialState","userID","isLoggedIn","pending","uploadAvatar","actions","SET_USER","IS_LOGGED_IN","SET_ERROR","SET_PENDING","SET_USER_ID","SET_USER_AVATAR","status","UPLOAD_USER_AVATAR","errorHandler","dispatch","message","thunks","_id","LoginContainer","useSelector","state","useDispatch","useEffect","useFormik","initialValues","rememberMe","validate","test","PROFILE","LoginPage","Page404","Registration","serverErrors","console","log","confirmPassword","dirty","registrationAPI","setRegister","result","UPDATE_PASSWORD","isSuccessRegister","IS_REGISTER","RegistrationContainer","registration","RegistrationPage","SuperMultiplePreview","files","useState","selectedFiles","setSelectedFiles","fileHandleDelete","filter","file","fileArray","Array","from","map","randomId","Math","floor","random","img","URL","createObjectURL","size","lastMod","lastModified","prevFiles","concat","multiple","padding","border","cursor","borderRadius","flexWrap","src","alt","onClick","ComponentsTestRack","AvatarInput","setFile","reader","FileReader","onloadend","newFile","readAsDataURL","position","justifyContent","user_photoBlock","backgroundImage","renderFiles","Profile","ProfileContainer","statePending","setPending","ProfilePage","passRecoveryAPI","recovery","token","updatePassAPI","updatePass","resetPasswordToken","passIsUpdated","actionsUpdate","UPDATE_RESULT","UPDATED_PASS","updatePasswordTC","res","info","PACKS","inputText","text","CHANGE_PASS","SEND_EMAIL","recoverThunks","PasswordRecovery","inputHandler","buttonClickHandler","PasswordRecoveryContainer","recoveryResult","passRecovery","PasswordRecoveryPage","NewPasswordEntry","resultData","NewPasswordEntryContainer","isUpdate","useParams","WrappedNewPasswordEntry","useMemo","NewPasswordEntryPage","packsAPI","getPacks","searchName","min","max","page","pageCount","sortProducts","get","createPack","cardsPack","deletePack","pack_id","updatePack","packs","settings","packTotalCount","sortPack","showAddModal","deleteModal","showDeleteModal","packID","updateModal","showUpdateModal","packName","CARDS","setPacks","FETCH_PACKS","searchPacks","SEARCH_PACKS","setMinMaxPack","SET_MIN_MAX_PACKS","sortPacks","sortedPack","SORT_PACK","getMyPack","GET_MY_PACK","modal","SHOW_ADD_MODAL","SHOW_DELETE_MODAL","SHOW_UPDATE_MODAL","fetchPacks","newPage","newPageCount","getStore","cardPacks","minCardsCount","maxCardsCount","cardPacksTotalCount","private","path","deckCover","grade","rating","shots","SortButton","fetchProducts","setSortProducts","sort","setSort","sortData","x","undefined","cardsAPI","getCards","packUserId","cardQuestion","sortCards","createCard","card","deleteCard","updateCard","gradesAPI","cards","cardsTotalCount","showCardsModal","cardID","question","comments","CARD","cardsActions","fetchCards","SET_CARDS","searchCards","SEARCH_CARDS","setMinMaxCards","SET_MIN_MAX_CARDS","SORT_CARDS","updateCardGrade","UPDATE_CARD_GRADE","SHOW_CARDS_MODAL","getUserID","UserID","GET_USER_ID","packUId","minGrade","answer","answerImg","answerVideo","cardsPack_id","questionImg","questionVideo","updatedGrade","card_id","Table","model","striped","bordered","hover","variant","renderTitle","renderData","Packs","modelPacks","FlexAlignCenter","alignItems","FlexCenterCenter","DoubleRange","step","startData","endData","rangeData","rangeDataHandler","renderTrack","onMouseDown","onTouchStart","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","backgroundColor","boxShadow","top","color","fontWeight","fontSize","fontFamily","toFixed","SearchData","SearchDataContainer","startRange","endRange","fetchData","searchValue","rangeValue","getMyData","setRangeData","fetchMyData","setMyFetchData","searchData","Pagination","pageTotalCount","getPage","paginationStyle","buttonStyle","selectStyle","pages","lastPage","ceil","push","p","minHeight","Number","Modal","enableBackground","backgroundStyle","backgroundOnClick","modalStyle","modalOnClick","show","left","opacity","zIndex","UpdatePackModal","updateName","modal__container","close__btn","AddPackModal","setName","DeletePackModal","button__container","PacksContainer","header","pack","cardsCount","updated","slice","user_id","marginLeft","usePacks","loginThunk","PacksPage","Cards","modelCards","AddCardModal","PackID","DeleteCardModal","UpdateCardModal","CardsContainer","packUserID","useCards","CardsPage","Grades","handlerAddGrade","GradesContainer","GradesPage","Learn","nextQuestion","setChecked","isChecked","cardActions","SET_CARD","SET_IS_PENDING","eraseArray","ERASE_CARDS","LearnContainer","store","learn","LearnPage","NEW_PASSWORD_ENTRY","COMPONENT_TEST_RACK","LEARN","Routes","exact","render","Header","Main","mainContainer","reducers","combineReducers","action","profile","composeWithDevTools","SET_PASS","find","getCard","sum","reduce","acc","rand","newSum","createStore","applyMiddleware","thunkMiddleware","window","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8820f1dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__container\":\"PacksContainer_modal__container__3_tVg\",\"button__container\":\"PacksContainer_button__container__pnIW-\",\"close__btn\":\"PacksContainer_close__btn__HGhu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__container\":\"CardModal_modal__container__28T7n\",\"button__container\":\"CardModal_button__container__85GRP\",\"close__btn\":\"CardModal_close__btn__2beJZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formField\":\"SuperInputText_formField__2Mpgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__QGvED\",\"check\":\"SuperCheckbox_check__1yPi_\",\"spanClassName\":\"SuperCheckbox_spanClassName__Q-gso\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton_btn__23Mcy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__1izbF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_photoBlock\":\"avatar_user_photoBlock__1mzbI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchData__container\":\"SearchData_SearchData__container__2kVos\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Main_mainContainer__1Du-L\"};","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react'\nimport s from './SuperInputText.module.scss'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n   onChangeText?: (value: string) => void\n   onEnter?: () => void\n   error?: string\n   spanClassName?: string\n   placeholder?: string\n}\n\nexport const SuperInputText: React.FC<SuperInputTextPropsType> = ({\n   type,\n   onChange,\n   onChangeText,\n   onKeyPress,\n   onEnter,\n   error,\n   className,\n   spanClassName,\n   placeholder,\n   ...restProps\n}) => {\n   const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      onChange && onChange(e)\n\n      onChangeText && onChangeText(e.currentTarget.value)\n   }\n   const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n      onKeyPress && onKeyPress(e)\n\n      e.key === 'Enter' && onEnter && onEnter()\n   }\n   const finalInputClassName = error ? `${s.formFieldError}` : `${s.formField}`\n\n   return (\n      <div className={s.formGroup}>\n         <input\n            id='lineInput'\n            placeholder={placeholder}\n            type={'text'}\n            onChange={onChangeCallback}\n            onKeyPress={onKeyPressCallback}\n            className={finalInputClassName}\n            {...restProps}\n         />\n      </div>\n   )\n}\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react'\nimport s from './SuperButton.module.scss'\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n   red?: boolean\n}\n\nexport const SuperButton: React.FC<SuperButtonPropsType> = ({ red, className, ...restProps }) => {\n   const finalClassName = `${className} ${red ? s.red : s.btn}`\n\n   return <button className={finalClassName} {...restProps} />\n}\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react'\nimport s from './SuperCheckbox.module.scss'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n   onChangeChecked?: (checked: boolean) => void\n   spanClassName?: string\n}\n\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\n   type,\n   onChange,\n   onChangeChecked,\n   className,\n   spanClassName,\n   children,\n\n   ...restProps\n}) => {\n   const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n      onChange && onChange(e)\n\n      onChangeChecked && onChangeChecked(e.currentTarget.checked)\n   }\n\n   const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n   return (\n      <label className={finalInputClassName}>\n         <input type={'checkbox'} onChange={onChangeCallback} {...restProps} />\n         <span className={s.check} />\n         {children && <span className={s.spanClassName}>{children}</span>}\n      </label>\n   )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(80,50)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(0)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 1\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.875s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.875s\"\n}))));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(71.21320343559643,71.21320343559643)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(45)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.875\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.75s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.75s\"\n}))));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(50,80)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(90)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.75\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.625s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.625s\"\n}))));\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(28.786796564403577,71.21320343559643)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(135)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.625\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.5s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.5s\"\n}))));\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(20,50.00000000000001)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(180)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.5\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.375s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.375s\"\n}))));\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(28.78679656440357,28.786796564403577)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(225)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.375\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.25s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.25s\"\n}))));\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(49.99999999999999,20)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(270)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.25\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"-0.125s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"-0.125s\"\n}))));\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(71.21320343559643,28.78679656440357)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"rotate(315)\"\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 0,\n  cy: 0,\n  r: 6,\n  fill: \"#f9c80e\",\n  fillOpacity: 0.125\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"scale\",\n  begin: \"0s\",\n  values: \"1.5 1.5;1 1\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  keyTimes: \"0;1\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\",\n  values: \"1;0\",\n  begin: \"0s\"\n}))));\n\nfunction SvgSpin(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    style: {\n      margin: \"auto\",\n      background: \"rgb(36, 23, 52) none repeat scroll 0% 0%\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"200px\",\n    height: \"200px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSpin);\nexport default __webpack_public_path__ + \"static/media/Spin.594b9f7c.svg\";\nexport { ForwardRef as ReactComponent };","import { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { Dispatch, Reducer } from 'redux'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\nimport { FormikValuesType } from '../l1-ui/u1-login/LoginContainer'\nimport { loginAPI } from '../l3-dal/loginAPI'\nimport { fdatasync } from 'fs'\n\nexport type InitialStateType = typeof initialState\n\ntype ActionTypes = InferActionsType<typeof actions>\n\nenum LOGIN {\n   SET_USER = 'SET_USER',\n   IS_LOGGED_IN = 'IS_LOGGED_IN',\n   SET_ERROR = 'SET_ERROR',\n   SET_PENDING = 'SET_PENDING',\n   SET_USER_ID = 'SET_USER_ID',\n   SET_USER_AVATAR = 'SET_USER_AVATAR',\n   UPLOAD_USER_AVATAR = 'UPLOAD_USER_AVATAR',\n}\n\nconst initialState = {\n   name: '',\n   email: '',\n   userID: '',\n   isLoggedIn: '',\n   error: '',\n   pending: false,\n   avatar: '',\n   uploadAvatar: false,\n}\n\nexport const loginReducer: Reducer<InitialStateType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialStateType => {\n   switch (action.type) {\n      case LOGIN.SET_USER:\n         return {\n            ...state,\n            name: action.name,\n            email: action.email,\n         }\n      case LOGIN.IS_LOGGED_IN:\n         return {\n            ...state,\n            isLoggedIn: action.isLoggedIn,\n         }\n      case LOGIN.SET_ERROR:\n         return {\n            ...state,\n            error: action.error,\n         }\n      case LOGIN.SET_PENDING:\n         return {\n            ...state,\n            pending: action.pending,\n         }\n      case LOGIN.SET_USER_ID:\n         return {\n            ...state,\n            userID: action.userID,\n         }\n      case LOGIN.SET_USER_AVATAR:\n         return {\n            ...state,\n            avatar: action.avatar,\n         }\n      case LOGIN.UPLOAD_USER_AVATAR:\n         return {\n            ...state,\n            uploadAvatar: action.status,\n         }\n      default:\n         return state\n   }\n}\n\nexport const actions = {\n   setUserAC: (name: string, email: string) => ({ type: LOGIN.SET_USER as const, email, name }),\n   isLoggedInAC: (isLoggedIn: string) => ({ type: LOGIN.IS_LOGGED_IN as const, isLoggedIn }),\n   setErrorAC: (error: string) => ({ type: LOGIN.SET_ERROR as const, error }),\n   setPendingAC: (pending: boolean) => ({ type: LOGIN.SET_PENDING as const, pending }),\n   setUserID: (userID: string) => ({ type: LOGIN.SET_USER_ID as const, userID }),\n   setUserAvatar: (avatar: string) => ({ type: LOGIN.SET_USER_AVATAR as const, avatar }),\n   uploadUserAvatar: (status: boolean) => ({ type: LOGIN.UPLOAD_USER_AVATAR as const, status }),\n}\n\nconst errorHandler = (e: any, dispatch: Dispatch) => {\n   const error = e.response ? e.response.data.error : e.message + ', more details in the console'\n   dispatch(actions.setErrorAC(error))\n}\n\nexport const thunks = {\n   loginTC: (values: FormikValuesType): AppThunk => async (dispatch) => {\n      try {\n         const response = await loginAPI.login(values)\n         dispatch(actions.isLoggedInAC('logged'))\n         dispatch(actions.setUserAC(response.name, response.email))\n         dispatch(actions.setUserID(response._id))\n         response.avatar && dispatch(actions.setUserAvatar(response.avatar))\n      } catch (e) {\n         errorHandler(e, dispatch)\n      }\n   },\n   logoutTC: (): AppThunk => async (dispatch) => {\n      try {\n         await loginAPI.logout()\n         dispatch(actions.isLoggedInAC('notLogged'))\n         dispatch(actions.setUserAC('', ''))\n      } catch (e) {\n         errorHandler(e, dispatch)\n      }\n   },\n   meTC: (): AppThunk => async (dispatch) => {\n      try {\n         dispatch(actions.setPendingAC(true))\n         const response = await loginAPI.me()\n         dispatch(actions.isLoggedInAC('logged'))\n         dispatch(actions.setUserAC(response.name, response.email))\n         dispatch(actions.setPendingAC(false))\n         dispatch(actions.setUserID(response._id))\n         response.avatar && dispatch(actions.setUserAvatar(response.avatar))\n      } catch (e) {\n         dispatch(actions.isLoggedInAC('notLogged'))\n         dispatch(actions.setPendingAC(false))\n         errorHandler(e, dispatch)\n      }\n   },\n   setPhotoTC: (avatar: any, name: string): AppThunk => async (dispatch) => {\n      try {\n         dispatch(actions.uploadUserAvatar(true))\n         const response = await loginAPI.setPhoto(avatar, name)\n         response.avatar && dispatch(actions.setUserAvatar(response.avatar))\n         dispatch(actions.uploadUserAvatar(false))\n      } catch (e) {\n         errorHandler(e, dispatch)\n      }\n   },\n}\n","import React from 'react'\nimport s from './Error.module.scss'\n\ntype PropsType = {\n   textError?: string\n}\n\nexport const Error = ({ textError }: PropsType) => {\n   return <div className={s.error}>{textError}</div>\n}\n","import React from 'react'\nimport { SuperInputText } from '../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { FormikProps } from 'formik'\nimport { SuperCheckbox } from '../../../../s1-main/m1-ui/u0-common/c3-SuperCheckbox/SuperCheckbox'\nimport { FormikValuesType } from './LoginContainer'\nimport { PATH } from '../../../../s1-main/m1-ui/u3-routes/Routes'\nimport { NavLink } from 'react-router-dom'\nimport { ReactComponent as Loader } from '../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\nimport { Error } from '../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\nimport s from './login.module.scss'\n\ntype LoginPropsType = {\n   formik: FormikProps<FormikValuesType>\n   error: string\n}\n\nconst Login: React.FC<LoginPropsType> = React.memo(({ formik, error }) => {\n   return (\n      <>\n         <form style={{ marginTop: '20px' }} onSubmit={formik.handleSubmit}>\n            {formik.isSubmitting ? (\n               <Loader />\n            ) : (\n               <>\n                  <label htmlFor='email'>Email Address</label>\n                  <SuperInputText id='email' type='email' {...formik.getFieldProps('email')} />\n                  {formik.errors.email && <Error textError={formik.errors.email} />}\n                  <label htmlFor='password'>Password</label>\n                  <SuperInputText id='password' type='password' {...formik.getFieldProps('password')} />\n                  {formik.errors.password && <Error textError={formik.errors.password} />}\n                  {error && <Error textError={error} />}\n                  <SuperCheckbox id='rememberMe' {...formik.getFieldProps('rememberMe')} children={'Remember Me'} />\n               </>\n            )}\n            <SuperButton type='submit' disabled={!formik.isValid || formik.isSubmitting} children={'Login'} />\n         </form>\n         <div>\n            <NavLink style={{ marginRight: '60px' }} to={PATH.REGISTRATION}>\n               Registration\n            </NavLink>\n            <NavLink to={PATH.PASSWORD_RECOVERY}>Password recovery</NavLink>\n         </div>\n      </>\n   )\n})\n\nexport const LoginWithMemo = React.memo(Login, (props, nextProps) => {\n   return props.formik.values === nextProps.formik.values && props.formik.errors === nextProps.formik.errors\n})\n","import axios from 'axios'\n\n// Ig heroku\nexport const baseURL = 'https://neko-back.herokuapp.com/2.0'\n\n// localhost\n// export const baseURL = 'http://localhost:7542/2.0/'\n\nexport const instance = axios.create({\n   baseURL,\n   withCredentials: true,\n})\n\nexport type ResType = {\n   _id: string\n   email: string\n   name: string\n   avatar?: string\n   publicCardPacksCount: number\n   created: Date\n   updated: Date\n   isAdmin: boolean\n   verified: boolean\n   rememberMe: boolean\n   error: string\n}\n","import { instance, ResType } from '../../../s1-main/m3-dal/instance'\nimport { FormikValuesType } from '../l1-ui/u1-login/LoginContainer'\n\nexport const loginAPI = {\n   login: async (data: FormikValuesType) => {\n      const response = await instance.post<ResType>('auth/login', data)\n      return response.data\n   },\n   logout: async () => {\n      return await instance.delete('auth/me')\n   },\n   me: async () => {\n      const response = await instance.post<ResType>('auth/me')\n      return response.data\n   },\n   setPhoto: async (avatar: string | ArrayBuffer | null, name: string) => {\n      const response = await instance.put('auth/me', { avatar, name })\n      return response.data\n   },\n}\n","import { Reducer } from 'redux'\nimport { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\nimport { registrationAPI } from '../r3-dal/registrationAPI'\n\nexport type InitialStateType = typeof initialState\n\ntype ActionTypes = InferActionsType<typeof actions>\n\nenum REGISTRATION {\n   IS_REGISTER = 'IS_REGISTER',\n   SET_ERROR = 'SET_ERROR',\n}\n\nconst initialState = {\n   isSuccessRegister: false,\n   error: '',\n}\n\nexport const registrationReducer: Reducer<InitialStateType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialStateType => {\n   switch (action.type) {\n      case REGISTRATION.IS_REGISTER:\n         return { ...state, isSuccessRegister: action.isSuccessRegister }\n      case REGISTRATION.SET_ERROR:\n         return { ...state, error: action.message }\n      default:\n         return state\n   }\n}\n\nexport const actions = {\n   toggleSuccessRegister: (isSuccessRegister: boolean) =>\n      ({ type: REGISTRATION.IS_REGISTER, isSuccessRegister } as const),\n   setError: (message: string) => ({ type: REGISTRATION.SET_ERROR, message } as const),\n}\n\nexport const thunks = {\n   accountCreation: (email: string, password: string): AppThunk => async (dispatch) => {\n      try {\n         await registrationAPI.setRegister(email, password)\n         dispatch(actions.toggleSuccessRegister(true))\n      } catch (e) {\n         dispatch(actions.setError(e.response.data.error))\n      }\n   },\n}\n","import React, { useEffect } from 'react'\nimport { LoginWithMemo } from './Login'\nimport { FormikErrors, useFormik } from 'formik'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actions, thunks } from '../../l2-bll/loginReducer'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { Redirect } from 'react-router-dom'\nimport { PATH } from '../../../../s1-main/m1-ui/u3-routes/Routes'\n\nexport type FormikValuesType = {\n   email: string\n   password: string\n   rememberMe: boolean\n}\n\nexport const LoginContainer = () => {\n   const isLoggedIn = useSelector<AppStateType, string>((state) => state.login.isLoggedIn)\n   const error = useSelector<AppStateType, string>((state) => state.login.error)\n   const dispatch = useDispatch()\n   useEffect(() => {\n      if (error) {\n         return () => {\n            dispatch(actions.setErrorAC(''))\n         }\n      }\n   }, [error, dispatch])\n\n   const formik = useFormik({\n      initialValues: {\n         email: '',\n         password: '',\n         rememberMe: false,\n      },\n      validate: (values) => {\n         const errors: FormikErrors<FormikValuesType> = {}\n         if (!values.email) {\n            errors.email = 'Email is required'\n         } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = 'Invalid email address'\n         }\n         if (!values.password) {\n            errors.password = 'Password is required'\n         }\n         return errors\n      },\n      onSubmit: async (values: FormikValuesType) => {\n         await dispatch(thunks.loginTC(values))\n      },\n   })\n\n   if (isLoggedIn === 'logged') {\n      return <Redirect to={PATH.PROFILE} />\n   }\n\n   return (\n      <>\n         <LoginWithMemo formik={formik} error={error} />\n      </>\n   )\n}\n","import React from 'react'\nimport { LoginContainer } from './u1-login/LoginContainer'\n\nexport const LoginPage = () => {\n   return (\n      <div>\n         <LoginContainer />\n      </div>\n   )\n}\n","import React from 'react'\n\nexport const Page404 = () => {\n   return <div>Page 404 not found</div>\n}\n","import { FormikProps } from 'formik'\nimport React, { FC } from 'react'\nimport { SuperInputText } from '../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { FormValues } from './RegistrationContainer'\nimport { Error } from '../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\n\ntype PropsTypes = {\n   formik: FormikProps<FormValues>\n   serverErrors: string\n}\n\nexport const Registration: FC<PropsTypes> = React.memo(\n   ({ formik, serverErrors }) => {\n      console.log('render')\n      return (\n         <div>\n            <form onSubmit={formik.handleSubmit}>\n               {/*{formik.isSubmitting ? (*/}\n               {/*   <Loader />*/}\n               {/*) : (*/}\n               <>\n                  <label htmlFor='email'>Email Address</label>\n                  <SuperInputText id='email' {...formik.getFieldProps('email')} />\n                  {formik.errors.email && <Error textError={formik.errors.email} />}\n                  <label htmlFor='password'>Password</label>\n                  <SuperInputText id='password' {...formik.getFieldProps('password')} />\n                  {formik.errors.password && <Error textError={formik.errors.password} />}\n                  <label htmlFor='confirmPassword'>Confirm Password</label>\n                  <SuperInputText id='confirmPassword' {...formik.getFieldProps('confirmPassword')} />\n                  {formik.errors.confirmPassword && <Error textError={formik.errors.confirmPassword} />}\n                  <SuperButton\n                     children={'submit'}\n                     disabled={!(formik.isValid && formik.dirty) || formik.isSubmitting}\n                  />\n                  {serverErrors && <Error textError={serverErrors} />}\n               </>\n               {/*)}*/}\n            </form>\n         </div>\n      )\n   },\n   (props, nextProps) => {\n      return (\n         props.formik.values === nextProps.formik.values &&\n         props.formik.errors === nextProps.formik.errors &&\n         props.formik.isSubmitting === nextProps.formik.isSubmitting\n      )\n   },\n)\n","import { instance, ResType } from '../../../s1-main/m3-dal/instance'\n\nexport const registrationAPI = {\n   setRegister: async (email: string, password: string) => {\n      const result = await instance.post<ResType>('auth/register', { email, password })\n      return result.data\n   },\n}\n","import { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { Reducer } from 'redux'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\nimport { updatePassAPI } from '../npe3-dal/updatePassAPI'\n\nexport type InitialStateRecoveryType = typeof initialState\n\nenum UPDATE_PASSWORD {\n   UPDATE_RESULT = 'UPDATE_RESULT',\n   SET_PASS = 'SET_PASS',\n   UPDATED_PASS = 'UPDATED_PASS',\n}\n\ntype ActionTypes = InferActionsType<typeof actionsUpdate>\n\nconst initialState = {\n   result: 'Укажите новый пароль',\n   password: '',\n   passIsUpdated: false,\n}\n\nexport const updatePasswordReducer: Reducer<InitialStateRecoveryType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialStateRecoveryType => {\n   switch (action.type) {\n      case UPDATE_PASSWORD.UPDATE_RESULT:\n         return { ...state, result: action.result }\n      case UPDATE_PASSWORD.SET_PASS:\n         return { ...state, password: action.password }\n      case UPDATE_PASSWORD.UPDATED_PASS:\n         return { ...state, passIsUpdated: action.status }\n      default:\n         return state\n   }\n}\n\nexport const actionsUpdate = {\n   passUpdateResultAC: (result: string) =>\n      ({\n         type: UPDATE_PASSWORD.UPDATE_RESULT,\n         result,\n      } as const),\n   setPassAC: (password: string) =>\n      ({\n         type: UPDATE_PASSWORD.SET_PASS,\n         password,\n      } as const),\n   passUpdatedAC: (status: boolean) =>\n      ({\n         type: UPDATE_PASSWORD.UPDATED_PASS,\n         status,\n      } as const),\n}\n\nexport const updatePasswordTC = {\n   updatePass: (password: string, resetPasswordToken: string): AppThunk => async (dispatch) => {\n      try {\n         const res = await updatePassAPI.updatePass(password, resetPasswordToken)\n         dispatch(actionsUpdate.passUpdateResultAC(res.info))\n         dispatch(actionsUpdate.passUpdatedAC(true))\n      } catch (e) {\n         dispatch(actionsUpdate.passUpdateResultAC(e.data.error))\n      }\n   },\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { Registration } from './Registration'\nimport { FormikErrors, useFormik } from 'formik'\nimport { actions, thunks } from '../../r2-bll/registrationReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { Redirect } from 'react-router-dom'\n\nexport type FormValues = {\n   email: string\n   password: string\n   confirmPassword: string\n}\n\nexport const RegistrationContainer = () => {\n   const isSuccessRegister = useSelector<AppStateType, boolean>((state) => state.registration.isSuccessRegister)\n   const serverErrors = useSelector<AppStateType, string>((state) => state.registration.error)\n   const dispatch = useDispatch()\n   useEffect(() => {\n      if (isSuccessRegister) {\n         return () => {\n            dispatch(actions.toggleSuccessRegister(false))\n            dispatch(actions.setError(''))\n         }\n      }\n   }, [isSuccessRegister, dispatch])\n\n   const formik = useFormik({\n      initialValues: {\n         email: '',\n         password: '',\n         confirmPassword: '',\n      },\n      validate: (values: FormValues) => {\n         const errors: FormikErrors<FormValues> = {}\n         if (!values.email) {\n            errors.email = 'Email is required'\n         } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n            errors.email = 'Invalid email address'\n         }\n         if (!values.password) {\n            errors.password = 'Password is required'\n         } else if (values.password.length <= 7) {\n            errors.password = 'Password must be more than 7 characters'\n         }\n         if (!values.confirmPassword) {\n            errors.confirmPassword = 'Confirm password is required'\n         } else if (values.confirmPassword !== values.password) {\n            errors.confirmPassword = 'Passwords do not match'\n         }\n         return errors\n      },\n      onSubmit: async (values: FormValues) => {\n         const { password, email } = values\n         await dispatch(thunks.accountCreation(email, password))\n      },\n   })\n\n   // const WrappedRegistration = useMemo(() => <Registration serverErrors={serverErrors} formik={formik} />, [\n   //    formik.values,\n   //    serverErrors,\n   // ])\n\n   if (isSuccessRegister) {\n      return <Redirect to={'/login'} />\n   }\n\n   return (\n      <>\n         <Registration serverErrors={serverErrors} formik={formik} />\n      </>\n   )\n}\n","import React from 'react'\nimport { RegistrationContainer } from './u1-registration/RegistrationContainer'\n\nexport const RegistrationPage = () => {\n   return (\n      <div>\n         <RegistrationContainer />\n      </div>\n   )\n}\n","import React, { useState } from 'react'\n\ntype FileType = {\n   id: string\n   img: string\n   name: string\n   type: string\n   size: number\n   lastMod: number\n}\n\nexport const SuperMultiplePreview = () => {\n   const [selectedFiles, setSelectedFiles] = useState<Array<FileType>>([])\n\n   const fileHandleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      if (e.target.files) {\n         const fileArray = Array.from(e.target.files).map((file) => {\n            const randomId = Math.floor(Math.random() * 100 + Math.random() * 100 + Math.random() * 100)\n            return {\n               id: `${randomId}`,\n               img: URL.createObjectURL(file),\n               name: file.name,\n               size: file.size,\n               lastMod: file.lastModified,\n               type: file.type,\n            }\n         })\n         setSelectedFiles((prevFiles) => prevFiles.concat(fileArray))\n      }\n   }\n\n   const renderFiles = (files: Array<FileType>) => {\n      return files.map((file) => {\n         return (\n            <div style={{ border: '1px solid red', borderRadius: '4px', padding: '5px' }}>\n               <img style={{ margin: '8px' }} height={'100px'} src={file.img} key={file.id} alt={'file img'} />\n               <div>{file.name}</div>\n               <div>{file.type}</div>\n               <div>{file.size}</div>\n               <div>{file.lastMod}</div>\n               <button id={file.id} onClick={fileHandleDelete}>\n                  X\n               </button>\n            </div>\n         )\n      })\n   }\n   const fileHandleDelete = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      setSelectedFiles(selectedFiles.filter((file) => file.id !== e.currentTarget.id))\n   }\n\n   return (\n      <>\n         <div>Multiple files preview</div>\n         <div>\n            <input onChange={fileHandleChange} multiple style={{ display: 'none' }} type={'file'} id={'file'} />\n         </div>\n         <div>\n            <label\n               htmlFor={'file'}\n               style={{ padding: '4px', border: '1px solid white', cursor: 'pointer', borderRadius: '4px' }}>\n               add file...\n            </label>\n         </div>\n         <div style={{ display: 'flex', flexWrap: 'wrap' }}>{renderFiles(selectedFiles)}</div>\n      </>\n   )\n}\n","import React, { useState } from 'react'\nimport { SuperInputText } from './c1-SuperInputText/SuperInputText'\nimport { SuperButton } from './c2-SuperButton/SuperButton'\nimport { SuperCheckbox } from './c3-SuperCheckbox/SuperCheckbox'\nimport { FileInput } from '../../../s3-dev/d1-FileInput/FileInput'\nimport { SuperInputFiles } from '../../../s3-dev/d2-SuperFileInput/SuperInputFiles'\nimport { SuperMultiplePreview } from '../../../s3-dev/d3-SuperMultiplePreview/SuperMultiplePreview'\n\nexport const ComponentsTestRack = () => {\n   return (\n      <div>\n         {/*<SuperInputText placeholder={'First Name'}/>*/}\n         {/*<SuperInputText placeholder={'Last Name'}/>*/}\n         {/*<SuperInputText placeholder={'Email'}/>*/}\n         {/*<SuperInputText placeholder={'Password'}/>*/}\n         {/*<SuperButton children={'Log in'}/>*/}\n         {/*<SuperCheckbox children={'Remember Me'}/>*/}\n         {/*<FileInput value={'aaaa'} />*/}\n         {/*<hr />*/}\n         {/*<SuperInputFiles />*/}\n         <SuperMultiplePreview />\n      </div>\n   )\n}\n","import React, { SetStateAction, useEffect, useState } from 'react'\nimport s from './avatar.module.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { InitialStateType, thunks } from '../../s2-features/f1-login/l2-bll/loginReducer'\nimport { AppStateType } from '../../s1-main/m2-bll/store'\nimport { loginAPI } from '../../s2-features/f1-login/l3-dal/loginAPI'\nimport { SuperButton } from '../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { ReactComponent as Loader } from '../../../src/s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\n\nexport const AvatarInput = () => {\n   const [file, setFile] = useState<string>('')\n   const { name, avatar, uploadAvatar } = useSelector<AppStateType, InitialStateType>((state) => state.login)\n\n   const dispatch = useDispatch()\n\n   const fileHandleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const reader = new FileReader()\n      reader.onloadend = () => {\n         dispatch(thunks.setPhotoTC(reader.result, name))\n      }\n\n      const newFile = e.target.files && e.target.files[0]\n      if (newFile) {\n         setFile(URL.createObjectURL(newFile))\n         reader.readAsDataURL(newFile)\n      }\n   }\n   const renderFiles = (file: string) => {\n      return (\n         <>\n            <div style={{ position: 'relative', display: 'flex', justifyContent: 'center', height: '200px' }}>\n               <div className={s.user_photoBlock} style={{ backgroundImage: `url(${file || avatar})` }}></div>\n            </div>\n         </>\n      )\n   }\n\n   return (\n      <>\n         {uploadAvatar ? (\n            <Loader />\n         ) : (\n            <>\n               <div>\n                  <input onChange={fileHandleChange} style={{ display: 'none' }} type={'file'} id={'file'} />\n               </div>\n               <label htmlFor={'file'}>{renderFiles(file)}</label>\n            </>\n         )}\n      </>\n   )\n}\n","import React, { ChangeEvent, RefObject } from 'react'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { Error } from '../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\nimport { ReactComponent as Loader } from './../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\nimport s from './profile.module.scss'\nimport { AvatarInput } from '../../../../s3-dev/d4-AvatarInput/AvatarInput'\n\ntype PropsType = {\n   name: string\n   email: string\n   error: string\n   pending: boolean\n   logout: () => void\n}\n\nexport const Profile: React.FC<PropsType> = ({ name, email, logout, error, pending }) => {\n   return (\n      <div>\n         {pending ? (\n            <Loader />\n         ) : (\n            <>\n               <h2>Profile</h2>\n               {error && <Error textError={error} />}\n               <AvatarInput />\n               <div>\n                  <span style={{ marginRight: '20px' }}>Name: {name}</span>\n                  <span style={{ marginRight: '20px' }}>Email: {email}</span>\n               </div>\n            </>\n         )}\n         <SuperButton onClick={logout} children={'Log out'} disabled={pending} />\n      </div>\n   )\n}\n","import React, { ChangeEvent, SetStateAction, useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { Profile } from './Profile'\nimport { PATH } from '../../../../s1-main/m1-ui/u3-routes/Routes'\nimport { thunks } from '../../../f1-login/l2-bll/loginReducer'\nimport { ReactComponent as Loader } from '../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\n\nexport const ProfileContainer = () => {\n   const name = useSelector<AppStateType, string>((state) => state.login.name)\n   const email = useSelector<AppStateType, string>((state) => state.login.email)\n   const isLoggedIn = useSelector<AppStateType, string>((state) => state.login.isLoggedIn)\n   const error = useSelector<AppStateType, string>((state) => state.registration.error)\n   const statePending = useSelector<AppStateType, boolean>((state) => state.login.pending)\n\n   const dispatch = useDispatch()\n\n   const [pending, setPending] = useState(false)\n\n   useEffect(() => {\n      if (!name) dispatch(thunks.meTC())\n   }, [dispatch, name])\n\n   const logout = async () => {\n      setPending(true)\n      await dispatch(thunks.logoutTC())\n   }\n\n   if (statePending) {\n      return <Loader />\n   }\n\n   return (\n      <>\n         {isLoggedIn === 'notLogged' ? (\n            <Redirect to={PATH.LOGIN} />\n         ) : (\n            <Profile name={name} email={email} logout={logout} error={error} pending={pending} />\n         )}\n      </>\n   )\n}\n","import React from 'react'\nimport { ProfileContainer } from './u1-profile/ProfileContainer'\n\nexport const ProfilePage = () => {\n   return (\n      <div>\n         <ProfileContainer />\n      </div>\n   )\n}\n","import { instance } from '../../../s1-main/m3-dal/instance'\n\nconst messageView = (token: string) => {\n   return `<div style=\"background-color: #00ff00; padding: 15px\"><a href=http://localhost:3000/#/set-new-password/${token}>Ссылка на восстановление пароля</a></div>`\n}\nconst messageMelivaro = (token: string) => {\n   return `<div style=\"background-color: #00ff00; padding: 15px\"><a href=https://melivaro.github.io/flash-cards/#/set-new-password/${token}>Ссылка на восстановление пароля</a></div>`\n}\n\nexport const passRecoveryAPI = {\n   recovery: async (email: string) => {\n      const response = await instance.post('/auth/forgot', {\n         email,\n         from: 'mymailtolaaa@gmail.com',\n         message: messageMelivaro('$token$'),\n      })\n      return response.data\n   },\n}\n","import { instance } from '../../../s1-main/m3-dal/instance'\n\nexport const updatePassAPI = {\n   updatePass: async (password: string, resetPasswordToken: string) => {\n      const response = await instance.post('/auth/set-new-password', { password, resetPasswordToken })\n      return response.data\n   },\n}\n","import { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { Reducer } from 'redux'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\nimport { passRecoveryAPI } from '../pr3-dal/passwordRecoveryAPI'\nimport { actionsUpdate } from '../../f5-newPasswordEntry/npe2-bll/updatePasswordReducer'\n\nexport type InitialStateRecoveryType = typeof initialState\n\nenum PASSWORD_RECOVERY {\n   CHANGE_PASS = 'CHANGE_PASS',\n   SEND_EMAIL = 'SEND_EMAIL',\n}\n\ntype ActionTypes = InferActionsType<typeof actions>\n\nconst initialState = {\n   inputText: '',\n   result: 'Укажите вашу электронную почту для востановления пароля',\n}\n\nexport const passwordRecoveryReducer: Reducer<InitialStateRecoveryType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialStateRecoveryType => {\n   switch (action.type) {\n      case PASSWORD_RECOVERY.CHANGE_PASS:\n         return { ...state, inputText: action.text }\n      case PASSWORD_RECOVERY.SEND_EMAIL:\n         return { ...state, result: action.result, inputText: '' }\n      default:\n         return state\n   }\n}\n\nexport const actions = {\n   recoverPassAC: (text: string) =>\n      ({\n         type: PASSWORD_RECOVERY.CHANGE_PASS,\n         text,\n      } as const),\n   sendEmailAC: (result: string) =>\n      ({\n         type: PASSWORD_RECOVERY.SEND_EMAIL,\n         result,\n      } as const),\n}\n\nexport const recoverThunks = {\n   sendEmailTC: (email: string): AppThunk => async (dispatch) => {\n      try {\n         const res = await passRecoveryAPI.recovery(email)\n         dispatch(actions.sendEmailAC(res.info))\n         dispatch(actionsUpdate.passUpdatedAC(true))\n      } catch (e) {\n         dispatch(actions.sendEmailAC(e.response.data.error))\n      }\n   },\n}\n","import { Reducer } from 'redux'\nimport { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\nimport { ApiPacksType, packsAPI, UpdatePackType } from '../p3-dal/packsAPI'\nimport { AppStateType } from '../../../s1-main/m2-bll/store'\n\ntype InitialPackSettingsStateType = {\n   page: number\n   pageCount: number\n   min: number\n   max: number\n   sortPack: string\n   packTotalCount: number\n   searchName: string\n   userID: string\n}\n\nexport type InitialPacksStateType = {\n   packs: ApiPacksType[]\n   settings: InitialPackSettingsStateType\n   showAddModal: boolean\n   deleteModal: {\n      showDeleteModal: boolean\n      packID: string\n   }\n   updateModal: {\n      showUpdateModal: boolean\n      packName: string\n      packID: string\n   }\n}\n\nconst initialState: InitialPacksStateType = {\n   packs: [],\n   settings: {\n      page: 1,\n      pageCount: 4,\n      packTotalCount: 0,\n      min: 0,\n      max: 5,\n      sortPack: '',\n      searchName: '',\n      userID: '',\n   },\n   showAddModal: false,\n   deleteModal: {\n      showDeleteModal: false,\n      packID: '',\n   },\n   updateModal: {\n      showUpdateModal: false,\n      packName: '',\n      packID: '',\n   },\n}\n\ntype ActionTypes = InferActionsType<typeof actions>\n\nenum PACKS {\n   FETCH_PACKS = 'FETCH_PACKS',\n   SEARCH_PACKS = 'SEARCH_PACKS',\n   SET_MIN_MAX_PACKS = 'SET_MIN_MAX',\n   SORT_PACK = 'SORT_PRODUCT',\n   GET_MY_PACK = 'GET_MY_PACK',\n   SHOW_ADD_MODAL = 'SHOW_ADD_MODAL',\n   SHOW_DELETE_MODAL = 'SHOW_DELETE_MODAL',\n   SHOW_UPDATE_MODAL = 'UPDATE_MODAL',\n}\n\nexport const packsReducer: Reducer<InitialPacksStateType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialPacksStateType => {\n   switch (action.type) {\n      case PACKS.FETCH_PACKS:\n         return {\n            ...state,\n            packs: action.packs,\n            settings: action.settings,\n         }\n      case PACKS.SEARCH_PACKS:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               searchName: action.searchName,\n            },\n         }\n      case PACKS.SET_MIN_MAX_PACKS:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               min: action.min,\n               max: action.max,\n            },\n         }\n      case PACKS.SORT_PACK:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               sortPack: action.sortedPack,\n            },\n         }\n      case PACKS.GET_MY_PACK:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               userID: action.userID,\n            },\n         }\n      case PACKS.SHOW_ADD_MODAL:\n         return {\n            ...state,\n            showAddModal: action.modal,\n         }\n      case PACKS.SHOW_DELETE_MODAL:\n         return {\n            ...state,\n            deleteModal: {\n               ...state.deleteModal,\n               showDeleteModal: action.modal,\n               packID: action.packID,\n            },\n         }\n      case PACKS.SHOW_UPDATE_MODAL:\n         return {\n            ...state,\n            updateModal: {\n               ...state.updateModal,\n               showUpdateModal: action.modal,\n               packName: state.packs.find((e) => e._id === action.packID)?.name || '',\n            },\n            deleteModal: {\n               ...state.deleteModal,\n               packID: action.packID,\n            },\n         }\n      default:\n         return state\n   }\n}\n\nexport const actions = {\n   setPacks: (packs: ApiPacksType[], settings: InitialPackSettingsStateType) =>\n      ({\n         type: PACKS.FETCH_PACKS,\n         packs,\n         settings,\n      } as const),\n   searchPacks: (searchName: string) =>\n      ({\n         type: PACKS.SEARCH_PACKS,\n         searchName,\n      } as const),\n   setMinMaxPack: (min: number, max: number) =>\n      ({\n         type: PACKS.SET_MIN_MAX_PACKS,\n         min,\n         max,\n      } as const),\n   sortPacks: (sortedPack: string) =>\n      ({\n         type: PACKS.SORT_PACK,\n         sortedPack,\n      } as const),\n   getMyPack: (userID: string) =>\n      ({\n         type: PACKS.GET_MY_PACK,\n         userID,\n      } as const),\n   showAddModal: (modal: boolean) =>\n      ({\n         type: PACKS.SHOW_ADD_MODAL,\n         modal,\n      } as const),\n   showDeleteModal: (modal: boolean, packID: string) =>\n      ({\n         type: PACKS.SHOW_DELETE_MODAL,\n         modal,\n         packID,\n      } as const),\n   showUpdateModal: (modal: boolean, packID: string) =>\n      ({\n         type: PACKS.SHOW_UPDATE_MODAL,\n         modal,\n         packID,\n      } as const),\n}\n\ntype PackStoreType = () => AppStateType\n\nexport const thunks = {\n   fetchPacks: (newPage?: number, newPageCount?: number): AppThunk => async (dispatch, getStore: PackStoreType) => {\n      const { searchName, page, pageCount, min, max, sortPack, userID } = getStore().packs.settings\n      try {\n         const data = await packsAPI.getPacks(\n            searchName,\n            min,\n            max,\n            newPage || page,\n            newPageCount || pageCount,\n            sortPack,\n            userID,\n         )\n         dispatch(\n            actions.setPacks(data.cardPacks, {\n               page: data.page,\n               pageCount: data.pageCount,\n               searchName,\n               sortPack,\n               userID,\n               min: data.minCardsCount,\n               max: data.maxCardsCount,\n               packTotalCount: data.cardPacksTotalCount,\n            }),\n         )\n      } catch (e) {}\n   },\n   createPack: (packName: string): AppThunk => async (dispatch) => {\n      try {\n         await packsAPI.createPack({\n            name: packName,\n            private: false,\n            path: '',\n            type: '',\n            deckCover: '',\n            grade: 0,\n            rating: 0,\n            shots: 0,\n         })\n         dispatch(actions.showAddModal(false))\n         dispatch(thunks.fetchPacks())\n      } catch (e) {}\n   },\n   deletePack: (pack_id: string): AppThunk => async (dispatch) => {\n      try {\n         await packsAPI.deletePack(pack_id)\n         dispatch(actions.showDeleteModal(false, ''))\n         dispatch(thunks.fetchPacks())\n      } catch (e) {}\n   },\n   updatePack: (data: UpdatePackType): AppThunk => async (dispatch) => {\n      try {\n         await packsAPI.updatePack(data)\n         dispatch(actions.showUpdateModal(false, ''))\n         dispatch(thunks.fetchPacks())\n      } catch (e) {}\n   },\n}\n","import React, { ChangeEvent } from 'react'\nimport { SuperInputText } from '../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { ReactComponent as Loader } from '../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\n\ntype PasswordRecoveryPageType = {\n   pending: boolean\n   result: string\n   inputText: string\n   inputHandler: (e: ChangeEvent<HTMLInputElement>) => void\n   buttonClickHandler: () => void\n}\nexport const PasswordRecovery: React.FC<PasswordRecoveryPageType> = ({\n   pending,\n   result,\n   inputText,\n   inputHandler,\n   buttonClickHandler,\n}) => {\n   return (\n      <div>\n         <span>Восстановление пароля</span>\n         <p>{result}</p>\n         <div>\n            {pending ? <Loader /> : <SuperInputText value={inputText} onChange={inputHandler} />}\n            <SuperButton onClick={buttonClickHandler} disabled={pending} children={'Send'} />\n         </div>\n      </div>\n   )\n}\n","import React, { ChangeEvent, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { actions, recoverThunks } from '../../pr2-bll/passwordRecoveryReducer'\nimport { PasswordRecovery } from './PasswordRecovery'\n\nexport const PasswordRecoveryContainer = () => {\n   const recoveryResult = useSelector<AppStateType, string>((state) => state.passRecovery.result)\n   const inputText = useSelector<AppStateType, string>((state) => state.passRecovery.inputText)\n\n   const dispatch = useDispatch()\n\n   const [pending, setPending] = useState(false)\n\n   const inputChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n      dispatch(actions.recoverPassAC(e.currentTarget.value))\n   }\n   const buttonClickHandler = async () => {\n      setPending(true)\n      await dispatch(recoverThunks.sendEmailTC(inputText))\n      setPending(false)\n   }\n   return (\n      <PasswordRecovery\n         pending={pending}\n         inputText={inputText}\n         result={recoveryResult}\n         inputHandler={inputChangeHandler}\n         buttonClickHandler={buttonClickHandler}\n      />\n   )\n}\n","import React from 'react'\nimport { PasswordRecoveryContainer } from './u1-passwordRecovery/PasswordRecoveryContainer'\n\nconst PasswordRecoveryPage = () => {\n   return <PasswordRecoveryContainer />\n}\n\nexport default PasswordRecoveryPage\n","import React from 'react'\nimport { SuperInputText } from '../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { FormikProps } from 'formik'\nimport { FormValues } from './NewPasswordEntryContainer'\nimport { Error } from '../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\nimport { ReactComponent as Loader } from '../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\n\ntype NewPasswordEntryType = {\n   resultData: string\n   formik: FormikProps<FormValues>\n}\n\nexport const NewPasswordEntry: React.FC<NewPasswordEntryType> = ({ resultData, formik }) => {\n   return (\n      <div>\n         <form onSubmit={formik.handleSubmit}>\n            {formik.isSubmitting ? (\n               <Loader />\n            ) : (\n               <>\n                  <span>{resultData}</span>\n                  <SuperInputText placeholder={'Укажите новый пароль'} {...formik.getFieldProps('password')} />\n                  {formik.errors.password && <Error textError={formik.errors.password} />}\n                  <SuperInputText placeholder={'Повторите ввод пароля'} {...formik.getFieldProps('confirmPassword')} />\n                  {formik.errors.confirmPassword && <Error textError={formik.errors.confirmPassword} />}\n               </>\n            )}\n            <SuperButton\n               children={'Изменить пароль'}\n               type={'submit'}\n               disabled={!(formik.isValid && formik.dirty) || formik.isSubmitting}\n            />\n         </form>\n      </div>\n   )\n}\n","import React, { useMemo } from 'react'\nimport { NewPasswordEntry } from './NewPasswordEntry'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { Redirect, useParams } from 'react-router-dom'\nimport { actionsUpdate, updatePasswordTC } from '../../npe2-bll/updatePasswordReducer'\nimport { FormikErrors, useFormik } from 'formik'\nimport { PATH } from '../../../../s1-main/m1-ui/u3-routes/Routes'\n\nexport type FormValues = {\n   password: string\n   confirmPassword: string\n}\n\nexport const NewPasswordEntryContainer = () => {\n   const dispatch = useDispatch()\n   const result = useSelector<AppStateType, string>((state) => state.updatePass.result)\n   const isUpdate = useSelector<AppStateType, boolean>((state) => state.updatePass.passIsUpdated)\n   const { token } = useParams<{ token: string }>()\n\n   const formik = useFormik({\n      initialValues: {\n         password: '',\n         confirmPassword: '',\n      },\n      validate: (values) => {\n         const { password, confirmPassword } = values\n         const errors: FormikErrors<FormValues> = {}\n         if (!password) {\n            errors.password = 'Password is required'\n         }\n         if (!confirmPassword) {\n            errors.password = 'Password is required'\n         }\n         if (password.length < 8) {\n            errors.password = 'Пароль не может быть меньше восьми символов'\n         }\n         if (confirmPassword.length < 8) {\n            errors.confirmPassword = 'Пароль не может быть меньше восьми символов'\n         }\n         return errors\n      },\n      onSubmit: (values) => {\n         const { password, confirmPassword } = values\n\n         if (password === confirmPassword) {\n            dispatch(updatePasswordTC.updatePass(password, token))\n         } else {\n            dispatch(actionsUpdate.passUpdateResultAC('Пороли не совпадают!'))\n         }\n      },\n   })\n\n   const WrappedNewPasswordEntry = useMemo(() => <NewPasswordEntry resultData={result} formik={formik} />, [\n      formik.values,\n      result,\n   ])\n\n   if (isUpdate) {\n      return <Redirect to={PATH.LOGIN} />\n   }\n\n   return <>{WrappedNewPasswordEntry}</>\n}\n","import React from 'react'\nimport { NewPasswordEntryContainer } from './u1-passwordEntry/NewPasswordEntryContainer'\n\nconst NewPasswordEntryPage = () => {\n   return <NewPasswordEntryContainer />\n}\n\nexport default NewPasswordEntryPage\n","import { instance } from '../../../s1-main/m3-dal/instance'\n\nexport const packsAPI = {\n   getPacks: async (\n      searchName: string,\n      min?: number,\n      max?: number,\n      page?: number,\n      pageCount?: number,\n      sortProducts?: string,\n      userID?: string,\n   ) => {\n      const response = await instance.get<ResPacksType>(\n         `cards/pack?` +\n            (searchName.length > 0 ? `packName=${searchName}&` : '') +\n            (max ? `min=${min}&max=${max}&` : '') +\n            (page ? `page=${page}&pageCount=${pageCount}&` : '') +\n            (sortProducts ? `sortPacks=${sortProducts}&` : '') +\n            (userID ? `user_id=${userID}&` : ''),\n      )\n      return response.data\n   },\n   createPack: async (data: CreatePackType) => {\n      await instance.post('cards/pack', { cardsPack: data })\n   },\n   deletePack: async (pack_id: string) => {\n      await instance.delete(`cards/pack?id=${pack_id}`)\n   },\n   updatePack: async (data: UpdatePackType) => {\n      await instance.put('cards/pack', { cardsPack: data })\n   },\n}\n\nexport type UpdatePackType = {\n   _id: string\n   name?: string\n}\n\nexport type CreatePackType = {\n   name: string\n   path: string\n   grade?: number\n   shots?: number\n   rating?: number\n   deckCover?: string\n   private: boolean\n   type: string\n}\nexport type ApiPacksType = {\n   _id: string\n   user_id?: string\n   user_name?: string\n   private?: boolean\n   name: string\n   path?: string\n   grade?: number\n   shots?: number\n   cardsCount: number\n   type?: string\n   rating?: number\n   created?: string\n   updated: string\n   more_id?: string\n   __v?: number\n   deckCover: string\n}\ntype ResPacksType = {\n   cardPacks: Array<ApiPacksType>\n   page: number\n   pageCount: number\n   cardPacksTotalCount: number\n   minCardsCount: number\n   maxCardsCount: number\n   token: string\n   tokenDeathTime: number\n}\n","import { ApiCardsType, cardsAPI, CreateCardType, UpdateCardType } from '../c3-dal/cardsAPI'\nimport { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { Reducer } from 'redux'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\nimport { AppStateType } from '../../../s1-main/m2-bll/store'\nimport { actions } from '../../f6-packs/p2-bll/packsReducer'\nimport { gradesAPI, RequestGradeType, ResponseGradeType } from '../../f9-grades/g3-dal/gradesAPI'\n\ntype ActionTypes = InferActionsType<typeof cardsActions>\n\ntype InitialCardsSettingsStateType = {\n   page: number\n   pageCount: number\n   cardsTotalCount: number\n   min: number\n   max: number\n   sortCards: string\n   cardQuestion: string\n   packUserId: string\n}\n\nexport type InitialCardsType = {\n   cards: ApiCardsType[]\n   settings: InitialCardsSettingsStateType\n   showCardsModal: boolean\n   deleteModal: {\n      showDeleteModal: boolean\n      cardID: string\n   }\n   updateModal: {\n      showUpdateModal: boolean\n      question: string\n      comments: string\n      _id: string\n   }\n}\n\nconst initialState: InitialCardsType = {\n   cards: [],\n   settings: {\n      page: 1,\n      pageCount: 4,\n      cardsTotalCount: 40,\n      min: 1,\n      max: 5,\n      sortCards: '',\n      cardQuestion: '',\n      packUserId: '',\n   },\n   showCardsModal: false,\n   deleteModal: {\n      showDeleteModal: false,\n      cardID: '',\n   },\n   updateModal: {\n      showUpdateModal: false,\n      question: '',\n      comments: '',\n      _id: '',\n   },\n}\n\nenum CARDS {\n   SET_CARDS = 'SET_CARDS',\n   SEARCH_CARDS = 'SEARCH_PACKS',\n   SET_MIN_MAX_CARDS = 'SET_MIN_MAX',\n   SORT_CARDS = 'SORT_PRODUCT',\n   SHOW_CARDS_MODAL = 'SHOW_CARDS_MODAL',\n   SHOW_DELETE_MODAL = 'SHOW_DELETE_MODAL',\n   SHOW_UPDATE_MODAL = 'SHOW_UPDATE_MODAL',\n   GET_USER_ID = 'GET_USER_ID',\n   UPDATE_CARD_GRADE = 'UPDATE_CARD_GRADE',\n   // GET_MY_CARDS = 'GET_MY_PACK',\n}\n\nexport const cardsReducer: Reducer<InitialCardsType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialCardsType => {\n   switch (action.type) {\n      case CARDS.SET_CARDS:\n         return {\n            ...state,\n            cards: action.cards,\n            settings: action.settings,\n         }\n      case CARDS.SEARCH_CARDS:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               cardQuestion: action.cardQuestion,\n            },\n         }\n      case CARDS.SET_MIN_MAX_CARDS:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               min: action.min,\n               max: action.max,\n            },\n         }\n      case CARDS.SORT_CARDS:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               sortCards: action.sortedPack,\n            },\n         }\n      case CARDS.SHOW_CARDS_MODAL:\n         return {\n            ...state,\n            showCardsModal: action.modal,\n         }\n      case CARDS.SHOW_DELETE_MODAL:\n         return {\n            ...state,\n            deleteModal: {\n               showDeleteModal: action.modal,\n               cardID: action.cardID,\n            },\n         }\n      case CARDS.SHOW_UPDATE_MODAL:\n         return {\n            ...state,\n            updateModal: {\n               ...state.updateModal,\n               question: state.cards.find((e) => e._id === action.cardID)?.question || '',\n               showUpdateModal: action.modal,\n               _id: action.cardID,\n            },\n         }\n      case CARDS.GET_USER_ID:\n         return {\n            ...state,\n            settings: {\n               ...state.settings,\n               packUserId: action.UserID,\n            },\n         }\n      case CARDS.UPDATE_CARD_GRADE:\n         return {\n            ...state,\n            // settings: {...state.settings},\n            cards: state.cards.map((card) => {\n               if (card._id === action.data.updatedGrade.card_id) {\n                  return { ...card, grade: action.data.updatedGrade.grade, shots: action.data.updatedGrade.shots }\n               } else {\n                  return card\n               }\n            }),\n         }\n      default:\n         return state\n   }\n}\n\nexport const cardsActions = {\n   fetchCards: (cards: ApiCardsType[], settings: InitialCardsSettingsStateType) =>\n      ({ type: CARDS.SET_CARDS, cards, settings } as const),\n   searchCards: (cardQuestion: string) =>\n      ({\n         type: CARDS.SEARCH_CARDS,\n         cardQuestion,\n      } as const),\n   setMinMaxCards: (min: number, max: number) => ({ type: CARDS.SET_MIN_MAX_CARDS, min, max } as const),\n   sortCards: (sortedPack: string) => ({ type: CARDS.SORT_CARDS, sortedPack } as const),\n   updateCardGrade: (data: ResponseGradeType) => ({ type: CARDS.UPDATE_CARD_GRADE, data } as const),\n   showCardsModal: (modal: boolean) => ({ type: CARDS.SHOW_CARDS_MODAL, modal } as const),\n   showDeleteModal: (modal: boolean, cardID: string) => ({ type: CARDS.SHOW_DELETE_MODAL, modal, cardID } as const),\n   showUpdateModal: (modal: boolean, cardID: string) => ({ type: CARDS.SHOW_UPDATE_MODAL, modal, cardID } as const),\n   getUserID: (UserID: string) => ({ type: CARDS.GET_USER_ID, UserID } as const),\n}\n\ntype CardsStoreType = () => AppStateType\n\nexport const thunks = {\n   fetchCards: (packUId?: string, newPage?: number, newPageCount?: number): AppThunk => async (\n      dispatch,\n      getStore: CardsStoreType,\n   ) => {\n      const { pageCount, page, cardQuestion, sortCards, min, max, packUserId } = getStore().cards.settings\n      try {\n         const data = await cardsAPI.getCards(\n            packUId || packUserId,\n            min,\n            max,\n            newPage || page,\n            newPageCount || pageCount,\n            cardQuestion,\n            sortCards,\n         )\n         dispatch(\n            cardsActions.fetchCards(data.cards, {\n               page: data.page,\n               pageCount: data.pageCount,\n               cardQuestion,\n               sortCards,\n               min: data.minGrade,\n               max: data.minGrade,\n               packUserId,\n               cardsTotalCount: data.cardsTotalCount,\n            }),\n         )\n      } catch (e) {}\n   },\n   createCard: (answer: string, question: string, packUId: string): AppThunk => async (dispatch) => {\n      try {\n         await cardsAPI.createCard({\n            answer,\n            question,\n            answerImg: '',\n            answerVideo: '',\n            cardsPack_id: packUId,\n            grade: 0,\n            rating: 0,\n            shots: 0,\n            type: '',\n            questionImg: '',\n            questionVideo: '',\n         })\n         dispatch(cardsActions.showCardsModal(false))\n         dispatch(thunks.fetchCards(packUId))\n      } catch (e) {}\n   },\n   deleteCard: (id: string, packUId: string): AppThunk => async (dispatch) => {\n      try {\n         await cardsAPI.deleteCard(id)\n         dispatch(cardsActions.showDeleteModal(false, ''))\n         dispatch(thunks.fetchCards(packUId))\n      } catch (e) {}\n   },\n   updateCard: (data: UpdateCardType, packUId: string): AppThunk => async (dispatch) => {\n      try {\n         await cardsAPI.updateCard(data)\n         dispatch(cardsActions.showUpdateModal(false, ''))\n         dispatch(thunks.fetchCards(packUId))\n      } catch (e) {}\n   },\n   updateCardGrade: (data: RequestGradeType): AppThunk => async (dispatch) => {\n      try {\n         const response = await gradesAPI.updateGrade(data)\n         dispatch(\n            cardsActions.updateCardGrade({\n               updatedGrade: {\n                  grade: response.data.updatedGrade.grade,\n                  card_id: response.data.updatedGrade.card_id,\n                  shots: response.data.updatedGrade.shots,\n               },\n            }),\n         )\n      } catch (e) {}\n   },\n}\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\ntype SortButtonType = {\n   fetchProducts: () => void\n   setSortProducts: (data: string) => void\n}\n\nconst SortButton: React.FC<SortButtonType> = ({ fetchProducts, setSortProducts }) => {\n   const [sort, setSort] = useState(-1)\n   const dispatch = useDispatch()\n\n   const sortData = (x: number) => {\n      setSort(x)\n      dispatch(setSortProducts(x + 'name'))\n      dispatch(fetchProducts())\n   }\n\n   return (\n      <div>\n         <button style={{ background: sort === 1 ? 'lime' : undefined }} onClick={() => sortData(1)}>\n            /\\\n         </button>\n         <button style={{ background: sort === 0 ? 'lime' : undefined }} onClick={() => sortData(0)}>\n            \\/\n         </button>\n      </div>\n   )\n}\n\nexport default SortButton\n","import { instance } from '../../../s1-main/m3-dal/instance'\n\nexport const cardsAPI = {\n   getCards: async (\n      packUserId: string,\n      min?: number,\n      max?: number,\n      page?: number,\n      pageCount?: number,\n      cardQuestion?: string | null,\n      sortCards?: string,\n   ) => {\n      const response = await instance.get<ResultCardsType>(\n         `cards/card/?cardsPack_id=${packUserId}&` +\n            (cardQuestion && cardQuestion.length > 0 ? `cardQuestion=${cardQuestion}&` : '') +\n            (max ? `min=${min}&max=${max}&` : '') +\n            (page ? `page=${page}&pageCount=${pageCount}&` : '') +\n            (sortCards ? `sortCards=${sortCards}&` : ''),\n      )\n      return response.data\n   },\n   createCard: async (data: CreateCardType) => {\n      await instance.post('cards/card', { card: data })\n   },\n   deleteCard: async (id: string) => {\n      await instance.delete(`cards/card?id=${id}`)\n   },\n   updateCard: async (data: UpdateCardType) => {\n      await instance.put('cards/card', { card: data })\n   },\n}\n\nexport type UpdateCardType = {\n   _id: string\n   question: string\n   comments: string\n}\n\nexport type CreateCardType = {\n   cardsPack_id: string\n   question: string\n   answer: string\n   grade: number\n   shots: number\n   rating: number\n   answerImg: string\n   questionImg: string\n   questionVideo: string\n   answerVideo: string\n   type: string\n}\n\nexport type ApiCardsType = {\n   answer: string\n   question: string\n   cardsPack_id: string\n   grade: number\n   rating?: number\n   shots?: number\n   type?: string\n   user_id?: string\n   created?: string\n   updated: string\n   __v?: number\n   _id: string\n   questionImg?: string\n}\n\ntype ResultCardsType = {\n   cards: ApiCardsType[]\n   cardsTotalCount: number\n   maxGrade: number\n   minGrade: number\n   page: number\n   pageCount: number\n   packUserId: string\n}\n","import { instance } from '../../../s1-main/m3-dal/instance'\n\nexport const gradesAPI = {\n   updateGrade: (data: RequestGradeType) => {\n      return instance.put<ResponseGradeType>('/cards/grade', data)\n   },\n}\n\nexport type RequestGradeType = {\n   grade: number // 1..5 !!!\n   card_id: string\n}\n\nexport type ResponseGradeType = {\n   updatedGrade: {\n      _id?: string\n      cardsPack_id?: string\n      card_id: string\n      user_id?: string\n      grade: number\n      shots: number\n   }\n}\n","import { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { ApiCardsType, cardsAPI } from '../../f7-cards/c3-dal/cardsAPI'\nimport { Reducer } from 'redux'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\n\ntype InitialStateType = typeof initialState\n\ntype ActionTypes = InferActionsType<typeof cardActions>\n\nconst initialState = {\n   cards: [] as ApiCardsType[],\n   card: {} as ApiCardsType,\n   error: '',\n   pending: true,\n}\n\nenum CARD {\n   SET_CARD = 'learn/SET_CARD',\n   SET_CARDS = 'learn/SET_CARDS',\n   SET_ERROR = 'learn/SET_ERROR',\n   SET_IS_PENDING = 'learn/SET_IS_PENDING',\n   ERASE_CARDS = 'learn/ERASE_CARDS',\n}\n\nexport const learnReducer: Reducer<InitialStateType, ActionTypes> = (\n   state = initialState,\n   action,\n): InitialStateType => {\n   switch (action.type) {\n      case CARD.SET_CARD:\n         const getCard = (cards: ApiCardsType[]) => {\n            const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0)\n            const rand = Math.random() * sum\n            const res = cards.reduce(\n               (acc: { sum: number; id: number }, card, i) => {\n                  const newSum = acc.sum + (6 - card.grade) * (6 - card.grade)\n                  return { sum: newSum, id: newSum < rand ? i : acc.id }\n               },\n               { sum: 0, id: -1 },\n            )\n            return cards[res.id + 1]\n         }\n         return {\n            ...state,\n            card: getCard(action.cards),\n         }\n      case CARD.SET_ERROR:\n         return {\n            ...state,\n            error: action.error,\n         }\n      case CARD.SET_CARDS:\n         return {\n            ...state,\n            cards: action.cards,\n         }\n      case CARD.ERASE_CARDS:\n         return {\n            ...state,\n            cards: action.eraseArray,\n         }\n      case CARD.SET_IS_PENDING:\n         return {\n            ...state,\n            pending: action.pending,\n         }\n      default:\n         return state\n   }\n}\n\nexport const cardActions = {\n   setCard: (cards: ApiCardsType[]) => ({ type: CARD.SET_CARD as const, cards }),\n   setCards: (cards: ApiCardsType[]) => ({ type: CARD.SET_CARDS as const, cards }),\n   setError: (error: string) => ({ type: CARD.SET_ERROR as const, error }),\n   setPending: (pending: boolean) => ({ type: CARD.SET_IS_PENDING as const, pending }),\n   eraseCards: (eraseArray: ApiCardsType[]) => ({ type: CARD.ERASE_CARDS, eraseArray } as const),\n}\n\nexport const thunks = {\n   addCards: (id: string): AppThunk => async (dispatch) => {\n      try {\n         const response = await cardsAPI.getCards(id)\n         if (response.cards.length > 0) {\n            dispatch(cardActions.setCards(response.cards))\n            dispatch(cardActions.setCard(response.cards))\n         } else {\n            dispatch(cardActions.setError('This pack has no cards. Please choose another one'))\n         }\n      } catch (e) {\n         const error = e.response ? e.response.data.error : e.message + ', more details in the console'\n         dispatch(cardActions.setError(error))\n      } finally {\n         dispatch(cardActions.setPending(false))\n      }\n   },\n}\n","import React from 'react'\nimport './Table.scss'\nimport * as ReactBootStrap from 'react-bootstrap'\n\ntype PropsType<DataItem> = {\n   data: DataItem[]\n   model: {\n      renderTitle: () => JSX.Element\n      renderData: <T extends DataItem>(value: T, index: number) => JSX.Element\n   }\n}\n\nexport const Table = <T extends object>({ data, model }: PropsType<T>) => {\n   return (\n      <div>\n         <ReactBootStrap.Table striped bordered hover variant='dark'>\n            <thead>{model.renderTitle()}</thead>\n            <tbody>{data.map(model.renderData)}</tbody>\n         </ReactBootStrap.Table>\n      </div>\n   )\n}\n","import React from 'react'\nimport { Table } from '../../../../s1-main/m1-ui/u0-common/c9-Table/Table'\nimport { ApiPacksType } from '../../p3-dal/packsAPI'\n\ntype PropsType = {\n   packs: ApiPacksType[]\n   modelPacks: {\n      renderTitle: () => JSX.Element\n      renderData: (table: ApiPacksType, index: number) => JSX.Element\n   }\n}\n\nexport const Packs: React.FC<PropsType> = ({ packs, modelPacks }) => {\n   return (\n      <>\n         <Table data={packs} model={modelPacks} />\n      </>\n   )\n}\n","import React, { CSSProperties } from 'react'\n\nimport { Range, getTrackBackground } from 'react-range'\n\nexport const FlexStyle: CSSProperties = { display: 'flex' }\nexport const FlexAlignCenter: CSSProperties = { ...FlexStyle, alignItems: 'center' }\nexport const FlexCenterCenter: CSSProperties = { ...FlexAlignCenter, justifyContent: 'center' }\n\ntype DoubleRangeType = {\n   step: number\n   startData: number\n   endData: number\n   rangeData: Array<number>\n   rangeDataHandler: (value: Array<number>) => void\n}\n\nconst DoubleRange: React.FC<DoubleRangeType> = ({ step, startData, endData, rangeData, rangeDataHandler }) => {\n   return (\n      <Range\n         values={rangeData}\n         step={step}\n         min={startData}\n         max={endData}\n         onChange={(value) => {\n            rangeDataHandler(value)\n         }}\n         renderTrack={({ props, children }) => (\n            <div\n               onMouseDown={props.onMouseDown}\n               onTouchStart={props.onTouchStart}\n               style={{\n                  ...props.style,\n                  height: '36px',\n                  display: 'flex',\n                  width: '50%',\n                  margin: '30px',\n               }}>\n               <div\n                  ref={props.ref}\n                  style={{\n                     height: '5px',\n                     width: '100%',\n                     borderRadius: '4px',\n                     background: getTrackBackground({\n                        values: rangeData,\n                        colors: ['#ccc', '#548BF4', '#ccc'],\n                        min: startData,\n                        max: endData,\n                     }),\n                     alignSelf: 'center',\n                  }}>\n                  {children}\n               </div>\n            </div>\n         )}\n         renderThumb={({ index, props, isDragged }) => (\n            <div\n               {...props}\n               style={{\n                  ...props.style,\n                  height: '12px',\n                  width: '12px',\n                  borderRadius: '1px',\n                  backgroundColor: '#FFF',\n                  ...FlexCenterCenter,\n                  boxShadow: '0px 2px 6px #AAA',\n               }}>\n               <div\n                  style={{\n                     position: 'absolute',\n                     top: '-28px',\n                     color: '#fff',\n                     fontWeight: 'bold',\n                     fontSize: '14px',\n                     fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\n                     padding: '4px',\n                     borderRadius: '4px',\n                     backgroundColor: '#548BF4',\n                  }}>\n                  {rangeData[index].toFixed(0)}\n                  {/*// 10.12345 => 10; (1) => 10.1; (2) > 10.12; ...*/}\n               </div>\n               <div style={{ height: '16px', width: '5px', backgroundColor: isDragged ? '#548BF4' : '#CCC' }} />\n            </div>\n         )}\n      />\n   )\n}\n\nexport default DoubleRange\n","import React from 'react'\nimport DoubleRange from '../../c9-Range/r1-DoubleRange/DoubleRange'\nimport s from './SearchData.module.scss'\nimport { SuperInputText } from '../../c1-SuperInputText/SuperInputText'\nimport { SuperButton } from '../../c2-SuperButton/SuperButton'\nimport { FormikProps } from 'formik'\nimport { SearchFormikValuesType } from './SearchDataContainer'\n\ntype SearchDataType = {\n   formik: FormikProps<SearchFormikValuesType>\n   rangeData: Array<number>\n   rangeDataHandler: (data: Array<number>) => void\n   startData: number\n   endData: number\n   step: number\n}\n\nconst SearchData: React.FC<SearchDataType> = ({ formik, rangeData, rangeDataHandler, startData, endData, step }) => {\n   return (\n      <form onSubmit={formik.handleSubmit}>\n         <div className={s['SearchData__container']}>\n            <SuperInputText placeholder={'Search'} {...formik.getFieldProps('searchData')} />\n            <DoubleRange\n               step={step}\n               startData={startData}\n               endData={endData}\n               rangeData={rangeData}\n               rangeDataHandler={rangeDataHandler}\n            />\n            <SuperButton type='submit'>Search</SuperButton>\n         </div>\n      </form>\n   )\n}\n\nexport default SearchData\n","import React, { useEffect, useState } from 'react'\nimport SearchData from './SearchData'\nimport { useFormik } from 'formik'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { SuperCheckbox } from '../../c3-SuperCheckbox/SuperCheckbox'\nimport { AppStateType } from '../../../../m2-bll/store'\n\nexport type SearchFormikValuesType = {\n   searchData: string\n}\n\ntype SDCType = {\n   startRange: number\n   endRange: number\n   fetchData: () => void\n   searchValue: (data: string) => void\n   rangeValue: (minValue: number, maxValue: number) => void\n   getMyData?: (data: string) => void\n}\n\nconst SearchDataContainer: React.FC<SDCType> = ({\n   startRange,\n   endRange,\n   fetchData,\n   searchValue,\n   rangeValue,\n   getMyData,\n}) => {\n   const [rangeData, setRangeData] = useState<Array<number>>([startRange, endRange])\n   const [fetchMyData, setMyFetchData] = useState(false)\n   const userID = useSelector<AppStateType, string>((state) => state.login.userID)\n\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      return () => {\n         if (getMyData) {\n            dispatch(getMyData(''))\n         }\n      }\n   }, [])\n   const formik = useFormik({\n      initialValues: {\n         searchData: '',\n      },\n      onSubmit: (values) => {\n         dispatch(searchValue(values.searchData))\n         dispatch(rangeValue(rangeData[0], rangeData[1]))\n         fetchData()\n      },\n   })\n\n   const myDataHandler = () => {\n      setMyFetchData(!fetchMyData)\n      if (fetchMyData) {\n         getMyData && dispatch(getMyData(''))\n         fetchData()\n      } else {\n         getMyData && dispatch(getMyData(userID))\n         fetchData()\n      }\n   }\n\n   return (\n      <>\n         <SearchData\n            formik={formik}\n            rangeData={rangeData}\n            rangeDataHandler={setRangeData}\n            startData={0}\n            endData={10}\n            step={1}\n         />\n         {getMyData && (\n            <SuperCheckbox onChangeChecked={myDataHandler} checked={fetchMyData}>\n               Показать мои стопки\n            </SuperCheckbox>\n         )}\n      </>\n   )\n}\n\nexport default SearchDataContainer\n","import React, { CSSProperties, ReactNode } from 'react'\n\ninterface IPaginationProps {\n   page: number\n   pageCount: number\n   pageTotalCount: number\n   getPage: (newPage: number, newPageCount: number) => void\n   title?: ReactNode\n   paginationStyle?: CSSProperties\n   buttonStyle?: CSSProperties\n   selectStyle?: CSSProperties\n}\n\nconst Pagination: React.FC<IPaginationProps> = ({\n   page,\n   pageCount,\n   pageTotalCount,\n   getPage,\n   title = 'Pagination',\n   paginationStyle,\n   buttonStyle,\n   selectStyle,\n}) => {\n   let pages = []\n   const lastPage = Math.ceil(pageTotalCount / pageCount)\n\n   for (let i = 1; i <= lastPage; i++)\n      pages.push(\n         <button\n            key={i}\n            style={{ background: page === i ? 'lime' : undefined, ...buttonStyle }}\n            onClick={() => getPage(i, pageCount)}>\n            {i}\n         </button>,\n      )\n\n   // 1 ... 4 5 (6) 7 8 ... 11\n   if (page + 4 < lastPage) {\n      pages[page + 2] = (\n         <span key={page + 3} style={buttonStyle}>\n            - ... -\n         </span>\n      )\n      pages = pages.filter((p, i) => i < page + 3 || i === lastPage - 1)\n   }\n   if (page > 5) {\n      pages[1] = (\n         <span key={2} style={buttonStyle}>\n            - ... -\n         </span>\n      )\n      pages = pages.filter((p, i) => i < 2 || i > page - 4)\n   }\n\n   return (\n      <div style={{ margin: '0 10px', minHeight: '50px', ...paginationStyle }}>\n         {title}\n\n         <select value={pageCount} onChange={(e) => getPage(page, Number(e.currentTarget.value))} style={selectStyle}>\n            <option value={4}>4</option>\n            <option value={7}>7</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n            <option value={50}>50</option>\n         </select>\n         {pages}\n      </div>\n   )\n}\n\nexport default Pagination\n","import React, { CSSProperties } from 'react'\n\ninterface IModal {\n   enableBackground?: boolean\n   backgroundStyle?: CSSProperties\n   backgroundOnClick?: () => void\n\n   width: number\n   height: number\n   modalStyle?: CSSProperties\n   modalOnClick?: () => void\n\n   show: boolean\n}\n\nconst Modal: React.FC<IModal> = ({\n   enableBackground,\n   backgroundStyle,\n   backgroundOnClick = () => {},\n\n   width,\n   height,\n   modalStyle,\n   modalOnClick = () => {},\n\n   show,\n   children,\n}) => {\n   const top = `calc(50vh - ${height / 2}px)`\n   const left = `calc(50vw - ${width / 2}px)`\n\n   if (!show) return null\n\n   return (\n      <>\n         {enableBackground && (\n            <div\n               style={{\n                  position: 'fixed',\n                  top: '0px',\n                  left: '0px',\n                  width: '100vw',\n                  height: '100vh',\n\n                  background: 'black',\n                  opacity: 0.35,\n                  zIndex: 20,\n\n                  ...backgroundStyle,\n               }}\n               onClick={backgroundOnClick}\n            />\n         )}\n         <div\n            style={{\n               position: 'fixed',\n               top,\n               left,\n               width,\n               height,\n\n               background: '#241734',\n               zIndex: 21,\n\n               ...modalStyle,\n            }}\n            onClick={modalOnClick}>\n            {children}\n         </div>\n      </>\n   )\n}\n\nexport default Modal\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../../s1-main/m2-bll/store'\nimport { actions, InitialPacksStateType, thunks } from '../../../p2-bll/packsReducer'\nimport Modal from '../../../../../s1-main/m1-ui/u0-common/Atoms/Modals/Modal'\nimport { FormikErrors, useFormik } from 'formik'\nimport { SuperButton } from '../../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { SuperInputText } from '../../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { Error } from '../../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\nimport s from '../PacksContainer.module.scss'\nimport { ReactComponent as Loader } from '../../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\n\ntype FormValues = {\n   packName: string\n}\n\nexport const UpdatePackModal = () => {\n   const {\n      deleteModal: { packID },\n      updateModal: { showUpdateModal, packName },\n   } = useSelector<AppStateType, InitialPacksStateType>((state) => state.packs)\n   const dispatch = useDispatch()\n\n   const updateName = useFormik({\n      initialValues: {\n         packName: packName,\n      },\n      onSubmit: (values) => {\n         const { packName } = values\n         dispatch(thunks.updatePack({ name: packName, _id: packID }))\n      },\n      validate: (values) => {\n         const { packName } = values\n         const errors: FormikErrors<FormValues> = {}\n         if (packName.length < 1) {\n            errors.packName = 'Укажите название для пака'\n         }\n         return errors\n      },\n   })\n\n   return (\n      <>\n         <Modal\n            enableBackground={true}\n            backgroundOnClick={() => {\n               dispatch(actions.showUpdateModal(!showUpdateModal, ''))\n            }}\n            width={400}\n            height={300}\n            // modalOnClick={() => setShow(false)}\n            show={showUpdateModal}>\n            <div className={s.modal__container}>\n               <SuperButton\n                  onClick={() => {\n                     dispatch(actions.showUpdateModal(!showUpdateModal, ''))\n                  }}\n                  className={s.close__btn}>\n                  X\n               </SuperButton>\n               <h4>Укажите новое название</h4>\n               <form onSubmit={updateName.handleSubmit}>\n                  {updateName.isSubmitting ? (\n                     <Loader />\n                  ) : (\n                     <>\n                        <SuperInputText placeholder={'Set pack name'} {...updateName.getFieldProps('packName')} />\n                        {updateName.errors && <Error textError={updateName.errors.packName} />}\n                        <SuperButton\n                           disabled={!(updateName.isValid && updateName.dirty) || updateName.isSubmitting}\n                           type='submit'>\n                           Update\n                        </SuperButton>\n                     </>\n                  )}\n               </form>\n            </div>\n         </Modal>\n      </>\n   )\n}\n\nexport default UpdatePackModal\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FormikErrors, useFormik } from 'formik'\nimport s from '../PacksContainer.module.scss'\nimport Modal from '../../../../../s1-main/m1-ui/u0-common/Atoms/Modals/Modal'\nimport { SuperInputText } from '../../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { SuperButton } from '../../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { Error } from '../../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\nimport { AppStateType } from '../../../../../s1-main/m2-bll/store'\nimport { actions, InitialPacksStateType, thunks } from '../../../p2-bll/packsReducer'\nimport { ReactComponent as Loader } from '../../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\ntype FormValues = {\n   packName: string\n}\n\nexport const AddPackModal = () => {\n   const { showAddModal } = useSelector<AppStateType, InitialPacksStateType>((state) => state.packs)\n   const dispatch = useDispatch()\n\n   const setName = useFormik({\n      initialValues: {\n         packName: '',\n      },\n      onSubmit: (values) => {\n         const { packName } = values\n         dispatch(thunks.createPack(packName))\n      },\n      validate: (values) => {\n         const { packName } = values\n         const errors: FormikErrors<FormValues> = {}\n         if (packName.length < 1) {\n            errors.packName = 'Укажите название для пака'\n         }\n         return errors\n      },\n   })\n\n   return (\n      <>\n         <Modal\n            enableBackground={true}\n            backgroundOnClick={() => {\n               dispatch(actions.showAddModal(!showAddModal))\n            }}\n            width={400}\n            height={300}\n            // modalOnClick={() => setShow(false)}\n            show={showAddModal}>\n            <div className={s.modal__container}>\n               <SuperButton\n                  onClick={() => {\n                     dispatch(actions.showAddModal(!showAddModal))\n                  }}\n                  className={s.close__btn}>\n                  X\n               </SuperButton>\n               <h4>Укажите название карточной стопки</h4>\n               <form onSubmit={setName.handleSubmit}>\n                  {setName.isSubmitting ? (\n                     <Loader />\n                  ) : (\n                     <>\n                        <SuperInputText placeholder={'Set pack name'} {...setName.getFieldProps('packName')} />\n                        {setName.errors && <Error textError={setName.errors.packName} />}\n                        <SuperButton\n                           disabled={!(setName.isValid && setName.dirty) || setName.isSubmitting}\n                           type='submit'>\n                           Add Pack\n                        </SuperButton>\n                     </>\n                  )}\n               </form>\n            </div>\n         </Modal>\n      </>\n   )\n}\n\nexport default AddPackModal\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../../s1-main/m2-bll/store'\nimport { actions, InitialPacksStateType, thunks } from '../../../p2-bll/packsReducer'\nimport Modal from '../../../../../s1-main/m1-ui/u0-common/Atoms/Modals/Modal'\nimport { SuperButton } from '../../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport s from '../PacksContainer.module.scss'\n\nexport const DeletePackModal = () => {\n   const {\n      deleteModal: { showDeleteModal, packID },\n   } = useSelector<AppStateType, InitialPacksStateType>((state) => state.packs)\n   const dispatch = useDispatch()\n\n   return (\n      <>\n         <Modal\n            enableBackground={true}\n            backgroundOnClick={() => {\n               dispatch(actions.showDeleteModal(!showDeleteModal, ''))\n            }}\n            width={400}\n            height={300}\n            // modalOnClick={() => setShow(false)}\n            show={showDeleteModal}>\n            <div className={s.modal__container}>\n               <h4>Вы уверены что хотите удалить стопку?</h4>\n               <div className={s.button__container}>\n                  <SuperButton\n                     onClick={() => {\n                        dispatch(actions.showDeleteModal(!showDeleteModal, ''))\n                     }}>\n                     Отмена\n                  </SuperButton>\n                  <SuperButton onClick={() => dispatch(thunks.deletePack(packID))}>Удалить пак</SuperButton>\n               </div>\n            </div>\n         </Modal>\n      </>\n   )\n}\n\nexport default DeletePackModal\n","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { usePacks } from './usePacks'\nimport { Packs } from './Packs'\nimport { thunks as loginThunk } from '../../../f1-login/l2-bll/loginReducer'\nimport { actions, InitialPacksStateType, thunks } from '../../p2-bll/packsReducer'\nimport SearchDataContainer from '../../../../s1-main/m1-ui/u0-common/Atoms/SearchData/SearchDataContainer'\nimport Pagination from '../../../../s1-main/m1-ui/u0-common/Atoms/Pagination/Pagination'\nimport { Redirect } from 'react-router-dom'\nimport { PATH } from '../../../../s1-main/m1-ui/u3-routes/Routes'\nimport UpdatePackModal from './Modals/UpdatePackModal'\nimport AddPackModal from './Modals/AddPackModal'\nimport DeletePackModal from './Modals/DeletePackModal'\n\nexport const PacksContainer = () => {\n   const name = useSelector<AppStateType, string>((state) => state.login.name)\n   const isLoggedIn = useSelector<AppStateType, string>((state) => state.login.isLoggedIn)\n   const {\n      packs,\n      settings: { page, pageCount, packTotalCount },\n      showAddModal,\n      deleteModal: { showDeleteModal },\n      updateModal: { showUpdateModal },\n   } = useSelector<AppStateType, InitialPacksStateType>((state) => state.packs)\n   const { modelPacks } = usePacks()\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      dispatch(thunks.fetchPacks())\n      if (!name) dispatch(loginThunk.meTC())\n   }, [dispatch, name])\n\n   const getPage = (newPage: number, newPageCount: number) => {\n      dispatch(thunks.fetchPacks(newPage, newPageCount))\n   }\n\n   const handlerDispatch = () => {\n      dispatch(thunks.fetchPacks())\n   }\n\n   if (isLoggedIn === 'notLogged') {\n      return <Redirect to={PATH.LOGIN} />\n   }\n\n   return (\n      <>\n         {showDeleteModal && <DeletePackModal />}\n         {showAddModal && <AddPackModal />}\n         {showUpdateModal && <UpdatePackModal />}\n\n         <SearchDataContainer\n            fetchData={handlerDispatch}\n            startRange={0}\n            endRange={10}\n            searchValue={actions.searchPacks}\n            rangeValue={actions.setMinMaxPack}\n            getMyData={actions.getMyPack}\n         />\n\n         <Packs packs={packs} modelPacks={modelPacks} />\n         <Pagination page={page} pageCount={pageCount} pageTotalCount={packTotalCount} getPage={getPage} />\n      </>\n   )\n}\n","import React from 'react'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { NavLink } from 'react-router-dom'\nimport { ApiPacksType } from '../../p3-dal/packsAPI'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { actions, InitialPacksStateType, thunks } from '../../p2-bll/packsReducer'\nimport SortButton from '../../../../s1-main/m1-ui/u0-common/Atoms/SortButton/SortButton'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { cardsActions } from '../../../f7-cards/c2-bll/cardsReducer'\n\nexport const usePacks = () => {\n   const dispatch = useDispatch()\n   const {\n      showAddModal,\n      deleteModal: { showDeleteModal },\n      updateModal: { showUpdateModal },\n   } = useSelector<AppStateType, InitialPacksStateType>((state) => state.packs)\n   const userID = useSelector<AppStateType, string>((state) => state.login.userID)\n\n   const modelPacks = {\n      renderTitle: () => {\n         const headerNames = ['Name', 'CardsCount', 'update', 'url']\n\n         return (\n            <tr>\n               {headerNames.map((header, index) => {\n                  if (header === 'Name') {\n                     return (\n                        <th key={index}>\n                           <div>\n                              {header}\n                              <SortButton fetchProducts={thunks.fetchPacks} setSortProducts={actions.sortPacks} />\n                           </div>\n                        </th>\n                     )\n                  }\n                  return <th key={index}>{header}</th>\n               })}\n               <th>\n                  <SuperButton\n                     onClick={() => {\n                        dispatch(actions.showAddModal(!showAddModal))\n                     }}>\n                     ADD\n                  </SuperButton>\n               </th>\n            </tr>\n         )\n      },\n      renderData: (pack: ApiPacksType, index: number) => {\n         return (\n            <tr key={index}>\n               <td>{pack.name}</td>\n               <td>{pack.cardsCount}</td>\n               <td>{pack.updated.slice(5, 16)}</td>\n               <td>{pack.deckCover}</td>\n               <td>\n                  {userID !== pack.user_id ? (\n                     ''\n                  ) : (\n                     <>\n                        <SuperButton\n                           onClick={() => {\n                              dispatch(actions.showDeleteModal(!showDeleteModal, pack._id))\n                           }}>\n                           del\n                        </SuperButton>\n                        <SuperButton\n                           onClick={() => {\n                              dispatch(actions.showUpdateModal(!showUpdateModal, pack._id))\n                           }}>\n                           update\n                        </SuperButton>\n                     </>\n                  )}\n\n                  <NavLink\n                     to={`/cards/${pack._id}`}\n                     onClick={() => {\n                        dispatch(cardsActions.getUserID(pack.user_id || ''))\n                     }}>\n                     cards\n                  </NavLink>\n                  <NavLink style={{ marginLeft: '20px' }} to={`/learn/${pack._id}`}>\n                     learn\n                  </NavLink>\n               </td>\n            </tr>\n         )\n      },\n   }\n   return { modelPacks }\n}\n","import React from 'react'\nimport { PacksContainer } from './u1-packs/PacksContainer'\n\nexport const PacksPage = () => {\n   return (\n      <>\n         <PacksContainer />\n      </>\n   )\n}\n","import React from 'react'\nimport { Table } from '../../../../s1-main/m1-ui/u0-common/c9-Table/Table'\nimport { ApiCardsType } from '../../c3-dal/cardsAPI'\n\ntype PropsType = {\n   cards: ApiCardsType[]\n   modelCards: {\n      renderTitle: () => JSX.Element\n      renderData: (table: ApiCardsType, index: number) => JSX.Element\n   }\n}\n\n// some empty comment\nexport const Cards: React.FC<PropsType> = ({ cards, modelCards }) => {\n   return (\n      <>\n         <Table data={cards} model={modelCards} />\n      </>\n   )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FormikErrors, useFormik } from 'formik'\nimport s from './CardModal.module.scss'\nimport Modal from '../../../../../s1-main/m1-ui/u0-common/Atoms/Modals/Modal'\nimport { SuperInputText } from '../../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { SuperButton } from '../../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { Error } from '../../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\nimport { AppStateType } from '../../../../../s1-main/m2-bll/store'\nimport { cardsActions, InitialCardsType, thunks } from '../../../c2-bll/cardsReducer'\nimport { ReactComponent as Loader } from '../../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\n\ntype AddCardModalType = {\n   PackID: string\n}\n\ntype FormValues = {\n   question: string\n   answer: string\n}\n\nexport const AddCardModal: React.FC<AddCardModalType> = ({ PackID }) => {\n   const { showCardsModal } = useSelector<AppStateType, InitialCardsType>((state) => state.cards)\n   const dispatch = useDispatch()\n   const setName = useFormik({\n      initialValues: {\n         question: '',\n         answer: '',\n      },\n      onSubmit: (values) => {\n         const { question, answer } = values\n         dispatch(thunks.createCard(question, answer, PackID))\n      },\n      validate: (values) => {\n         const { question, answer } = values\n         const errors: FormikErrors<FormValues> = {}\n         if (question.length < 1) {\n            errors.question = 'Укажите вопрос'\n         }\n         if (answer.length < 1) {\n            errors.answer = 'Укажите ответ'\n         }\n         return errors\n      },\n   })\n\n   return (\n      <>\n         <Modal\n            enableBackground={true}\n            backgroundOnClick={() => {\n               dispatch(cardsActions.showCardsModal(!showCardsModal))\n            }}\n            width={400}\n            height={400}\n            // modalOnClick={() => setShow(false)}\n            show={showCardsModal}>\n            <div className={s.modal__container}>\n               <SuperButton\n                  onClick={() => {\n                     dispatch(cardsActions.showCardsModal(!showCardsModal))\n                  }}\n                  className={s.close__btn}>\n                  X\n               </SuperButton>\n               <h4>Укажите параметры карты</h4>\n               <form onSubmit={setName.handleSubmit}>\n                  {setName.isSubmitting ? (\n                     <Loader />\n                  ) : (\n                     <>\n                        <SuperInputText placeholder={'Укажите вопрос'} {...setName.getFieldProps('question')} />\n                        {setName.errors && <Error textError={setName.errors.question} />}\n                        <SuperInputText placeholder={'Укажите ответ'} {...setName.getFieldProps('answer')} />\n                        {setName.errors && <Error textError={setName.errors.answer} />}\n                        <SuperButton\n                           disabled={!(setName.isValid && setName.dirty) || setName.isSubmitting}\n                           type='submit'>\n                           Add Card\n                        </SuperButton>\n                     </>\n                  )}\n               </form>\n            </div>\n         </Modal>\n      </>\n   )\n}\n\nexport default AddCardModal\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../../s1-main/m2-bll/store'\nimport Modal from '../../../../../s1-main/m1-ui/u0-common/Atoms/Modals/Modal'\nimport { SuperButton } from '../../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport s from './CardModal.module.scss'\nimport { cardsActions, InitialCardsType, thunks } from '../../../c2-bll/cardsReducer'\n\ntype AddCardModalType = {\n   PackID: string\n}\n\nexport const DeleteCardModal: React.FC<AddCardModalType> = ({ PackID }) => {\n   const {\n      deleteModal: { showDeleteModal, cardID },\n   } = useSelector<AppStateType, InitialCardsType>((state) => state.cards)\n   const dispatch = useDispatch()\n\n   return (\n      <>\n         <Modal\n            enableBackground={true}\n            backgroundOnClick={() => {\n               dispatch(cardsActions.showDeleteModal(!showDeleteModal, ''))\n            }}\n            width={400}\n            height={300}\n            // modalOnClick={() => setShow(false)}\n            show={showDeleteModal}>\n            <div className={s.modal__container}>\n               <h4>Вы уверены что хотите удалить стопку?</h4>\n               <div className={s.button__container}>\n                  <SuperButton\n                     onClick={() => {\n                        dispatch(cardsActions.showDeleteModal(!showDeleteModal, ''))\n                     }}>\n                     Отмена\n                  </SuperButton>\n                  <SuperButton onClick={() => dispatch(thunks.deleteCard(cardID, PackID))}>\n                     Удалить карточку\n                  </SuperButton>\n               </div>\n            </div>\n         </Modal>\n      </>\n   )\n}\n\nexport default DeleteCardModal\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../../s1-main/m2-bll/store'\nimport { cardsActions, InitialCardsType, thunks } from '../../../c2-bll/cardsReducer'\nimport Modal from '../../../../../s1-main/m1-ui/u0-common/Atoms/Modals/Modal'\nimport { FormikErrors, useFormik } from 'formik'\nimport { SuperButton } from '../../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { SuperInputText } from '../../../../../s1-main/m1-ui/u0-common/c1-SuperInputText/SuperInputText'\nimport { Error } from '../../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\nimport s from './CardModal.module.scss'\nimport { ReactComponent as Loader } from '../../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\n\ntype FormValues = {\n   question: string\n   comments: string\n}\ntype AddCardModalType = {\n   PackID: string\n}\n\nexport const UpdateCardModal: React.FC<AddCardModalType> = ({ PackID }) => {\n   const {\n      updateModal: { showUpdateModal, question, comments, _id },\n   } = useSelector<AppStateType, InitialCardsType>((state) => state.cards)\n   const dispatch = useDispatch()\n\n   const updateName = useFormik({\n      initialValues: {\n         question: question,\n         comments: comments,\n      },\n      onSubmit: (values) => {\n         const { question, comments } = values\n         dispatch(thunks.updateCard({ _id, question, comments }, PackID))\n      },\n      validate: (values) => {\n         const { question } = values\n         const errors: FormikErrors<FormValues> = {}\n         if (question.length < 1) {\n            errors.question = 'Укажите название для пака'\n         }\n         return errors\n      },\n   })\n\n   return (\n      <>\n         <Modal\n            enableBackground={true}\n            backgroundOnClick={() => {\n               dispatch(cardsActions.showUpdateModal(!showUpdateModal, ''))\n            }}\n            width={400}\n            height={400}\n            // modalOnClick={() => setShow(false)}\n            show={showUpdateModal}>\n            <div className={s.modal__container}>\n               <SuperButton\n                  onClick={() => {\n                     dispatch(cardsActions.showUpdateModal(!showUpdateModal, ''))\n                  }}\n                  className={s.close__btn}>\n                  X\n               </SuperButton>\n               <h4>Укажите новое название</h4>\n               <form onSubmit={updateName.handleSubmit}>\n                  {updateName.isSubmitting ? (\n                     <Loader />\n                  ) : (\n                     <>\n                        <SuperInputText placeholder={'Update question'} {...updateName.getFieldProps('question')} />\n                        {updateName.errors && <Error textError={updateName.errors.question} />}\n                        <SuperInputText placeholder={'Your comments'} {...updateName.getFieldProps('comments')} />\n                        <SuperButton disabled={!updateName.dirty && updateName.isSubmitting} type='submit'>\n                           Update\n                        </SuperButton>\n                     </>\n                  )}\n               </form>\n            </div>\n         </Modal>\n      </>\n   )\n}\n\nexport default UpdateCardModal\n","import React, { useEffect } from 'react'\nimport { Cards } from './Cards'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { useCards } from './useCards'\nimport { cardsActions, InitialCardsType, thunks } from '../../c2-bll/cardsReducer'\nimport { Redirect, useParams } from 'react-router-dom'\nimport { PATH } from '../../../../s1-main/m1-ui/u3-routes/Routes'\nimport Pagination from '../../../../s1-main/m1-ui/u0-common/Atoms/Pagination/Pagination'\nimport SearchDataContainer from '../../../../s1-main/m1-ui/u0-common/Atoms/SearchData/SearchDataContainer'\nimport AddCardModal from './Modals/AddCardModal'\nimport DeleteCardModal from './Modals/DeleteCardModal'\nimport UpdateCardModal from './Modals/UpdateCardModel'\n\nexport const CardsContainer = () => {\n   const isLoggedIn = useSelector<AppStateType, string>((state) => state.login.isLoggedIn)\n   const {\n      cards,\n      settings: { page, pageCount, cardsTotalCount },\n      showCardsModal,\n      deleteModal: { showDeleteModal },\n      updateModal: { showUpdateModal },\n   } = useSelector<AppStateType, InitialCardsType>((state) => state.cards)\n   const { id } = useParams<{ id: string }>()\n   const { modelCards } = useCards(id)\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      dispatch(thunks.fetchCards(id))\n   }, [dispatch])\n\n   const getPage = (newPage: number, newPageCount: number) => {\n      dispatch(thunks.fetchCards(id, newPage, newPageCount))\n   }\n\n   if (isLoggedIn === 'notLogged') {\n      return <Redirect to={PATH.LOGIN} />\n   }\n\n   const handlerDispatch = () => {\n      dispatch(thunks.fetchCards(id))\n   }\n\n   return (\n      <>\n         {showCardsModal && <AddCardModal PackID={id} />}\n         {showDeleteModal && <DeleteCardModal PackID={id} />}\n         {showUpdateModal && <UpdateCardModal PackID={id} />}\n         <SearchDataContainer\n            startRange={0}\n            endRange={10}\n            fetchData={handlerDispatch}\n            searchValue={cardsActions.searchCards}\n            rangeValue={cardsActions.setMinMaxCards}\n         />\n         <Cards cards={cards} modelCards={modelCards} />\n         <Pagination page={page} pageCount={pageCount} pageTotalCount={cardsTotalCount} getPage={getPage} />\n      </>\n   )\n}\n","import React from 'react'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { ApiCardsType } from '../../c3-dal/cardsAPI'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { cardsActions, InitialCardsType } from '../../c2-bll/cardsReducer'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\n\nexport const useCards = (id: string) => {\n   const {\n      showCardsModal,\n      deleteModal: { showDeleteModal },\n      updateModal: { showUpdateModal },\n   } = useSelector<AppStateType, InitialCardsType>((state) => state.cards)\n   const userID = useSelector<AppStateType, string>((state) => state.login.userID)\n   const packUserID = useSelector<AppStateType, string>((state) => state.cards.settings.packUserId)\n   const dispatch = useDispatch()\n   const modelCards = {\n      renderTitle: () => {\n         const headerNames = ['question', 'answer', 'Grade', 'Shots', 'updated', 'Covers']\n\n         return (\n            <tr>\n               {headerNames.map((header, index) => (\n                  <th key={index}>{header}</th>\n               ))}\n               <th>\n                  {userID !== packUserID ? (\n                     ''\n                  ) : (\n                     <SuperButton onClick={() => dispatch(cardsActions.showCardsModal(!showCardsModal))}>\n                        ADD\n                     </SuperButton>\n                  )}\n               </th>\n            </tr>\n         )\n      },\n      renderData: (card: ApiCardsType, index: number) => {\n         return (\n            <tr key={index}>\n               <td>{card.question}</td>\n               <td>{card.answer}</td>\n               <td>{card.grade}</td>\n               <td>{card.shots}</td>\n               <td>{card.updated.slice(5, 16)}</td>\n               <td>{card.questionImg}</td>\n               <td>\n                  {userID !== packUserID ? (\n                     ''\n                  ) : (\n                     <>\n                        <SuperButton onClick={() => dispatch(cardsActions.showDeleteModal(!showDeleteModal, card._id))}>\n                           del\n                        </SuperButton>\n                        <SuperButton onClick={() => dispatch(cardsActions.showUpdateModal(!showUpdateModal, card._id))}>\n                           update\n                        </SuperButton>\n                     </>\n                  )}\n               </td>\n            </tr>\n         )\n      },\n   }\n\n   return { modelCards }\n}\n","import React from 'react'\nimport { CardsContainer } from './u1-cards/CardsContainer'\n\nexport const CardsPage = () => {\n   return (\n      <>\n         <CardsContainer />\n      </>\n   )\n}\n","import React from 'react'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\n\ntype PropsType = {\n   handlerAddGrade: (grade: number) => void\n}\n\nexport const Grades: React.FC<PropsType> = ({ handlerAddGrade }) => {\n   return (\n      <>\n         <SuperButton onClick={() => handlerAddGrade(1)} children={'думал не думал'} />\n         <SuperButton onClick={() => handlerAddGrade(2)} children={'заплужил'} />\n         <SuperButton onClick={() => handlerAddGrade(3)} children={'долго думал'} />\n         <SuperButton onClick={() => handlerAddGrade(4)} children={'долго не думал'} />\n         <SuperButton onClick={() => handlerAddGrade(5)} children={'не долго думал'} />\n      </>\n   )\n}\n","import React from 'react'\nimport { Grades } from './Grades'\nimport { useDispatch } from 'react-redux'\nimport { thunks } from '../../../f7-cards/c2-bll/cardsReducer'\n\nexport type PropsGradesPageType = {\n   card_id: string\n}\n\nexport const GradesContainer: React.FC<PropsGradesPageType> = ({ card_id }) => {\n   const dispatch = useDispatch()\n\n   const handlerAddGrade = (grade: number) => {\n      dispatch(thunks.updateCardGrade({ grade, card_id }))\n   }\n   return (\n      <>\n         <Grades handlerAddGrade={handlerAddGrade} />\n      </>\n   )\n}\n","import React from 'react'\nimport { GradesContainer } from './u1-grades/GradesContainer'\n\nexport type PropsGradesPageType = {\n   card_id: string\n}\n\nexport const GradesPage: React.FC<PropsGradesPageType> = ({ card_id }) => {\n   return (\n      <>\n         <GradesContainer card_id={card_id} />\n      </>\n   )\n}\n","import React from 'react'\nimport { ApiCardsType } from '../../../f7-cards/c3-dal/cardsAPI'\nimport { SuperButton } from '../../../../s1-main/m1-ui/u0-common/c2-SuperButton/SuperButton'\nimport { GradesPage } from '../../../f9-grades/g1-ui/GradesPage'\n\ntype PropsType = {\n   card: ApiCardsType\n   isChecked: boolean\n   setChecked: (checked: boolean) => void\n   nextQuestion: () => void\n}\n\nexport const Learn: React.FC<PropsType> = ({ card, nextQuestion, setChecked, isChecked }) => {\n   return (\n      <>\n         <h2>Let's learn</h2>\n         <span>{card.question}</span>\n         <SuperButton onClick={() => setChecked(true)} children={'Show answer'} />\n         {isChecked && (\n            <>\n               <span>{card.answer}</span>\n               <GradesPage card_id={card._id} />\n               <SuperButton onClick={() => nextQuestion()} children={'Next question'} />\n            </>\n         )}\n      </>\n   )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Learn } from './Learn'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../../s1-main/m2-bll/store'\nimport { ApiCardsType } from '../../../f7-cards/c3-dal/cardsAPI'\nimport { useParams } from 'react-router-dom'\nimport { ReactComponent as Loader } from '../../../../s1-main/m1-ui/u0-common/c8-Assets/Spin.svg'\nimport { Error } from '../../../../s1-main/m1-ui/u0-common/c7-Error/Error'\nimport { cardActions, thunks } from '../../l2-bll/learnReducer'\n\nexport const LearnContainer: React.FC = () => {\n   const [isChecked, setChecked] = useState<boolean>(false)\n   const cards = useSelector<AppStateType, ApiCardsType[]>((store) => store.learn.cards)\n   const card = useSelector<AppStateType, ApiCardsType>((store) => store.learn.card)\n   const error = useSelector<AppStateType, string>((store) => store.learn.error)\n   const pending = useSelector<AppStateType, boolean>((store) => store.learn.pending)\n   const { id } = useParams<{ id: string }>()\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      dispatch(thunks.addCards(id))\n\n      return () => {\n         dispatch(cardActions.eraseCards([] as ApiCardsType[]))\n         dispatch(cardActions.setError(''))\n         dispatch(cardActions.setPending(true))\n      }\n   }, [dispatch, id])\n\n   const nextQuestion = () => {\n      setChecked(false)\n      dispatch(cardActions.setCard(cards))\n   }\n\n   if (pending) {\n      return <Loader />\n   }\n\n   return error ? (\n      <Error textError={error} />\n   ) : (\n      <>\n         <Learn card={card} setChecked={setChecked} nextQuestion={nextQuestion} isChecked={isChecked} />\n      </>\n   )\n}\n","import React from 'react'\nimport { LearnContainer } from './u1-learn/LearnContainer'\n\nexport const LearnPage: React.FC = () => {\n   return (\n      <>\n         <LearnContainer />\n      </>\n   )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { LoginPage } from '../../../s2-features/f1-login/l1-ui/LoginPage'\nimport { Page404 } from './Page404'\nimport { RegistrationPage } from '../../../s2-features/f2-registration/r1-ui/RegistrationPage'\nimport { ComponentsTestRack } from '../u0-common/ComponentsTestRack'\nimport { ProfilePage } from '../../../s2-features/f3-profile/p1-ui/ProfilePage'\nimport PasswordRecoveryPage from '../../../s2-features/f4-passwordRecovery/pr1-ui/PasswordRecoveryPage'\nimport NewPasswordEntryPage from '../../../s2-features/f5-newPasswordEntry/npe1-ui/NewPasswordEntryPage'\nimport { PacksPage } from '../../../s2-features/f6-packs/p1-ui/PacksPage'\nimport { CardsPage } from '../../../s2-features/f7-cards/c1-ui/CardsPage'\nimport { LearnPage } from '../../../s2-features/f8-learn/l1-ui/LearnPage'\n\nexport const PATH = {\n   LOGIN: '/',\n   REGISTRATION: '/registration',\n   PROFILE: '/profile',\n   PASSWORD_RECOVERY: '/password-recovery',\n   NEW_PASSWORD_ENTRY: '/set-new-password/:token',\n   COMPONENT_TEST_RACK: '/component-test-rack',\n   PACKS: '/packs',\n   CARDS: '/cards/:id',\n   LEARN: '/learn/:id',\n}\n\nexport const Routes = () => {\n   return (\n      <Switch>\n         <Route path={PATH.LOGIN} exact render={() => <LoginPage />} />\n         <Route path={PATH.REGISTRATION} exact render={() => <RegistrationPage />} />\n         <Route path={PATH.PROFILE} exact render={() => <ProfilePage />} />\n         <Route path={PATH.PASSWORD_RECOVERY} exact render={() => <PasswordRecoveryPage />} />\n         <Route path={PATH.NEW_PASSWORD_ENTRY} render={() => <NewPasswordEntryPage />} />\n         <Route path={PATH.COMPONENT_TEST_RACK} exact render={() => <ComponentsTestRack />} />\n         <Route path={PATH.PACKS} exact render={() => <PacksPage />} />\n         <Route path={PATH.CARDS} render={() => <CardsPage />} />\n         <Route path={PATH.LEARN} render={() => <LearnPage />} />\n         <Route path={'/404'} render={() => <Page404 />} />\n\n         <Redirect from={'*'} to={'/404'} />\n      </Switch>\n   )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { PATH } from '../u3-routes/Routes'\n\nexport const Header = () => {\n   return (\n      <div>\n         Header\n         <NavLink to={PATH.LOGIN}>Login_/</NavLink>\n         <NavLink to={PATH.REGISTRATION}>Registration_/</NavLink>\n         <NavLink to={PATH.PROFILE}>Profile_/</NavLink>\n         <NavLink to={PATH.PASSWORD_RECOVERY}>Password recovery_/</NavLink>\n         <NavLink to={PATH.NEW_PASSWORD_ENTRY}>New password entry_/</NavLink>\n         <NavLink to={PATH.CARDS}>Cards_/</NavLink>\n         <NavLink to={PATH.COMPONENT_TEST_RACK}>Component test rack_/</NavLink>\n         <NavLink to={PATH.PACKS}>Packs_/</NavLink>\n      </div>\n   )\n}\n","import React from 'react'\nimport { Header } from '../u4-header/Header'\nimport { Routes } from '../u3-routes/Routes'\nimport s from './Main.module.scss'\n\nexport const Main = () => {\n   return (\n      <div className={s.mainContainer}>\n         Main\n         <Header />\n         <Routes />\n      </div>\n   )\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { loginReducer } from '../../s2-features/f1-login/l2-bll/loginReducer'\nimport { profileReducer } from '../../s2-features/f3-profile/p2-bll/profileReducer'\nimport { passwordRecoveryReducer } from '../../s2-features/f4-passwordRecovery/pr2-bll/passwordRecoveryReducer'\nimport { registrationReducer } from '../../s2-features/f2-registration/r2-bll/registrationReducer'\nimport { updatePasswordReducer } from '../../s2-features/f5-newPasswordEntry/npe2-bll/updatePasswordReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { packsReducer } from '../../s2-features/f6-packs/p2-bll/packsReducer'\nimport { cardsReducer } from '../../s2-features/f7-cards/c2-bll/cardsReducer'\nimport { learnReducer } from '../../s2-features/f8-learn/l2-bll/learnReducer'\n\nconst reducers = combineReducers({\n   login: loginReducer,\n   profile: profileReducer,\n   composeWithDevTools,\n   registration: registrationReducer,\n   passRecovery: passwordRecoveryReducer,\n   updatePass: updatePasswordReducer,\n   packs: packsReducer,\n   cards: cardsReducer,\n   learn: learnReducer,\n})\n\nexport const store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n\nexport type AppStateType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store\n","import { InferActionsType } from '../../../s1-main/m2-bll/actions'\nimport { Reducer } from 'redux'\nimport { AppThunk } from '../../../s1-main/m3-dal/thunks'\n\ntype InitialStateType = typeof initialState\n\ntype ActionTypes = InferActionsType<typeof actions>\n\nconst initialState = {}\n\nexport const profileReducer: Reducer<InitialStateType, ActionTypes> = (state, action): InitialStateType => {\n   switch (action.type) {\n      case 'SOME':\n         return { ...state }\n      default:\n         return { ...state }\n   }\n}\n\nconst actions = {\n   someAC: () => ({ type: 'SOME' }),\n}\n\nconst thunks = {\n   someTC: (): AppThunk => (dispatch) => {},\n}\n","import React from 'react'\nimport { Main } from '../u2-main/Main'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store } from '../../m2-bll/store'\n\nexport const App = () => {\n   return (\n      <Provider store={store}>\n         <HashRouter>\n            <div>\n               <Main />\n            </div>\n         </HashRouter>\n      </Provider>\n   )\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n   if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n         getCLS(onPerfEntry)\n         getFID(onPerfEntry)\n         getFCP(onPerfEntry)\n         getLCP(onPerfEntry)\n         getTTFB(onPerfEntry)\n      })\n   }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { App } from './s1-main/m1-ui/u1-app/App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from './s1-main/m2-bll/store'\n\nReactDOM.render(\n   <Provider store={store}>\n      <App />\n   </Provider>,\n   document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}